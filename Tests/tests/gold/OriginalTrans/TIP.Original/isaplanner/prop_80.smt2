(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_4 ) (Z_5 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_3 (Nat_1) Bool)
(declare-fun isZ_4 (Nat_1) Bool)
(assert (forall ((x_54 Nat_1))
	(unS_1 x_54 (Z_5 x_54))))
(assert (isZ_3 Z_4))
(assert (forall ((x_56 Nat_1))
	(isZ_4 (Z_5 x_56))))
(assert (forall ((x_57 Nat_1))
	(diseqNat_1 Z_4 (Z_5 x_57))))
(assert (forall ((x_58 Nat_1))
	(diseqNat_1 (Z_5 x_58) Z_4)))
(assert (forall ((x_59 Nat_1) (x_60 Nat_1))
	(=> (diseqNat_1 x_59 x_60)
	    (diseqNat_1 (Z_5 x_59) (Z_5 x_60)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_4 y_4)))
(assert (forall ((r_0 Nat_1) (x_30 Nat_1) (y_4 Nat_1))
	(=> (add_0 r_0 x_30 y_4)
	    (add_0 (Z_5 r_0) (Z_5 x_30) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_4 Z_4 y_4)))
(assert (forall ((r_0 Nat_1) (x_30 Nat_1) (y_4 Nat_1))
	(=> (minus_0 r_0 x_30 y_4)
	    (minus_0 (Z_5 r_0) (Z_5 x_30) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_4 y_4)))
(assert (forall ((x_30 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_30 y_4)
	    (le_0 (Z_5 x_30) (Z_5 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_4)))
(assert (forall ((x_30 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_30 y_4)
	    (ge_0 (Z_5 x_30) (Z_5 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_4 (Z_5 y_4))))
(assert (forall ((x_30 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_30 y_4)
	    (lt_0 (Z_5 x_30) (Z_5 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (Z_5 y_4) Z_4)))
(assert (forall ((x_30 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_30 y_4)
	    (gt_0 (Z_5 x_30) (Z_5 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_0 Z_4 Z_4 y_4)))
(assert (forall ((r_0 Nat_1) (x_30 Nat_1) (y_4 Nat_1) (z_6 Nat_1))
	(=>	(and (mult_0 r_0 x_30 y_4)
			(add_0 z_6 r_0 y_4))
		(mult_0 z_6 (Z_5 x_30) y_4))))
(assert (forall ((x_30 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_30 y_4)
	    (div_0 Z_4 x_30 y_4))))
(assert (forall ((r_0 Nat_1) (x_30 Nat_1) (y_4 Nat_1) (z_6 Nat_1))
	(=>	(and (ge_0 x_30 y_4)
			(minus_0 z_6 x_30 y_4)
			(div_0 r_0 z_6 y_4))
		(div_0 (Z_5 r_0) x_30 y_4))))
(assert (forall ((x_30 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_30 y_4)
	    (mod_0 x_30 x_30 y_4))))
(assert (forall ((r_0 Nat_1) (x_30 Nat_1) (y_4 Nat_1) (z_6 Nat_1))
	(=>	(and (ge_0 x_30 y_4)
			(minus_0 z_6 x_30 y_4)
			(mod_0 r_0 z_6 y_4))
		(mod_0 r_0 x_30 y_4))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_32 Nat_1) (x_33 list_0))
	(head_1 x_32 (cons_0 x_32 x_33))))
(assert (forall ((x_32 Nat_1) (x_33 list_0))
	(tail_1 x_33 (cons_0 x_32 x_33))))
(assert (isnil_0 nil_0))
(assert (forall ((x_35 Nat_1) (x_36 list_0))
	(iscons_0 (cons_0 x_35 x_36))))
(assert (forall ((x_37 Nat_1) (x_38 list_0))
	(diseqlist_0 nil_0 (cons_0 x_37 x_38))))
(assert (forall ((x_39 Nat_1) (x_40 list_0))
	(diseqlist_0 (cons_0 x_39 x_40) nil_0)))
(assert (forall ((x_41 Nat_1) (x_42 list_0) (x_43 Nat_1) (x_44 list_0))
	(=> (diseqNat_1 x_41 x_43)
	    (diseqlist_0 (cons_0 x_41 x_42) (cons_0 x_43 x_44)))))
(assert (forall ((x_41 Nat_1) (x_42 list_0) (x_43 Nat_1) (x_44 list_0))
	(=> (diseqlist_0 x_42 x_44)
	    (diseqlist_0 (cons_0 x_41 x_42) (cons_0 x_43 x_44)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_46 Nat_0))
	(projS_1 x_46 (S_0 x_46))))
(assert (isZ_2 Z_0))
(assert (forall ((x_48 Nat_0))
	(isS_0 (S_0 x_48))))
(assert (forall ((x_49 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_49))))
(assert (forall ((x_50 Nat_0))
	(diseqNat_0 (S_0 x_50) Z_0)))
(assert (forall ((x_51 Nat_0) (x_52 Nat_0))
	(=> (diseqNat_0 x_51 x_52)
	    (diseqNat_0 (S_0 x_51) (S_0 x_52)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_10 list_0) (x_1 Nat_1) (x_2 list_0) (z_1 Nat_0))
	(=> (take_0 x_10 z_1 x_2)
	    (take_0 (cons_0 x_1 x_10) (S_0 z_1) (cons_0 x_1 x_2)))))
(assert (forall ((z_1 Nat_0))
	(take_0 nil_0 (S_0 z_1) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 Z_0 y_0)))
(declare-fun len_0 (Nat_0 list_0) Bool)
(assert (forall ((x_14 Nat_0) (y_1 Nat_1) (xs_0 list_0))
	(=> (len_0 x_14 xs_0)
	    (len_0 (S_0 x_14) (cons_0 y_1 xs_0)))))
(assert (len_0 Z_0 nil_0))
(declare-fun x_4 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_16 Nat_0) (x_6 Nat_0) (z_2 Nat_0))
	(=> (x_4 x_16 z_2 x_6)
	    (x_4 x_16 (S_0 z_2) (S_0 x_6)))))
(assert (forall ((z_2 Nat_0))
	(x_4 (S_0 z_2) (S_0 z_2) Z_0)))
(assert (forall ((y_2 Nat_0))
	(x_4 Z_0 Z_0 y_2)))
(declare-fun x_7 (list_0 list_0 list_0) Bool)
(assert (forall ((x_21 list_0) (z_3 Nat_1) (xs_1 list_0) (y_3 list_0))
	(=> (x_7 x_21 xs_1 y_3)
	    (x_7 (cons_0 z_3 x_21) (cons_0 z_3 xs_1) y_3))))
(assert (forall ((x_22 list_0))
	(x_7 x_22 nil_0 x_22)))
(assert (forall ((x_23 list_0) (x_24 list_0) (x_25 list_0) (x_26 Nat_0) (x_27 Nat_0) (x_28 list_0) (x_29 list_0) (n_0 Nat_0) (xs_2 list_0) (ys_0 list_0))
	(=>	(and (diseqlist_0 x_24 x_29)
			(x_7 x_23 xs_2 ys_0)
			(take_0 x_24 n_0 x_23)
			(take_0 x_25 n_0 xs_2)
			(len_0 x_26 xs_2)
			(x_4 x_27 n_0 x_26)
			(take_0 x_28 x_27 ys_0)
			(x_7 x_29 x_25 x_28))
		false)))
(check-sat)
