(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_3 ) (Z_4 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_3 (Nat_1) Bool)
(declare-fun isZ_4 (Nat_1) Bool)
(assert (forall ((x_40 Nat_1))
	(unS_1 x_40 (Z_4 x_40))))
(assert (isZ_3 Z_3))
(assert (forall ((x_42 Nat_1))
	(isZ_4 (Z_4 x_42))))
(assert (forall ((x_43 Nat_1))
	(diseqNat_1 Z_3 (Z_4 x_43))))
(assert (forall ((x_44 Nat_1))
	(diseqNat_1 (Z_4 x_44) Z_3)))
(assert (forall ((x_45 Nat_1) (x_46 Nat_1))
	(=> (diseqNat_1 x_45 x_46)
	    (diseqNat_1 (Z_4 x_45) (Z_4 x_46)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_2 Nat_1))
	(add_0 y_2 Z_3 y_2)))
(assert (forall ((r_0 Nat_1) (x_16 Nat_1) (y_2 Nat_1))
	(=> (add_0 r_0 x_16 y_2)
	    (add_0 (Z_4 r_0) (Z_4 x_16) y_2))))
(assert (forall ((y_2 Nat_1))
	(minus_0 Z_3 Z_3 y_2)))
(assert (forall ((r_0 Nat_1) (x_16 Nat_1) (y_2 Nat_1))
	(=> (minus_0 r_0 x_16 y_2)
	    (minus_0 (Z_4 r_0) (Z_4 x_16) y_2))))
(assert (forall ((y_2 Nat_1))
	(le_0 Z_3 y_2)))
(assert (forall ((x_16 Nat_1) (y_2 Nat_1))
	(=> (le_0 x_16 y_2)
	    (le_0 (Z_4 x_16) (Z_4 y_2)))))
(assert (forall ((y_2 Nat_1))
	(ge_0 y_2 Z_3)))
(assert (forall ((x_16 Nat_1) (y_2 Nat_1))
	(=> (ge_0 x_16 y_2)
	    (ge_0 (Z_4 x_16) (Z_4 y_2)))))
(assert (forall ((y_2 Nat_1))
	(lt_0 Z_3 (Z_4 y_2))))
(assert (forall ((x_16 Nat_1) (y_2 Nat_1))
	(=> (lt_0 x_16 y_2)
	    (lt_0 (Z_4 x_16) (Z_4 y_2)))))
(assert (forall ((y_2 Nat_1))
	(gt_0 (Z_4 y_2) Z_3)))
(assert (forall ((x_16 Nat_1) (y_2 Nat_1))
	(=> (gt_0 x_16 y_2)
	    (gt_0 (Z_4 x_16) (Z_4 y_2)))))
(assert (forall ((y_2 Nat_1))
	(mult_0 Z_3 Z_3 y_2)))
(assert (forall ((r_0 Nat_1) (x_16 Nat_1) (y_2 Nat_1) (z_5 Nat_1))
	(=>	(and (mult_0 r_0 x_16 y_2)
			(add_0 z_5 r_0 y_2))
		(mult_0 z_5 (Z_4 x_16) y_2))))
(assert (forall ((x_16 Nat_1) (y_2 Nat_1))
	(=> (lt_0 x_16 y_2)
	    (div_0 Z_3 x_16 y_2))))
(assert (forall ((r_0 Nat_1) (x_16 Nat_1) (y_2 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_16 y_2)
			(minus_0 z_5 x_16 y_2)
			(div_0 r_0 z_5 y_2))
		(div_0 (Z_4 r_0) x_16 y_2))))
(assert (forall ((x_16 Nat_1) (y_2 Nat_1))
	(=> (lt_0 x_16 y_2)
	    (mod_0 x_16 x_16 y_2))))
(assert (forall ((r_0 Nat_1) (x_16 Nat_1) (y_2 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_16 y_2)
			(minus_0 z_5 x_16 y_2)
			(mod_0 r_0 z_5 y_2))
		(mod_0 r_0 x_16 y_2))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_18 Nat_1) (x_19 list_0))
	(head_1 x_18 (cons_0 x_18 x_19))))
(assert (forall ((x_18 Nat_1) (x_19 list_0))
	(tail_1 x_19 (cons_0 x_18 x_19))))
(assert (isnil_0 nil_0))
(assert (forall ((x_21 Nat_1) (x_22 list_0))
	(iscons_0 (cons_0 x_21 x_22))))
(assert (forall ((x_23 Nat_1) (x_24 list_0))
	(diseqlist_0 nil_0 (cons_0 x_23 x_24))))
(assert (forall ((x_25 Nat_1) (x_26 list_0))
	(diseqlist_0 (cons_0 x_25 x_26) nil_0)))
(assert (forall ((x_27 Nat_1) (x_28 list_0) (x_29 Nat_1) (x_30 list_0))
	(=> (diseqNat_1 x_27 x_29)
	    (diseqlist_0 (cons_0 x_27 x_28) (cons_0 x_29 x_30)))))
(assert (forall ((x_27 Nat_1) (x_28 list_0) (x_29 Nat_1) (x_30 list_0))
	(=> (diseqlist_0 x_28 x_30)
	    (diseqlist_0 (cons_0 x_27 x_28) (cons_0 x_29 x_30)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_32 Nat_0))
	(projS_1 x_32 (S_0 x_32))))
(assert (isZ_2 Z_0))
(assert (forall ((x_34 Nat_0))
	(isS_0 (S_0 x_34))))
(assert (forall ((x_35 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_35))))
(assert (forall ((x_36 Nat_0))
	(diseqNat_0 (S_0 x_36) Z_0)))
(assert (forall ((x_37 Nat_0) (x_38 Nat_0))
	(=> (diseqNat_0 x_37 x_38)
	    (diseqNat_0 (S_0 x_37) (S_0 x_38)))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_5 list_0) (x_1 Nat_1) (x_2 list_0) (z_1 Nat_0))
	(=> (drop_0 x_5 z_1 x_2)
	    (drop_0 x_5 (S_0 z_1) (cons_0 x_1 x_2)))))
(assert (forall ((z_1 Nat_0))
	(drop_0 nil_0 (S_0 z_1) nil_0)))
(assert (forall ((x_8 list_0))
	(drop_0 x_8 Z_0 x_8)))
(declare-fun x_3 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_10 Nat_0) (z_2 Nat_0) (y_1 Nat_0))
	(=> (x_3 x_10 z_2 y_1)
	    (x_3 (S_0 x_10) (S_0 z_2) y_1))))
(assert (forall ((x_11 Nat_0))
	(x_3 x_11 Z_0 x_11)))
(assert (forall ((x_12 list_0) (x_13 list_0) (x_14 Nat_0) (x_15 list_0) (n_0 Nat_0) (m_0 Nat_0) (xs_0 list_0))
	(=>	(and (diseqlist_0 x_13 x_15)
			(drop_0 x_12 m_0 xs_0)
			(drop_0 x_13 n_0 x_12)
			(x_3 x_14 n_0 m_0)
			(drop_0 x_15 x_14 xs_0))
		false)))
(check-sat)
