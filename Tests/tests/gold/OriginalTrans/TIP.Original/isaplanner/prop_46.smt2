(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_2 ) (Z_3 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_93 Nat_0))
	(unS_1 x_93 (Z_3 x_93))))
(assert (isZ_2 Z_2))
(assert (forall ((x_95 Nat_0))
	(isZ_3 (Z_3 x_95))))
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 Z_2 (Z_3 x_96))))
(assert (forall ((x_97 Nat_0))
	(diseqNat_0 (Z_3 x_97) Z_2)))
(assert (forall ((x_98 Nat_0) (x_99 Nat_0))
	(=> (diseqNat_0 x_98 x_99)
	    (diseqNat_0 (Z_3 x_98) (Z_3 x_99)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_2 Nat_0))
	(add_0 y_2 Z_2 y_2)))
(assert (forall ((r_0 Nat_0) (x_17 Nat_0) (y_2 Nat_0))
	(=> (add_0 r_0 x_17 y_2)
	    (add_0 (Z_3 r_0) (Z_3 x_17) y_2))))
(assert (forall ((y_2 Nat_0))
	(minus_0 Z_2 Z_2 y_2)))
(assert (forall ((r_0 Nat_0) (x_17 Nat_0) (y_2 Nat_0))
	(=> (minus_0 r_0 x_17 y_2)
	    (minus_0 (Z_3 r_0) (Z_3 x_17) y_2))))
(assert (forall ((y_2 Nat_0))
	(le_0 Z_2 y_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (le_0 x_17 y_2)
	    (le_0 (Z_3 x_17) (Z_3 y_2)))))
(assert (forall ((y_2 Nat_0))
	(ge_0 y_2 Z_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (ge_0 x_17 y_2)
	    (ge_0 (Z_3 x_17) (Z_3 y_2)))))
(assert (forall ((y_2 Nat_0))
	(lt_0 Z_2 (Z_3 y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_17 y_2)
	    (lt_0 (Z_3 x_17) (Z_3 y_2)))))
(assert (forall ((y_2 Nat_0))
	(gt_0 (Z_3 y_2) Z_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (gt_0 x_17 y_2)
	    (gt_0 (Z_3 x_17) (Z_3 y_2)))))
(assert (forall ((y_2 Nat_0))
	(mult_0 Z_2 Z_2 y_2)))
(assert (forall ((r_0 Nat_0) (x_17 Nat_0) (y_2 Nat_0) (z_4 Nat_0))
	(=>	(and (mult_0 r_0 x_17 y_2)
			(add_0 z_4 r_0 y_2))
		(mult_0 z_4 (Z_3 x_17) y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_17 y_2)
	    (div_0 Z_2 x_17 y_2))))
(assert (forall ((r_0 Nat_0) (x_17 Nat_0) (y_2 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_17 y_2)
			(minus_0 z_4 x_17 y_2)
			(div_0 r_0 z_4 y_2))
		(div_0 (Z_3 r_0) x_17 y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_17 y_2)
	    (mod_0 x_17 x_17 y_2))))
(assert (forall ((r_0 Nat_0) (x_17 Nat_0) (y_2 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_17 y_2)
			(minus_0 z_4 x_17 y_2)
			(mod_0 r_0 z_4 y_2))
		(mod_0 r_0 x_17 y_2))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_18 Nat_0) (x_19 Nat_0))
	(projpair_4 x_18 (pair_1 x_18 x_19))))
(assert (forall ((x_18 Nat_0) (x_19 Nat_0))
	(projpair_5 x_19 (pair_1 x_18 x_19))))
(assert (forall ((x_21 Nat_0) (x_22 Nat_0))
	(ispair_0 (pair_1 x_21 x_22))))
(assert (forall ((x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_26 Nat_0))
	(=> (diseqNat_0 x_23 x_25)
	    (diseqpair_0 (pair_1 x_23 x_24) (pair_1 x_25 x_26)))))
(assert (forall ((x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_26 Nat_0))
	(=> (diseqNat_0 x_24 x_26)
	    (diseqpair_0 (pair_1 x_23 x_24) (pair_1 x_25 x_26)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 Nat_0) (projpair_3 Nat_0)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (Nat_0 pair_2) Bool)
(declare-fun projpair_7 (Nat_0 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_27 Nat_0) (x_28 Nat_0))
	(projpair_6 x_27 (pair_3 x_27 x_28))))
(assert (forall ((x_27 Nat_0) (x_28 Nat_0))
	(projpair_7 x_28 (pair_3 x_27 x_28))))
(assert (forall ((x_30 Nat_0) (x_31 Nat_0))
	(ispair_1 (pair_3 x_30 x_31))))
(assert (forall ((x_32 Nat_0) (x_33 Nat_0) (x_34 Nat_0) (x_35 Nat_0))
	(=> (diseqNat_0 x_32 x_34)
	    (diseqpair_1 (pair_3 x_32 x_33) (pair_3 x_34 x_35)))))
(assert (forall ((x_32 Nat_0) (x_33 Nat_0) (x_34 Nat_0) (x_35 Nat_0))
	(=> (diseqNat_0 x_33 x_35)
	    (diseqpair_1 (pair_3 x_32 x_33) (pair_3 x_34 x_35)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_4 (Nat_0 list_0) Bool)
(declare-fun tail_4 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_37 Nat_0) (x_38 list_0))
	(head_4 x_37 (cons_0 x_37 x_38))))
(assert (forall ((x_37 Nat_0) (x_38 list_0))
	(tail_4 x_38 (cons_0 x_37 x_38))))
(assert (isnil_0 nil_0))
(assert (forall ((x_40 Nat_0) (x_41 list_0))
	(iscons_0 (cons_0 x_40 x_41))))
(assert (forall ((x_42 Nat_0) (x_43 list_0))
	(diseqlist_0 nil_0 (cons_0 x_42 x_43))))
(assert (forall ((x_44 Nat_0) (x_45 list_0))
	(diseqlist_0 (cons_0 x_44 x_45) nil_0)))
(assert (forall ((x_46 Nat_0) (x_47 list_0) (x_48 Nat_0) (x_49 list_0))
	(=> (diseqNat_0 x_46 x_48)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(assert (forall ((x_46 Nat_0) (x_47 list_0) (x_48 Nat_0) (x_49 list_0))
	(=> (diseqlist_0 x_47 x_49)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_5 (pair_0 list_1) Bool)
(declare-fun tail_5 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_51 pair_0) (x_52 list_1))
	(head_5 x_51 (cons_1 x_51 x_52))))
(assert (forall ((x_51 pair_0) (x_52 list_1))
	(tail_5 x_52 (cons_1 x_51 x_52))))
(assert (isnil_1 nil_1))
(assert (forall ((x_54 pair_0) (x_55 list_1))
	(iscons_1 (cons_1 x_54 x_55))))
(assert (forall ((x_56 pair_0) (x_57 list_1))
	(diseqlist_1 nil_1 (cons_1 x_56 x_57))))
(assert (forall ((x_58 pair_0) (x_59 list_1))
	(diseqlist_1 (cons_1 x_58 x_59) nil_1)))
(assert (forall ((x_60 pair_0) (x_61 list_1) (x_62 pair_0) (x_63 list_1))
	(=> (diseqpair_0 x_60 x_62)
	    (diseqlist_1 (cons_1 x_60 x_61) (cons_1 x_62 x_63)))))
(assert (forall ((x_60 pair_0) (x_61 list_1) (x_62 pair_0) (x_63 list_1))
	(=> (diseqlist_1 x_61 x_63)
	    (diseqlist_1 (cons_1 x_60 x_61) (cons_1 x_62 x_63)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_2) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_6 (pair_2 list_2) Bool)
(declare-fun tail_6 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_65 pair_2) (x_66 list_2))
	(head_6 x_65 (cons_2 x_65 x_66))))
(assert (forall ((x_65 pair_2) (x_66 list_2))
	(tail_6 x_66 (cons_2 x_65 x_66))))
(assert (isnil_2 nil_2))
(assert (forall ((x_68 pair_2) (x_69 list_2))
	(iscons_2 (cons_2 x_68 x_69))))
(assert (forall ((x_70 pair_2) (x_71 list_2))
	(diseqlist_2 nil_2 (cons_2 x_70 x_71))))
(assert (forall ((x_72 pair_2) (x_73 list_2))
	(diseqlist_2 (cons_2 x_72 x_73) nil_2)))
(assert (forall ((x_74 pair_2) (x_75 list_2) (x_76 pair_2) (x_77 list_2))
	(=> (diseqpair_1 x_74 x_76)
	    (diseqlist_2 (cons_2 x_74 x_75) (cons_2 x_76 x_77)))))
(assert (forall ((x_74 pair_2) (x_75 list_2) (x_76 pair_2) (x_77 list_2))
	(=> (diseqlist_2 x_75 x_77)
	    (diseqlist_2 (cons_2 x_74 x_75) (cons_2 x_76 x_77)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 Nat_0) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_7 (Nat_0 list_3) Bool)
(declare-fun tail_7 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_79 Nat_0) (x_80 list_3))
	(head_7 x_79 (cons_3 x_79 x_80))))
(assert (forall ((x_79 Nat_0) (x_80 list_3))
	(tail_7 x_80 (cons_3 x_79 x_80))))
(assert (isnil_3 nil_3))
(assert (forall ((x_82 Nat_0) (x_83 list_3))
	(iscons_3 (cons_3 x_82 x_83))))
(assert (forall ((x_84 Nat_0) (x_85 list_3))
	(diseqlist_3 nil_3 (cons_3 x_84 x_85))))
(assert (forall ((x_86 Nat_0) (x_87 list_3))
	(diseqlist_3 (cons_3 x_86 x_87) nil_3)))
(assert (forall ((x_88 Nat_0) (x_89 list_3) (x_90 Nat_0) (x_91 list_3))
	(=> (diseqNat_0 x_88 x_90)
	    (diseqlist_3 (cons_3 x_88 x_89) (cons_3 x_90 x_91)))))
(assert (forall ((x_88 Nat_0) (x_89 list_3) (x_90 Nat_0) (x_91 list_3))
	(=> (diseqlist_3 x_89 x_91)
	    (diseqlist_3 (cons_3 x_88 x_89) (cons_3 x_90 x_91)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(assert (forall ((x_9 list_1) (x_2 Nat_0) (x_3 list_0) (z_0 Nat_0) (x_1 list_0))
	(=> (zip_0 x_9 x_1 x_3)
	    (zip_0 (cons_1 (pair_1 z_0 x_2) x_9) (cons_0 z_0 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((z_0 Nat_0) (x_1 list_0))
	(zip_0 nil_1 (cons_0 z_0 x_1) nil_0)))
(assert (forall ((y_0 list_0))
	(zip_0 nil_1 nil_0 y_0)))
(declare-fun zip_1 (list_2 list_3 list_0) Bool)
(assert (forall ((x_13 list_2) (x_6 Nat_0) (x_7 list_0) (z_1 Nat_0) (x_5 list_3))
	(=> (zip_1 x_13 x_5 x_7)
	    (zip_1 (cons_2 (pair_3 z_1 x_6) x_13) (cons_3 z_1 x_5) (cons_0 x_6 x_7)))))
(assert (forall ((z_1 Nat_0) (x_5 list_3))
	(zip_1 nil_2 (cons_3 z_1 x_5) nil_0)))
(assert (forall ((y_1 list_0))
	(zip_1 nil_2 nil_3 y_1)))
(assert (forall ((x_16 list_2) (xs_0 list_0))
	(=>	(and (diseqlist_2 x_16 nil_2)
			(zip_1 x_16 nil_3 xs_0))
		false)))
(check-sat)
