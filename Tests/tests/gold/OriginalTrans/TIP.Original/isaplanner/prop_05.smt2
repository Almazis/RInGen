(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_0 false_0 false_0 false_0))
(assert (or_0 true_0 true_0 false_0))
(assert (or_0 true_0 false_0 true_0))
(assert (or_0 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_23 Nat_0))
	(projS_1 x_23 (S_0 x_23))))
(assert (isZ_2 Z_0))
(assert (forall ((x_25 Nat_0))
	(isS_0 (S_0 x_25))))
(assert (forall ((x_26 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_26))))
(assert (forall ((x_27 Nat_0))
	(diseqNat_0 (S_0 x_27) Z_0)))
(assert (forall ((x_28 Nat_0) (x_29 Nat_0))
	(=> (diseqNat_0 x_28 x_29)
	    (diseqNat_0 (S_0 x_28) (S_0 x_29)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_31 Nat_0) (x_32 list_0))
	(head_1 x_31 (cons_0 x_31 x_32))))
(assert (forall ((x_31 Nat_0) (x_32 list_0))
	(tail_1 x_32 (cons_0 x_31 x_32))))
(assert (isnil_0 nil_0))
(assert (forall ((x_34 Nat_0) (x_35 list_0))
	(iscons_0 (cons_0 x_34 x_35))))
(assert (forall ((x_36 Nat_0) (x_37 list_0))
	(diseqlist_0 nil_0 (cons_0 x_36 x_37))))
(assert (forall ((x_38 Nat_0) (x_39 list_0))
	(diseqlist_0 (cons_0 x_38 x_39) nil_0)))
(assert (forall ((x_40 Nat_0) (x_41 list_0) (x_42 Nat_0) (x_43 list_0))
	(=> (diseqNat_0 x_40 x_42)
	    (diseqlist_0 (cons_0 x_40 x_41) (cons_0 x_42 x_43)))))
(assert (forall ((x_40 Nat_0) (x_41 list_0) (x_42 Nat_0) (x_43 list_0))
	(=> (diseqlist_0 x_41 x_43)
	    (diseqlist_0 (cons_0 x_40 x_41) (cons_0 x_42 x_43)))))
(declare-fun x_0 (Bool_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_5 Bool_0) (y_1 Nat_0) (x_2 Nat_0))
	(=> (x_0 x_5 x_2 y_1)
	    (x_0 x_5 (S_0 x_2) (S_0 y_1)))))
(assert (forall ((x_2 Nat_0))
	(x_0 false_0 (S_0 x_2) Z_0)))
(assert (forall ((z_1 Nat_0))
	(x_0 false_0 Z_0 (S_0 z_1))))
(assert (x_0 true_0 Z_0 Z_0))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_12 Nat_0) (z_2 Nat_0) (ys_0 list_0) (x_3 Nat_0))
	(=>	(and (count_0 x_12 x_3 ys_0)
			(x_0 true_0 x_3 z_2))
		(count_0 (S_0 x_12) x_3 (cons_0 z_2 ys_0)))))
(assert (forall ((x_14 Nat_0) (x_13 Bool_0) (z_2 Nat_0) (ys_0 list_0) (x_3 Nat_0))
	(=>	(and (diseqBool_0 x_13 true_0)
			(count_0 x_14 x_3 ys_0)
			(x_0 x_13 x_3 z_2))
		(count_0 x_14 x_3 (cons_0 z_2 ys_0)))))
(assert (forall ((x_3 Nat_0))
	(count_0 Z_0 x_3 nil_0)))
(assert (forall ((x_17 Nat_0) (x_18 Nat_0) (n_0 Nat_0) (xs_0 list_0))
	(=>	(and (diseqNat_0 (S_0 x_17) x_18)
			(count_0 x_17 n_0 xs_0)
			(count_0 x_18 n_0 (cons_0 n_0 xs_0)))
		false)))
(check-sat)
