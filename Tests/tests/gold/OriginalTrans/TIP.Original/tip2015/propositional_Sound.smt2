(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_8 ) (Z_9 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_99 Nat_0))
	(unS_1 x_99 (Z_9 x_99))))
(assert (isZ_2 Z_8))
(assert (forall ((x_101 Nat_0))
	(isZ_3 (Z_9 x_101))))
(assert (forall ((x_102 Nat_0))
	(diseqNat_0 Z_8 (Z_9 x_102))))
(assert (forall ((x_103 Nat_0))
	(diseqNat_0 (Z_9 x_103) Z_8)))
(assert (forall ((x_104 Nat_0) (x_105 Nat_0))
	(=> (diseqNat_0 x_104 x_105)
	    (diseqNat_0 (Z_9 x_104) (Z_9 x_105)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_15 Nat_0))
	(add_0 y_15 Z_8 y_15)))
(assert (forall ((r_2 Nat_0) (x_97 Nat_0) (y_15 Nat_0))
	(=> (add_0 r_2 x_97 y_15)
	    (add_0 (Z_9 r_2) (Z_9 x_97) y_15))))
(assert (forall ((y_15 Nat_0))
	(minus_0 Z_8 Z_8 y_15)))
(assert (forall ((r_2 Nat_0) (x_97 Nat_0) (y_15 Nat_0))
	(=> (minus_0 r_2 x_97 y_15)
	    (minus_0 (Z_9 r_2) (Z_9 x_97) y_15))))
(assert (forall ((y_15 Nat_0))
	(le_0 Z_8 y_15)))
(assert (forall ((x_97 Nat_0) (y_15 Nat_0))
	(=> (le_0 x_97 y_15)
	    (le_0 (Z_9 x_97) (Z_9 y_15)))))
(assert (forall ((y_15 Nat_0))
	(ge_0 y_15 Z_8)))
(assert (forall ((x_97 Nat_0) (y_15 Nat_0))
	(=> (ge_0 x_97 y_15)
	    (ge_0 (Z_9 x_97) (Z_9 y_15)))))
(assert (forall ((y_15 Nat_0))
	(lt_0 Z_8 (Z_9 y_15))))
(assert (forall ((x_97 Nat_0) (y_15 Nat_0))
	(=> (lt_0 x_97 y_15)
	    (lt_0 (Z_9 x_97) (Z_9 y_15)))))
(assert (forall ((y_15 Nat_0))
	(gt_0 (Z_9 y_15) Z_8)))
(assert (forall ((x_97 Nat_0) (y_15 Nat_0))
	(=> (gt_0 x_97 y_15)
	    (gt_0 (Z_9 x_97) (Z_9 y_15)))))
(assert (forall ((y_15 Nat_0))
	(mult_0 Z_8 Z_8 y_15)))
(assert (forall ((r_2 Nat_0) (x_97 Nat_0) (y_15 Nat_0) (z_10 Nat_0))
	(=>	(and (mult_0 r_2 x_97 y_15)
			(add_0 z_10 r_2 y_15))
		(mult_0 z_10 (Z_9 x_97) y_15))))
(assert (forall ((x_97 Nat_0) (y_15 Nat_0))
	(=> (lt_0 x_97 y_15)
	    (div_0 Z_8 x_97 y_15))))
(assert (forall ((r_2 Nat_0) (x_97 Nat_0) (y_15 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_97 y_15)
			(minus_0 z_10 x_97 y_15)
			(div_0 r_2 z_10 y_15))
		(div_0 (Z_9 r_2) x_97 y_15))))
(assert (forall ((x_97 Nat_0) (y_15 Nat_0))
	(=> (lt_0 x_97 y_15)
	    (mod_0 x_97 x_97 y_15))))
(assert (forall ((r_2 Nat_0) (x_97 Nat_0) (y_15 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_97 y_15)
			(minus_0 z_10 x_97 y_15)
			(mod_0 r_2 z_10 y_15))
		(mod_0 r_2 x_97 y_15))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_1 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_1 false_0 false_0 false_0))
(assert (or_1 true_0 true_0 false_0))
(assert (or_1 true_0 false_0 true_0))
(assert (or_1 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_1 true_0 false_0))
(assert (not_1 false_0 true_0))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Bool_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_0 pair_0) Bool)
(declare-fun projpair_3 (Bool_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_108 Nat_0) (x_109 Bool_0))
	(projpair_2 x_108 (pair_1 x_108 x_109))))
(assert (forall ((x_108 Nat_0) (x_109 Bool_0))
	(projpair_3 x_109 (pair_1 x_108 x_109))))
(assert (forall ((x_111 Nat_0) (x_112 Bool_0))
	(ispair_0 (pair_1 x_111 x_112))))
(assert (forall ((x_113 Nat_0) (x_114 Bool_0) (x_115 Nat_0) (x_116 Bool_0))
	(=> (diseqNat_0 x_113 x_115)
	    (diseqpair_0 (pair_1 x_113 x_114) (pair_1 x_115 x_116)))))
(assert (forall ((x_113 Nat_0) (x_114 Bool_0) (x_115 Nat_0) (x_116 Bool_0))
	(=> (diseqBool_0 x_114 x_116)
	    (diseqpair_0 (pair_1 x_113 x_114) (pair_1 x_115 x_116)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_3 (Bool_0 list_0) Bool)
(declare-fun tail_3 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_118 Bool_0) (x_119 list_0))
	(head_3 x_118 (cons_0 x_118 x_119))))
(assert (forall ((x_118 Bool_0) (x_119 list_0))
	(tail_3 x_119 (cons_0 x_118 x_119))))
(assert (isnil_0 nil_0))
(assert (forall ((x_121 Bool_0) (x_122 list_0))
	(iscons_0 (cons_0 x_121 x_122))))
(assert (forall ((x_123 Bool_0) (x_124 list_0))
	(diseqlist_0 nil_0 (cons_0 x_123 x_124))))
(assert (forall ((x_125 Bool_0) (x_126 list_0))
	(diseqlist_0 (cons_0 x_125 x_126) nil_0)))
(assert (forall ((x_127 Bool_0) (x_128 list_0) (x_129 Bool_0) (x_130 list_0))
	(=> (diseqBool_0 x_127 x_129)
	    (diseqlist_0 (cons_0 x_127 x_128) (cons_0 x_129 x_130)))))
(assert (forall ((x_127 Bool_0) (x_128 list_0) (x_129 Bool_0) (x_130 list_0))
	(=> (diseqlist_0 x_128 x_130)
	    (diseqlist_0 (cons_0 x_127 x_128) (cons_0 x_129 x_130)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_4 (pair_0 list_1) Bool)
(declare-fun tail_4 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_132 pair_0) (x_133 list_1))
	(head_4 x_132 (cons_1 x_132 x_133))))
(assert (forall ((x_132 pair_0) (x_133 list_1))
	(tail_4 x_133 (cons_1 x_132 x_133))))
(assert (isnil_1 nil_1))
(assert (forall ((x_135 pair_0) (x_136 list_1))
	(iscons_1 (cons_1 x_135 x_136))))
(assert (forall ((x_137 pair_0) (x_138 list_1))
	(diseqlist_1 nil_1 (cons_1 x_137 x_138))))
(assert (forall ((x_139 pair_0) (x_140 list_1))
	(diseqlist_1 (cons_1 x_139 x_140) nil_1)))
(assert (forall ((x_141 pair_0) (x_142 list_1) (x_143 pair_0) (x_144 list_1))
	(=> (diseqpair_0 x_141 x_143)
	    (diseqlist_1 (cons_1 x_141 x_142) (cons_1 x_143 x_144)))))
(assert (forall ((x_141 pair_0) (x_142 list_1) (x_143 pair_0) (x_144 list_1))
	(=> (diseqlist_1 x_142 x_144)
	    (diseqlist_1 (cons_1 x_141 x_142) (cons_1 x_143 x_144)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 list_1) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_5 (list_1 list_2) Bool)
(declare-fun tail_5 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_146 list_1) (x_147 list_2))
	(head_5 x_146 (cons_2 x_146 x_147))))
(assert (forall ((x_146 list_1) (x_147 list_2))
	(tail_5 x_147 (cons_2 x_146 x_147))))
(assert (isnil_2 nil_2))
(assert (forall ((x_149 list_1) (x_150 list_2))
	(iscons_2 (cons_2 x_149 x_150))))
(assert (forall ((x_151 list_1) (x_152 list_2))
	(diseqlist_2 nil_2 (cons_2 x_151 x_152))))
(assert (forall ((x_153 list_1) (x_154 list_2))
	(diseqlist_2 (cons_2 x_153 x_154) nil_2)))
(assert (forall ((x_155 list_1) (x_156 list_2) (x_157 list_1) (x_158 list_2))
	(=> (diseqlist_1 x_155 x_157)
	    (diseqlist_2 (cons_2 x_155 x_156) (cons_2 x_157 x_158)))))
(assert (forall ((x_155 list_1) (x_156 list_2) (x_157 list_1) (x_158 list_2))
	(=> (diseqlist_2 x_156 x_158)
	    (diseqlist_2 (cons_2 x_155 x_156) (cons_2 x_157 x_158)))))
(declare-datatypes ((Form_0 0)) (((x_0 (proj_0 Form_0) (proj_1 Form_0)) (Not_0 (projNot_0 Form_0)) (Var_0 (projVar_0 Nat_0)))))
(declare-fun diseqForm_0 (Form_0 Form_0) Bool)
(declare-fun proj_2 (Form_0 Form_0) Bool)
(declare-fun proj_3 (Form_0 Form_0) Bool)
(declare-fun projNot_1 (Form_0 Form_0) Bool)
(declare-fun projVar_1 (Nat_0 Form_0) Bool)
(declare-fun isx_0 (Form_0) Bool)
(declare-fun isNot_0 (Form_0) Bool)
(declare-fun isVar_0 (Form_0) Bool)
(assert (forall ((x_159 Form_0) (x_160 Form_0))
	(proj_2 x_159 (x_0 x_159 x_160))))
(assert (forall ((x_159 Form_0) (x_160 Form_0))
	(proj_3 x_160 (x_0 x_159 x_160))))
(assert (forall ((x_162 Form_0))
	(projNot_1 x_162 (Not_0 x_162))))
(assert (forall ((x_164 Nat_0))
	(projVar_1 x_164 (Var_0 x_164))))
(assert (forall ((x_166 Form_0) (x_167 Form_0))
	(isx_0 (x_0 x_166 x_167))))
(assert (forall ((x_168 Form_0))
	(isNot_0 (Not_0 x_168))))
(assert (forall ((x_169 Nat_0))
	(isVar_0 (Var_0 x_169))))
(assert (forall ((x_170 Form_0) (x_171 Form_0) (x_172 Form_0))
	(diseqForm_0 (x_0 x_170 x_171) (Not_0 x_172))))
(assert (forall ((x_173 Form_0) (x_174 Form_0) (x_175 Nat_0))
	(diseqForm_0 (x_0 x_173 x_174) (Var_0 x_175))))
(assert (forall ((x_176 Form_0) (x_177 Form_0) (x_178 Form_0))
	(diseqForm_0 (Not_0 x_176) (x_0 x_177 x_178))))
(assert (forall ((x_179 Nat_0) (x_180 Form_0) (x_181 Form_0))
	(diseqForm_0 (Var_0 x_179) (x_0 x_180 x_181))))
(assert (forall ((x_182 Form_0) (x_183 Nat_0))
	(diseqForm_0 (Not_0 x_182) (Var_0 x_183))))
(assert (forall ((x_184 Nat_0) (x_185 Form_0))
	(diseqForm_0 (Var_0 x_184) (Not_0 x_185))))
(assert (forall ((x_186 Form_0) (x_187 Form_0) (x_188 Form_0) (x_189 Form_0))
	(=> (diseqForm_0 x_186 x_188)
	    (diseqForm_0 (x_0 x_186 x_187) (x_0 x_188 x_189)))))
(assert (forall ((x_186 Form_0) (x_187 Form_0) (x_188 Form_0) (x_189 Form_0))
	(=> (diseqForm_0 x_187 x_189)
	    (diseqForm_0 (x_0 x_186 x_187) (x_0 x_188 x_189)))))
(assert (forall ((x_190 Form_0) (x_191 Form_0))
	(=> (diseqForm_0 x_190 x_191)
	    (diseqForm_0 (Not_0 x_190) (Not_0 x_191)))))
(assert (forall ((x_192 Nat_0) (x_193 Nat_0))
	(=> (diseqNat_0 x_192 x_193)
	    (diseqForm_0 (Var_0 x_192) (Var_0 x_193)))))
(declare-fun or_0 (Bool_0 list_0) Bool)
(assert (forall ((x_23 Bool_0) (x_24 Bool_0) (y_0 Bool_0) (xs_0 list_0))
	(=>	(and (or_0 x_24 xs_0)
			(or_1 x_23 y_0 x_24))
		(or_0 x_23 (cons_0 y_0 xs_0)))))
(assert (or_0 false_0 nil_0))
(declare-fun models_0 (list_1 Nat_0 list_1) Bool)
(assert (forall ((x_27 list_1) (x_3 Nat_0) (y_2 Bool_0) (xs_1 list_1) (x_2 Nat_0))
	(=>	(and (diseqNat_0 x_2 x_3)
			(models_0 x_27 x_2 xs_1))
		(models_0 (cons_1 (pair_1 x_3 y_2) x_27) x_2 (cons_1 (pair_1 x_3 y_2) xs_1)))))
(assert (forall ((x_28 list_1) (y_2 Bool_0) (xs_1 list_1) (x_2 Nat_0))
	(=> (models_0 x_28 x_2 xs_1)
	    (models_0 x_28 x_2 (cons_1 (pair_1 x_2 y_2) xs_1)))))
(assert (forall ((x_2 Nat_0))
	(models_0 nil_1 x_2 nil_1)))
(declare-fun models_1 (list_0 Nat_0 list_1) Bool)
(assert (forall ((x_31 list_0) (y_4 Nat_0) (x_5 list_1) (x_4 Nat_0))
	(=> (models_1 x_31 x_4 x_5)
	    (models_1 x_31 x_4 (cons_1 (pair_1 y_4 true_0) x_5)))))
(assert (forall ((x_34 list_0) (x_6 Bool_0) (x_5 list_1) (x_4 Nat_0))
	(=>	(and (diseqBool_0 x_6 true_0)
			(models_1 x_34 x_4 x_5))
		(models_1 (cons_0 true_0 x_34) x_4 (cons_1 (pair_1 x_4 x_6) x_5)))))
(assert (forall ((x_36 list_0) (y_4 Nat_0) (x_6 Bool_0) (x_5 list_1) (x_4 Nat_0))
	(=>	(and (diseqNat_0 x_4 y_4)
			(diseqBool_0 x_6 true_0)
			(models_1 x_36 x_4 x_5))
		(models_1 (cons_0 false_0 x_36) x_4 (cons_1 (pair_1 y_4 x_6) x_5)))))
(assert (forall ((x_4 Nat_0))
	(models_1 nil_0 x_4 nil_1)))
(declare-fun models_2 (list_0 Nat_0 list_1) Bool)
(assert (forall ((x_39 list_0) (x_8 list_1) (x_7 Nat_0))
	(=> (models_2 x_39 x_7 x_8)
	    (models_2 (cons_0 true_0 x_39) x_7 (cons_1 (pair_1 x_7 true_0) x_8)))))
(assert (forall ((x_41 list_0) (y_6 Nat_0) (x_8 list_1) (x_7 Nat_0))
	(=>	(and (diseqNat_0 x_7 y_6)
			(models_2 x_41 x_7 x_8))
		(models_2 (cons_0 false_0 x_41) x_7 (cons_1 (pair_1 y_6 true_0) x_8)))))
(assert (forall ((x_42 list_0) (y_6 Nat_0) (x_9 Bool_0) (x_8 list_1) (x_7 Nat_0))
	(=>	(and (diseqBool_0 x_9 true_0)
			(models_2 x_42 x_7 x_8))
		(models_2 x_42 x_7 (cons_1 (pair_1 y_6 x_9) x_8)))))
(assert (forall ((x_7 Nat_0))
	(models_2 nil_0 x_7 nil_1)))
(declare-fun bar_0 (Bool_0 list_1 Form_0) Bool)
(assert (forall ((x_45 Bool_0) (x_46 list_0) (z_3 Nat_0) (x_10 list_1))
	(=>	(and (models_2 x_46 z_3 x_10)
			(or_0 x_45 x_46))
		(bar_0 x_45 x_10 (Var_0 z_3)))))
(assert (forall ((x_48 Bool_0) (x_49 Bool_0) (r_0 Form_0) (x_10 list_1))
	(=>	(and (bar_0 x_49 x_10 r_0)
			(not_1 x_48 x_49))
		(bar_0 x_48 x_10 (Not_0 r_0)))))
(assert (forall ((x_50 Bool_0) (x_51 Bool_0) (x_52 Bool_0) (p_0 Form_0) (q_0 Form_0) (x_10 list_1))
	(=>	(and (bar_0 x_51 x_10 p_0)
			(bar_0 x_52 x_10 q_0)
			(and_0 x_50 x_51 x_52))
		(bar_0 x_50 x_10 (x_0 p_0 q_0)))))
(declare-fun formula_0 (Bool_0 Form_0 list_2) Bool)
(assert (forall ((x_53 Bool_0) (x_54 Bool_0) (x_55 Bool_0) (y_8 list_1) (xs_2 list_2) (p_1 Form_0))
	(=>	(and (bar_0 x_54 y_8 p_1)
			(formula_0 x_55 p_1 xs_2)
			(and_0 x_53 x_54 x_55))
		(formula_0 x_53 p_1 (cons_2 y_8 xs_2)))))
(assert (forall ((p_1 Form_0))
	(formula_0 true_0 p_1 nil_2)))
(declare-fun x_12 (list_2 list_2 list_2) Bool)
(assert (forall ((x_58 list_2) (z_4 list_1) (xs_3 list_2) (y_9 list_2))
	(=> (x_12 x_58 xs_3 y_9)
	    (x_12 (cons_2 z_4 x_58) (cons_2 z_4 xs_3) y_9))))
(assert (forall ((x_59 list_2))
	(x_12 x_59 nil_2 x_59)))
(declare-fun models_3 (list_2 Form_0 list_1) Bool)
(declare-fun models_4 (list_2 Form_0 list_2) Bool)
(declare-fun models_5 (list_2 list_2 Form_0 list_2) Bool)
(assert (forall ((x_63 list_1) (x_60 list_0) (x_61 Bool_0) (x_19 Nat_0) (y_12 list_1))
	(=>	(and (diseqBool_0 x_61 true_0)
			(models_0 x_63 x_19 y_12)
			(models_1 x_60 x_19 y_12)
			(or_0 x_61 x_60))
		(models_3 (cons_2 (cons_1 (pair_1 x_19 true_0) x_63) nil_2) (Var_0 x_19) y_12))))
(assert (forall ((x_64 list_0) (x_19 Nat_0) (y_12 list_1))
	(=>	(and (models_1 x_64 x_19 y_12)
			(or_0 true_0 x_64))
		(models_3 nil_2 (Var_0 x_19) y_12))))
(assert (forall ((x_70 list_1) (x_67 list_0) (x_68 Bool_0) (x_18 Nat_0) (y_12 list_1))
	(=>	(and (diseqBool_0 x_68 true_0)
			(models_0 x_70 x_18 y_12)
			(models_2 x_67 x_18 y_12)
			(or_0 x_68 x_67))
		(models_3 (cons_2 (cons_1 (pair_1 x_18 false_0) x_70) nil_2) (Not_0 (Var_0 x_18)) y_12))))
(assert (forall ((x_71 list_0) (x_18 Nat_0) (y_12 list_1))
	(=>	(and (models_2 x_71 x_18 y_12)
			(or_0 true_0 x_71))
		(models_3 nil_2 (Not_0 (Var_0 x_18)) y_12))))
(assert (forall ((x_74 list_2) (p_3 Form_0) (y_12 list_1))
	(=> (models_3 x_74 p_3 y_12)
	    (models_3 x_74 (Not_0 (Not_0 p_3)) y_12))))
(assert (forall ((x_76 list_2) (x_77 list_2) (x_78 list_2) (r_1 Form_0) (q_4 Form_0) (y_12 list_1))
	(=>	(and (models_3 x_77 (Not_0 r_1) y_12)
			(models_3 x_78 (x_0 r_1 (Not_0 q_4)) y_12)
			(x_12 x_76 x_77 x_78))
		(models_3 x_76 (Not_0 (x_0 r_1 q_4)) y_12))))
(assert (forall ((x_80 list_2) (x_81 list_2) (p_2 Form_0) (q_3 Form_0) (y_12 list_1))
	(=>	(and (models_3 x_81 p_2 y_12)
			(models_4 x_80 q_3 x_81))
		(models_3 x_80 (x_0 p_2 q_3) y_12))))
(assert (forall ((x_83 list_2) (x_84 list_2) (y_13 list_1) (z_6 list_2) (q_5 Form_0))
	(=>	(and (models_3 x_84 q_5 y_13)
			(models_5 x_83 z_6 q_5 x_84))
		(models_4 x_83 q_5 (cons_2 y_13 z_6)))))
(assert (forall ((q_5 Form_0))
	(models_4 nil_2 q_5 nil_2)))
(assert (forall ((x_88 list_2) (z_7 list_1) (x_22 list_2) (x_21 list_2) (q_6 Form_0))
	(=> (models_5 x_88 x_21 q_6 x_22)
	    (models_5 (cons_2 z_7 x_88) x_21 q_6 (cons_2 z_7 x_22)))))
(assert (forall ((x_89 list_2) (x_21 list_2) (q_6 Form_0))
	(=> (models_4 x_89 q_6 x_21)
	    (models_5 x_89 x_21 q_6 nil_2))))
(assert (forall ((x_91 list_2) (x_92 Bool_0) (p_4 Form_0))
	(=>	(and (diseqBool_0 x_92 true_0)
			(models_3 x_91 p_4 nil_1)
			(formula_0 x_92 p_4 x_91))
		false)))
(check-sat)
