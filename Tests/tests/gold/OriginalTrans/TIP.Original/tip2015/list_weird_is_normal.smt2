(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_4 ) (Z_5 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_93 Nat_0))
	(unS_1 x_93 (Z_5 x_93))))
(assert (isZ_2 Z_4))
(assert (forall ((x_95 Nat_0))
	(isZ_3 (Z_5 x_95))))
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 Z_4 (Z_5 x_96))))
(assert (forall ((x_97 Nat_0))
	(diseqNat_0 (Z_5 x_97) Z_4)))
(assert (forall ((x_98 Nat_0) (x_99 Nat_0))
	(=> (diseqNat_0 x_98 x_99)
	    (diseqNat_0 (Z_5 x_98) (Z_5 x_99)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_6 Nat_0))
	(add_0 y_6 Z_4 y_6)))
(assert (forall ((r_0 Nat_0) (x_35 Nat_0) (y_6 Nat_0))
	(=> (add_0 r_0 x_35 y_6)
	    (add_0 (Z_5 r_0) (Z_5 x_35) y_6))))
(assert (forall ((y_6 Nat_0))
	(minus_0 Z_4 Z_4 y_6)))
(assert (forall ((r_0 Nat_0) (x_35 Nat_0) (y_6 Nat_0))
	(=> (minus_0 r_0 x_35 y_6)
	    (minus_0 (Z_5 r_0) (Z_5 x_35) y_6))))
(assert (forall ((y_6 Nat_0))
	(le_0 Z_4 y_6)))
(assert (forall ((x_35 Nat_0) (y_6 Nat_0))
	(=> (le_0 x_35 y_6)
	    (le_0 (Z_5 x_35) (Z_5 y_6)))))
(assert (forall ((y_6 Nat_0))
	(ge_0 y_6 Z_4)))
(assert (forall ((x_35 Nat_0) (y_6 Nat_0))
	(=> (ge_0 x_35 y_6)
	    (ge_0 (Z_5 x_35) (Z_5 y_6)))))
(assert (forall ((y_6 Nat_0))
	(lt_0 Z_4 (Z_5 y_6))))
(assert (forall ((x_35 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_35 y_6)
	    (lt_0 (Z_5 x_35) (Z_5 y_6)))))
(assert (forall ((y_6 Nat_0))
	(gt_0 (Z_5 y_6) Z_4)))
(assert (forall ((x_35 Nat_0) (y_6 Nat_0))
	(=> (gt_0 x_35 y_6)
	    (gt_0 (Z_5 x_35) (Z_5 y_6)))))
(assert (forall ((y_6 Nat_0))
	(mult_0 Z_4 Z_4 y_6)))
(assert (forall ((r_0 Nat_0) (x_35 Nat_0) (y_6 Nat_0) (z_6 Nat_0))
	(=>	(and (mult_0 r_0 x_35 y_6)
			(add_0 z_6 r_0 y_6))
		(mult_0 z_6 (Z_5 x_35) y_6))))
(assert (forall ((x_35 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_35 y_6)
	    (div_0 Z_4 x_35 y_6))))
(assert (forall ((r_0 Nat_0) (x_35 Nat_0) (y_6 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_35 y_6)
			(minus_0 z_6 x_35 y_6)
			(div_0 r_0 z_6 y_6))
		(div_0 (Z_5 r_0) x_35 y_6))))
(assert (forall ((x_35 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_35 y_6)
	    (mod_0 x_35 x_35 y_6))))
(assert (forall ((r_0 Nat_0) (x_35 Nat_0) (y_6 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_35 y_6)
			(minus_0 z_6 x_35 y_6)
			(mod_0 r_0 z_6 y_6))
		(mod_0 r_0 x_35 y_6))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_4 (Nat_0 list_0) Bool)
(declare-fun tail_4 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_37 Nat_0) (x_38 list_0))
	(head_4 x_37 (cons_0 x_37 x_38))))
(assert (forall ((x_37 Nat_0) (x_38 list_0))
	(tail_4 x_38 (cons_0 x_37 x_38))))
(assert (isnil_0 nil_0))
(assert (forall ((x_40 Nat_0) (x_41 list_0))
	(iscons_0 (cons_0 x_40 x_41))))
(assert (forall ((x_42 Nat_0) (x_43 list_0))
	(diseqlist_0 nil_0 (cons_0 x_42 x_43))))
(assert (forall ((x_44 Nat_0) (x_45 list_0))
	(diseqlist_0 (cons_0 x_44 x_45) nil_0)))
(assert (forall ((x_46 Nat_0) (x_47 list_0) (x_48 Nat_0) (x_49 list_0))
	(=> (diseqNat_0 x_46 x_48)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(assert (forall ((x_46 Nat_0) (x_47 list_0) (x_48 Nat_0) (x_49 list_0))
	(=> (diseqlist_0 x_47 x_49)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_5 (list_0 list_1) Bool)
(declare-fun tail_5 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_51 list_0) (x_52 list_1))
	(head_5 x_51 (cons_1 x_51 x_52))))
(assert (forall ((x_51 list_0) (x_52 list_1))
	(tail_5 x_52 (cons_1 x_51 x_52))))
(assert (isnil_1 nil_1))
(assert (forall ((x_54 list_0) (x_55 list_1))
	(iscons_1 (cons_1 x_54 x_55))))
(assert (forall ((x_56 list_0) (x_57 list_1))
	(diseqlist_1 nil_1 (cons_1 x_56 x_57))))
(assert (forall ((x_58 list_0) (x_59 list_1))
	(diseqlist_1 (cons_1 x_58 x_59) nil_1)))
(assert (forall ((x_60 list_0) (x_61 list_1) (x_62 list_0) (x_63 list_1))
	(=> (diseqlist_0 x_60 x_62)
	    (diseqlist_1 (cons_1 x_60 x_61) (cons_1 x_62 x_63)))))
(assert (forall ((x_60 list_0) (x_61 list_1) (x_62 list_0) (x_63 list_1))
	(=> (diseqlist_1 x_61 x_63)
	    (diseqlist_1 (cons_1 x_60 x_61) (cons_1 x_62 x_63)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 Nat_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_6 (Nat_0 list_2) Bool)
(declare-fun tail_6 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_65 Nat_0) (x_66 list_2))
	(head_6 x_65 (cons_2 x_65 x_66))))
(assert (forall ((x_65 Nat_0) (x_66 list_2))
	(tail_6 x_66 (cons_2 x_65 x_66))))
(assert (isnil_2 nil_2))
(assert (forall ((x_68 Nat_0) (x_69 list_2))
	(iscons_2 (cons_2 x_68 x_69))))
(assert (forall ((x_70 Nat_0) (x_71 list_2))
	(diseqlist_2 nil_2 (cons_2 x_70 x_71))))
(assert (forall ((x_72 Nat_0) (x_73 list_2))
	(diseqlist_2 (cons_2 x_72 x_73) nil_2)))
(assert (forall ((x_74 Nat_0) (x_75 list_2) (x_76 Nat_0) (x_77 list_2))
	(=> (diseqNat_0 x_74 x_76)
	    (diseqlist_2 (cons_2 x_74 x_75) (cons_2 x_76 x_77)))))
(assert (forall ((x_74 Nat_0) (x_75 list_2) (x_76 Nat_0) (x_77 list_2))
	(=> (diseqlist_2 x_75 x_77)
	    (diseqlist_2 (cons_2 x_74 x_75) (cons_2 x_76 x_77)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_7 (list_2 list_3) Bool)
(declare-fun tail_7 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_79 list_2) (x_80 list_3))
	(head_7 x_79 (cons_3 x_79 x_80))))
(assert (forall ((x_79 list_2) (x_80 list_3))
	(tail_7 x_80 (cons_3 x_79 x_80))))
(assert (isnil_3 nil_3))
(assert (forall ((x_82 list_2) (x_83 list_3))
	(iscons_3 (cons_3 x_82 x_83))))
(assert (forall ((x_84 list_2) (x_85 list_3))
	(diseqlist_3 nil_3 (cons_3 x_84 x_85))))
(assert (forall ((x_86 list_2) (x_87 list_3))
	(diseqlist_3 (cons_3 x_86 x_87) nil_3)))
(assert (forall ((x_88 list_2) (x_89 list_3) (x_90 list_2) (x_91 list_3))
	(=> (diseqlist_2 x_88 x_90)
	    (diseqlist_3 (cons_3 x_88 x_89) (cons_3 x_90 x_91)))))
(assert (forall ((x_88 list_2) (x_89 list_3) (x_90 list_2) (x_91 list_3))
	(=> (diseqlist_3 x_89 x_91)
	    (diseqlist_3 (cons_3 x_88 x_89) (cons_3 x_90 x_91)))))
(declare-fun weirdconcat_0 (list_0 list_1) Bool)
(assert (forall ((x_10 list_0) (z_0 Nat_0) (xs_0 list_0) (xss_0 list_1))
	(=> (weirdconcat_0 x_10 (cons_1 xs_0 xss_0))
	    (weirdconcat_0 (cons_0 z_0 x_10) (cons_1 (cons_0 z_0 xs_0) xss_0)))))
(assert (forall ((x_11 list_0) (xss_0 list_1))
	(=> (weirdconcat_0 x_11 xss_0)
	    (weirdconcat_0 x_11 (cons_1 nil_0 xss_0)))))
(assert (weirdconcat_0 nil_0 nil_1))
(declare-fun weirdconcat_1 (list_2 list_3) Bool)
(assert (forall ((x_15 list_2) (z_1 Nat_0) (xs_1 list_2) (xss_1 list_3))
	(=> (weirdconcat_1 x_15 (cons_3 xs_1 xss_1))
	    (weirdconcat_1 (cons_2 z_1 x_15) (cons_3 (cons_2 z_1 xs_1) xss_1)))))
(assert (forall ((x_16 list_2) (xss_1 list_3))
	(=> (weirdconcat_1 x_16 xss_1)
	    (weirdconcat_1 x_16 (cons_3 nil_2 xss_1)))))
(assert (weirdconcat_1 nil_2 nil_3))
(declare-fun x_2 (list_0 list_0 list_0) Bool)
(assert (forall ((x_20 list_0) (z_2 Nat_0) (xs_2 list_0) (y_2 list_0))
	(=> (x_2 x_20 xs_2 y_2)
	    (x_2 (cons_0 z_2 x_20) (cons_0 z_2 xs_2) y_2))))
(assert (forall ((x_21 list_0))
	(x_2 x_21 nil_0 x_21)))
(declare-fun concat_0 (list_0 list_1) Bool)
(assert (forall ((x_22 list_0) (x_23 list_0) (y_3 list_0) (xs_3 list_1))
	(=>	(and (concat_0 x_23 xs_3)
			(x_2 x_22 y_3 x_23))
		(concat_0 x_22 (cons_1 y_3 xs_3)))))
(assert (concat_0 nil_0 nil_1))
(declare-fun x_5 (list_2 list_2 list_2) Bool)
(assert (forall ((x_27 list_2) (z_3 Nat_0) (xs_4 list_2) (y_4 list_2))
	(=> (x_5 x_27 xs_4 y_4)
	    (x_5 (cons_2 z_3 x_27) (cons_2 z_3 xs_4) y_4))))
(assert (forall ((x_28 list_2))
	(x_5 x_28 nil_2 x_28)))
(declare-fun concat_1 (list_2 list_3) Bool)
(assert (forall ((x_29 list_2) (x_30 list_2) (y_5 list_2) (xs_5 list_3))
	(=>	(and (concat_1 x_30 xs_5)
			(x_5 x_29 y_5 x_30))
		(concat_1 x_29 (cons_3 y_5 xs_5)))))
(assert (concat_1 nil_2 nil_3))
(assert (forall ((x_33 list_2) (x_34 list_2) (x_8 list_3))
	(=>	(and (diseqlist_2 x_33 x_34)
			(concat_1 x_33 x_8)
			(weirdconcat_1 x_34 x_8))
		false)))
(check-sat)
