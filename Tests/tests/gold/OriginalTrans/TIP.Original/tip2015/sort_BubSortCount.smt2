(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_2 ) (Z_3 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_26 Nat_0))
	(unS_1 x_26 (Z_3 x_26))))
(assert (isZ_2 Z_2))
(assert (forall ((x_28 Nat_0))
	(isZ_3 (Z_3 x_28))))
(assert (forall ((x_29 Nat_0))
	(diseqNat_0 Z_2 (Z_3 x_29))))
(assert (forall ((x_30 Nat_0))
	(diseqNat_0 (Z_3 x_30) Z_2)))
(assert (forall ((x_31 Nat_0) (x_32 Nat_0))
	(=> (diseqNat_0 x_31 x_32)
	    (diseqNat_0 (Z_3 x_31) (Z_3 x_32)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_3 Nat_0))
	(add_0 y_3 Z_2 y_3)))
(assert (forall ((r_0 Nat_0) (x_23 Nat_0) (y_3 Nat_0))
	(=> (add_0 r_0 x_23 y_3)
	    (add_0 (Z_3 r_0) (Z_3 x_23) y_3))))
(assert (forall ((y_3 Nat_0))
	(minus_0 Z_2 Z_2 y_3)))
(assert (forall ((r_0 Nat_0) (x_23 Nat_0) (y_3 Nat_0))
	(=> (minus_0 r_0 x_23 y_3)
	    (minus_0 (Z_3 r_0) (Z_3 x_23) y_3))))
(assert (forall ((y_3 Nat_0))
	(le_0 Z_2 y_3)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (le_0 x_23 y_3)
	    (le_0 (Z_3 x_23) (Z_3 y_3)))))
(assert (forall ((y_3 Nat_0))
	(ge_0 y_3 Z_2)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (ge_0 x_23 y_3)
	    (ge_0 (Z_3 x_23) (Z_3 y_3)))))
(assert (forall ((y_3 Nat_0))
	(lt_0 Z_2 (Z_3 y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_23 y_3)
	    (lt_0 (Z_3 x_23) (Z_3 y_3)))))
(assert (forall ((y_3 Nat_0))
	(gt_0 (Z_3 y_3) Z_2)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (gt_0 x_23 y_3)
	    (gt_0 (Z_3 x_23) (Z_3 y_3)))))
(assert (forall ((y_3 Nat_0))
	(mult_0 Z_2 Z_2 y_3)))
(assert (forall ((r_0 Nat_0) (x_23 Nat_0) (y_3 Nat_0) (z_4 Nat_0))
	(=>	(and (mult_0 r_0 x_23 y_3)
			(add_0 z_4 r_0 y_3))
		(mult_0 z_4 (Z_3 x_23) y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_23 y_3)
	    (div_0 Z_2 x_23 y_3))))
(assert (forall ((r_0 Nat_0) (x_23 Nat_0) (y_3 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_23 y_3)
			(minus_0 z_4 x_23 y_3)
			(div_0 r_0 z_4 y_3))
		(div_0 (Z_3 r_0) x_23 y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_23 y_3)
	    (mod_0 x_23 x_23 y_3))))
(assert (forall ((r_0 Nat_0) (x_23 Nat_0) (y_3 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_23 y_3)
			(minus_0 z_4 x_23 y_3)
			(mod_0 r_0 z_4 y_3))
		(mod_0 r_0 x_23 y_3))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_0 false_0 false_0 false_0))
(assert (or_0 true_0 true_0 false_0))
(assert (or_0 true_0 false_0 true_0))
(assert (or_0 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_36 Nat_0) (x_37 list_0))
	(head_1 x_36 (cons_0 x_36 x_37))))
(assert (forall ((x_36 Nat_0) (x_37 list_0))
	(tail_1 x_37 (cons_0 x_36 x_37))))
(assert (isnil_0 nil_0))
(assert (forall ((x_39 Nat_0) (x_40 list_0))
	(iscons_0 (cons_0 x_39 x_40))))
(assert (forall ((x_41 Nat_0) (x_42 list_0))
	(diseqlist_0 nil_0 (cons_0 x_41 x_42))))
(assert (forall ((x_43 Nat_0) (x_44 list_0))
	(diseqlist_0 (cons_0 x_43 x_44) nil_0)))
(assert (forall ((x_45 Nat_0) (x_46 list_0) (x_47 Nat_0) (x_48 list_0))
	(=> (diseqNat_0 x_45 x_47)
	    (diseqlist_0 (cons_0 x_45 x_46) (cons_0 x_47 x_48)))))
(assert (forall ((x_45 Nat_0) (x_46 list_0) (x_47 Nat_0) (x_48 list_0))
	(=> (diseqlist_0 x_46 x_48)
	    (diseqlist_0 (cons_0 x_45 x_46) (cons_0 x_47 x_48)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Bool_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Bool_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_49 Bool_0) (x_50 list_0))
	(projpair_2 x_49 (pair_1 x_49 x_50))))
(assert (forall ((x_49 Bool_0) (x_50 list_0))
	(projpair_3 x_50 (pair_1 x_49 x_50))))
(assert (forall ((x_52 Bool_0) (x_53 list_0))
	(ispair_0 (pair_1 x_52 x_53))))
(assert (forall ((x_54 Bool_0) (x_55 list_0) (x_56 Bool_0) (x_57 list_0))
	(=> (diseqBool_0 x_54 x_56)
	    (diseqpair_0 (pair_1 x_54 x_55) (pair_1 x_56 x_57)))))
(assert (forall ((x_54 Bool_0) (x_55 list_0) (x_56 Bool_0) (x_57 list_0))
	(=> (diseqlist_0 x_55 x_57)
	    (diseqpair_0 (pair_1 x_54 x_55) (pair_1 x_56 x_57)))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_24 Nat_0) (x_5 Nat_0) (ys_0 list_0) (x_0 Nat_0))
	(=>	(and (count_0 x_5 x_0 ys_0)
			(add_0 x_24 (Z_3 Z_2) x_5))
		(count_0 x_24 x_0 (cons_0 x_0 ys_0)))))
(assert (forall ((x_6 Nat_0) (z_0 Nat_0) (ys_0 list_0) (x_0 Nat_0))
	(=>	(and (diseqNat_0 x_0 z_0)
			(count_0 x_6 x_0 ys_0))
		(count_0 x_6 x_0 (cons_0 z_0 ys_0)))))
(assert (forall ((x_0 Nat_0))
	(count_0 Z_2 x_0 nil_0)))
(declare-fun bubble_0 (pair_0 list_0) Bool)
(assert (forall ((b_0 Bool_0) (ys_1 list_0) (y_2 Nat_0) (xs_0 list_0) (y_1 Nat_0))
	(=>	(and (le_0 y_1 y_2)
			(bubble_0 (pair_1 b_0 ys_1) (cons_0 y_2 xs_0)))
		(bubble_0 (pair_1 b_0 (cons_0 y_1 ys_1)) (cons_0 y_1 (cons_0 y_2 xs_0))))))
(assert (forall ((b_1 Bool_0) (ys_2 list_0) (y_2 Nat_0) (xs_0 list_0) (y_1 Nat_0))
	(=>	(and (gt_0 y_1 y_2)
			(bubble_0 (pair_1 b_1 ys_2) (cons_0 y_1 xs_0)))
		(bubble_0 (pair_1 true_0 (cons_0 y_2 ys_2)) (cons_0 y_1 (cons_0 y_2 xs_0))))))
(assert (forall ((y_1 Nat_0))
	(bubble_0 (pair_1 false_0 (cons_0 y_1 nil_0)) (cons_0 y_1 nil_0))))
(assert (bubble_0 (pair_1 false_0 nil_0) nil_0))
(declare-fun bubsort_0 (list_0 list_0) Bool)
(assert (forall ((x_16 list_0) (ys_3 list_0) (x_2 list_0))
	(=>	(and (bubsort_0 x_16 ys_3)
			(bubble_0 (pair_1 true_0 ys_3) x_2))
		(bubsort_0 x_16 x_2))))
(assert (forall ((x_19 list_0) (c_0 Bool_0) (ys_3 list_0))
	(=>	(and (diseqBool_0 c_0 true_0)
			(bubble_0 (pair_1 c_0 ys_3) x_19))
		(bubsort_0 x_19 x_19))))
(assert (forall ((x_20 list_0) (x_21 Nat_0) (x_22 Nat_0) (x_3 Nat_0) (xs_1 list_0))
	(=>	(and (diseqNat_0 x_21 x_22)
			(bubsort_0 x_20 xs_1)
			(count_0 x_21 x_3 x_20)
			(count_0 x_22 x_3 xs_1))
		false)))
(check-sat)
