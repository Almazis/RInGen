(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (Z_1 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_20 Nat_0))
	(unS_1 x_20 (Z_1 x_20))))
(assert (isZ_2 Z_0))
(assert (forall ((x_22 Nat_0))
	(isZ_3 (Z_1 x_22))))
(assert (forall ((x_23 Nat_0))
	(diseqNat_0 Z_0 (Z_1 x_23))))
(assert (forall ((x_24 Nat_0))
	(diseqNat_0 (Z_1 x_24) Z_0)))
(assert (forall ((x_25 Nat_0) (x_26 Nat_0))
	(=> (diseqNat_0 x_25 x_26)
	    (diseqNat_0 (Z_1 x_25) (Z_1 x_26)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((r_0 Nat_0) (x_11 Nat_0) (y_0 Nat_0))
	(=> (add_0 r_0 x_11 y_0)
	    (add_0 (Z_1 r_0) (Z_1 x_11) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((r_0 Nat_0) (x_11 Nat_0) (y_0 Nat_0))
	(=> (minus_0 r_0 x_11 y_0)
	    (minus_0 (Z_1 r_0) (Z_1 x_11) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_11 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_11 y_0)
	    (le_0 (Z_1 x_11) (Z_1 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_11 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_11 y_0)
	    (ge_0 (Z_1 x_11) (Z_1 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (Z_1 y_0))))
(assert (forall ((x_11 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_11 y_0)
	    (lt_0 (Z_1 x_11) (Z_1 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (Z_1 y_0) Z_0)))
(assert (forall ((x_11 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_11 y_0)
	    (gt_0 (Z_1 x_11) (Z_1 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((r_0 Nat_0) (x_11 Nat_0) (y_0 Nat_0) (z_2 Nat_0))
	(=>	(and (mult_0 r_0 x_11 y_0)
			(add_0 z_2 r_0 y_0))
		(mult_0 z_2 (Z_1 x_11) y_0))))
(assert (forall ((x_11 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_11 y_0)
	    (div_0 Z_0 x_11 y_0))))
(assert (forall ((r_0 Nat_0) (x_11 Nat_0) (y_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_11 y_0)
			(minus_0 z_2 x_11 y_0)
			(div_0 r_0 z_2 y_0))
		(div_0 (Z_1 r_0) x_11 y_0))))
(assert (forall ((x_11 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_11 y_0)
	    (mod_0 x_11 x_11 y_0))))
(assert (forall ((r_0 Nat_0) (x_11 Nat_0) (y_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_11 y_0)
			(minus_0 z_2 x_11 y_0)
			(mod_0 r_0 z_2 y_0))
		(mod_0 r_0 x_11 y_0))))
(declare-fun sum_0 (Nat_0 Nat_0) Bool)
(assert (sum_0 Z_0 Z_0))
(assert (forall ((x_13 Nat_0) (x_12 Nat_0) (x_4 Nat_0) (x_0 Nat_0))
	(=>	(and (diseqNat_0 x_0 Z_0)
			(sum_0 x_4 x_13)
			(minus_0 x_13 x_0 (Z_1 Z_0))
			(add_0 x_12 x_4 x_0))
		(sum_0 x_12 x_0))))
(declare-fun cubes_0 (Nat_0 Nat_0) Bool)
(assert (cubes_0 Z_0 Z_0))
(assert (forall ((x_17 Nat_0) (x_14 Nat_0) (x_15 Nat_0) (x_16 Nat_0) (x_7 Nat_0) (x_1 Nat_0))
	(=>	(and (diseqNat_0 x_1 Z_0)
			(cubes_0 x_7 x_17)
			(minus_0 x_17 x_1 (Z_1 Z_0))
			(mult_0 x_14 x_1 x_1)
			(mult_0 x_15 x_14 x_1)
			(add_0 x_16 x_7 x_15))
		(cubes_0 x_16 x_1))))
(assert (forall ((x_18 Nat_0) (x_8 Nat_0) (x_9 Nat_0) (x_10 Nat_0) (n_0 Nat_0))
	(=>	(and (diseqNat_0 x_8 x_18)
			(cubes_0 x_8 n_0)
			(sum_0 x_9 n_0)
			(sum_0 x_10 n_0)
			(mult_0 x_18 x_9 x_10))
		false)))
(check-sat)
