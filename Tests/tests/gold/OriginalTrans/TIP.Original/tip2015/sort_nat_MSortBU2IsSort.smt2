(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_0 false_0 false_0 false_0))
(assert (or_0 true_0 true_0 false_0))
(assert (or_0 true_0 false_0 true_0))
(assert (or_0 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_68 Nat_0))
	(p_1 x_68 (succ_0 x_68))))
(assert (iszero_0 zero_0))
(assert (forall ((x_70 Nat_0))
	(issucc_0 (succ_0 x_70))))
(assert (forall ((x_71 Nat_0))
	(diseqNat_0 zero_0 (succ_0 x_71))))
(assert (forall ((x_72 Nat_0))
	(diseqNat_0 (succ_0 x_72) zero_0)))
(assert (forall ((x_73 Nat_0) (x_74 Nat_0))
	(=> (diseqNat_0 x_73 x_74)
	    (diseqNat_0 (succ_0 x_73) (succ_0 x_74)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_76 Nat_0) (x_77 list_0))
	(head_2 x_76 (cons_0 x_76 x_77))))
(assert (forall ((x_76 Nat_0) (x_77 list_0))
	(tail_2 x_77 (cons_0 x_76 x_77))))
(assert (isnil_0 nil_0))
(assert (forall ((x_79 Nat_0) (x_80 list_0))
	(iscons_0 (cons_0 x_79 x_80))))
(assert (forall ((x_81 Nat_0) (x_82 list_0))
	(diseqlist_0 nil_0 (cons_0 x_81 x_82))))
(assert (forall ((x_83 Nat_0) (x_84 list_0))
	(diseqlist_0 (cons_0 x_83 x_84) nil_0)))
(assert (forall ((x_85 Nat_0) (x_86 list_0) (x_87 Nat_0) (x_88 list_0))
	(=> (diseqNat_0 x_85 x_87)
	    (diseqlist_0 (cons_0 x_85 x_86) (cons_0 x_87 x_88)))))
(assert (forall ((x_85 Nat_0) (x_86 list_0) (x_87 Nat_0) (x_88 list_0))
	(=> (diseqlist_0 x_86 x_88)
	    (diseqlist_0 (cons_0 x_85 x_86) (cons_0 x_87 x_88)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (list_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_90 list_0) (x_91 list_1))
	(head_3 x_90 (cons_1 x_90 x_91))))
(assert (forall ((x_90 list_0) (x_91 list_1))
	(tail_3 x_91 (cons_1 x_90 x_91))))
(assert (isnil_1 nil_1))
(assert (forall ((x_93 list_0) (x_94 list_1))
	(iscons_1 (cons_1 x_93 x_94))))
(assert (forall ((x_95 list_0) (x_96 list_1))
	(diseqlist_1 nil_1 (cons_1 x_95 x_96))))
(assert (forall ((x_97 list_0) (x_98 list_1))
	(diseqlist_1 (cons_1 x_97 x_98) nil_1)))
(assert (forall ((x_100 list_1) (x_101 list_0) (x_102 list_1) (x_99 list_0))
	(=> (diseqlist_0 x_99 x_101)
	    (diseqlist_1 (cons_1 x_99 x_100) (cons_1 x_101 x_102)))))
(assert (forall ((x_100 list_1) (x_101 list_0) (x_102 list_1) (x_99 list_0))
	(=> (diseqlist_1 x_100 x_102)
	    (diseqlist_1 (cons_1 x_99 x_100) (cons_1 x_101 x_102)))))
(declare-fun leq_0 (Bool_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_13 Bool_0) (x_1 Nat_0) (z_0 Nat_0))
	(=> (leq_0 x_13 z_0 x_1)
	    (leq_0 x_13 (succ_0 z_0) (succ_0 x_1)))))
(assert (forall ((z_0 Nat_0))
	(leq_0 false_0 (succ_0 z_0) zero_0)))
(assert (forall ((y_0 Nat_0))
	(leq_0 true_0 zero_0 y_0)))
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_19 list_0) (x_4 Nat_0) (x_5 list_0) (z_1 Nat_0) (x_3 list_0))
	(=>	(and (lmerge_0 x_19 x_3 (cons_0 x_4 x_5))
			(leq_0 true_0 z_1 x_4))
		(lmerge_0 (cons_0 z_1 x_19) (cons_0 z_1 x_3) (cons_0 x_4 x_5)))))
(assert (forall ((x_22 list_0) (x_20 Bool_0) (x_4 Nat_0) (x_5 list_0) (z_1 Nat_0) (x_3 list_0))
	(=>	(and (diseqBool_0 x_20 true_0)
			(lmerge_0 x_22 (cons_0 z_1 x_3) x_5)
			(leq_0 x_20 z_1 x_4))
		(lmerge_0 (cons_0 x_4 x_22) (cons_0 z_1 x_3) (cons_0 x_4 x_5)))))
(assert (forall ((z_1 Nat_0) (x_3 list_0))
	(lmerge_0 (cons_0 z_1 x_3) (cons_0 z_1 x_3) nil_0)))
(assert (forall ((x_24 list_0))
	(lmerge_0 x_24 nil_0 x_24)))
(declare-fun pairwise_0 (list_1 list_1) Bool)
(assert (forall ((x_26 list_0) (x_27 list_1) (ys_0 list_0) (xss_0 list_1) (xs_0 list_0))
	(=>	(and (lmerge_0 x_26 xs_0 ys_0)
			(pairwise_0 x_27 xss_0))
		(pairwise_0 (cons_1 x_26 x_27) (cons_1 xs_0 (cons_1 ys_0 xss_0))))))
(assert (forall ((xs_0 list_0))
	(pairwise_0 (cons_1 xs_0 nil_1) (cons_1 xs_0 nil_1))))
(assert (pairwise_0 nil_1 nil_1))
(declare-fun mergingbu_0 (list_0 list_1) Bool)
(assert (forall ((x_30 list_0) (x_31 list_1) (z_2 list_0) (x_8 list_1) (xs_1 list_0))
	(=>	(and (pairwise_0 x_31 (cons_1 xs_1 (cons_1 z_2 x_8)))
			(mergingbu_0 x_30 x_31))
		(mergingbu_0 x_30 (cons_1 xs_1 (cons_1 z_2 x_8))))))
(assert (forall ((x_33 list_0))
	(mergingbu_0 x_33 (cons_1 x_33 nil_1))))
(assert (mergingbu_0 nil_0 nil_1))
(declare-fun risers_0 (list_1 list_0) Bool)
(assert (forall ((ys_1 list_0) (yss_0 list_1) (y_5 Nat_0) (xs_2 list_0) (y_4 Nat_0))
	(=>	(and (risers_0 (cons_1 ys_1 yss_0) (cons_0 y_5 xs_2))
			(leq_0 true_0 y_4 y_5))
		(risers_0 (cons_1 (cons_0 y_4 ys_1) yss_0) (cons_0 y_4 (cons_0 y_5 xs_2))))))
(assert (forall ((x_40 list_1) (x_38 Bool_0) (y_5 Nat_0) (xs_2 list_0) (y_4 Nat_0))
	(=>	(and (diseqBool_0 x_38 true_0)
			(risers_0 x_40 (cons_0 y_5 xs_2))
			(leq_0 x_38 y_4 y_5))
		(risers_0 (cons_1 (cons_0 y_4 nil_0) x_40) (cons_0 y_4 (cons_0 y_5 xs_2))))))
(assert (forall ((y_5 Nat_0) (xs_2 list_0) (y_4 Nat_0))
	(=>	(and (risers_0 nil_1 (cons_0 y_5 xs_2))
			(leq_0 true_0 y_4 y_5))
		(risers_0 nil_1 (cons_0 y_4 (cons_0 y_5 xs_2))))))
(assert (forall ((x_46 list_1) (x_44 Bool_0) (y_5 Nat_0) (xs_2 list_0) (y_4 Nat_0))
	(=>	(and (diseqBool_0 x_44 true_0)
			(risers_0 x_46 (cons_0 y_5 xs_2))
			(leq_0 x_44 y_4 y_5))
		(risers_0 (cons_1 (cons_0 y_4 nil_0) x_46) (cons_0 y_4 (cons_0 y_5 xs_2))))))
(assert (forall ((y_4 Nat_0))
	(risers_0 (cons_1 (cons_0 y_4 nil_0) nil_1) (cons_0 y_4 nil_0))))
(assert (risers_0 nil_1 nil_0))
(declare-fun msortbu_0 (list_0 list_0) Bool)
(assert (forall ((x_49 list_0) (x_50 list_1) (x_10 list_0))
	(=>	(and (risers_0 x_50 x_10)
			(mergingbu_0 x_49 x_50))
		(msortbu_0 x_49 x_10))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((z_4 Nat_0) (xs_3 list_0) (x_11 Nat_0))
	(=> (leq_0 true_0 x_11 z_4)
	    (insert_0 (cons_0 x_11 (cons_0 z_4 xs_3)) x_11 (cons_0 z_4 xs_3)))))
(assert (forall ((x_56 list_0) (x_54 Bool_0) (z_4 Nat_0) (xs_3 list_0) (x_11 Nat_0))
	(=>	(and (diseqBool_0 x_54 true_0)
			(insert_0 x_56 x_11 xs_3)
			(leq_0 x_54 x_11 z_4))
		(insert_0 (cons_0 z_4 x_56) x_11 (cons_0 z_4 xs_3)))))
(assert (forall ((x_11 Nat_0))
	(insert_0 (cons_0 x_11 nil_0) x_11 nil_0)))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_58 list_0) (x_59 list_0) (y_7 Nat_0) (xs_4 list_0))
	(=>	(and (isort_0 x_59 xs_4)
			(insert_0 x_58 y_7 x_59))
		(isort_0 x_58 (cons_0 y_7 xs_4)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_62 list_0) (x_63 list_0) (xs_5 list_0))
	(=>	(and (diseqlist_0 x_62 x_63)
			(msortbu_0 x_62 xs_5)
			(isort_0 x_63 xs_5))
		false)))
(check-sat)
