(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_81 Nat_0))
	(unS_1 x_81 (Z_6 x_81))))
(assert (isZ_2 Z_5))
(assert (forall ((x_83 Nat_0))
	(isZ_3 (Z_6 x_83))))
(assert (forall ((x_84 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_84))))
(assert (forall ((x_85 Nat_0))
	(diseqNat_0 (Z_6 x_85) Z_5)))
(assert (forall ((x_86 Nat_0) (x_87 Nat_0))
	(=> (diseqNat_0 x_86 x_87)
	    (diseqNat_0 (Z_6 x_86) (Z_6 x_87)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_11 Nat_0))
	(add_0 y_11 Z_5 y_11)))
(assert (forall ((r_0 Nat_0) (x_74 Nat_0) (y_11 Nat_0))
	(=> (add_0 r_0 x_74 y_11)
	    (add_0 (Z_6 r_0) (Z_6 x_74) y_11))))
(assert (forall ((y_11 Nat_0))
	(minus_0 Z_5 Z_5 y_11)))
(assert (forall ((r_0 Nat_0) (x_74 Nat_0) (y_11 Nat_0))
	(=> (minus_0 r_0 x_74 y_11)
	    (minus_0 (Z_6 r_0) (Z_6 x_74) y_11))))
(assert (forall ((y_11 Nat_0))
	(le_0 Z_5 y_11)))
(assert (forall ((x_74 Nat_0) (y_11 Nat_0))
	(=> (le_0 x_74 y_11)
	    (le_0 (Z_6 x_74) (Z_6 y_11)))))
(assert (forall ((y_11 Nat_0))
	(ge_0 y_11 Z_5)))
(assert (forall ((x_74 Nat_0) (y_11 Nat_0))
	(=> (ge_0 x_74 y_11)
	    (ge_0 (Z_6 x_74) (Z_6 y_11)))))
(assert (forall ((y_11 Nat_0))
	(lt_0 Z_5 (Z_6 y_11))))
(assert (forall ((x_74 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_74 y_11)
	    (lt_0 (Z_6 x_74) (Z_6 y_11)))))
(assert (forall ((y_11 Nat_0))
	(gt_0 (Z_6 y_11) Z_5)))
(assert (forall ((x_74 Nat_0) (y_11 Nat_0))
	(=> (gt_0 x_74 y_11)
	    (gt_0 (Z_6 x_74) (Z_6 y_11)))))
(assert (forall ((y_11 Nat_0))
	(mult_0 Z_5 Z_5 y_11)))
(assert (forall ((r_0 Nat_0) (x_74 Nat_0) (y_11 Nat_0) (z_7 Nat_0))
	(=>	(and (mult_0 r_0 x_74 y_11)
			(add_0 z_7 r_0 y_11))
		(mult_0 z_7 (Z_6 x_74) y_11))))
(assert (forall ((x_74 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_74 y_11)
	    (div_0 Z_5 x_74 y_11))))
(assert (forall ((r_0 Nat_0) (x_74 Nat_0) (y_11 Nat_0) (z_7 Nat_0))
	(=>	(and (ge_0 x_74 y_11)
			(minus_0 z_7 x_74 y_11)
			(div_0 r_0 z_7 y_11))
		(div_0 (Z_6 r_0) x_74 y_11))))
(assert (forall ((x_74 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_74 y_11)
	    (mod_0 x_74 x_74 y_11))))
(assert (forall ((r_0 Nat_0) (x_74 Nat_0) (y_11 Nat_0) (z_7 Nat_0))
	(=>	(and (ge_0 x_74 y_11)
			(minus_0 z_7 x_74 y_11)
			(mod_0 r_0 z_7 y_11))
		(mod_0 r_0 x_74 y_11))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_89 Nat_0) (x_90 list_0))
	(head_1 x_89 (cons_0 x_89 x_90))))
(assert (forall ((x_89 Nat_0) (x_90 list_0))
	(tail_1 x_90 (cons_0 x_89 x_90))))
(assert (isnil_0 nil_0))
(assert (forall ((x_92 Nat_0) (x_93 list_0))
	(iscons_0 (cons_0 x_92 x_93))))
(assert (forall ((x_94 Nat_0) (x_95 list_0))
	(diseqlist_0 nil_0 (cons_0 x_94 x_95))))
(assert (forall ((x_96 Nat_0) (x_97 list_0))
	(diseqlist_0 (cons_0 x_96 x_97) nil_0)))
(assert (forall ((x_100 Nat_0) (x_101 list_0) (x_98 Nat_0) (x_99 list_0))
	(=> (diseqNat_0 x_98 x_100)
	    (diseqlist_0 (cons_0 x_98 x_99) (cons_0 x_100 x_101)))))
(assert (forall ((x_100 Nat_0) (x_101 list_0) (x_98 Nat_0) (x_99 list_0))
	(=> (diseqlist_0 x_99 x_101)
	    (diseqlist_0 (cons_0 x_98 x_99) (cons_0 x_100 x_101)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_102 list_0) (x_103 list_0))
	(projpair_2 x_102 (pair_1 x_102 x_103))))
(assert (forall ((x_102 list_0) (x_103 list_0))
	(projpair_3 x_103 (pair_1 x_102 x_103))))
(assert (forall ((x_105 list_0) (x_106 list_0))
	(ispair_0 (pair_1 x_105 x_106))))
(assert (forall ((x_107 list_0) (x_108 list_0) (x_109 list_0) (x_110 list_0))
	(=> (diseqlist_0 x_107 x_109)
	    (diseqpair_0 (pair_1 x_107 x_108) (pair_1 x_109 x_110)))))
(assert (forall ((x_107 list_0) (x_108 list_0) (x_109 list_0) (x_110 list_0))
	(=> (diseqlist_0 x_108 x_110)
	    (diseqpair_0 (pair_1 x_107 x_108) (pair_1 x_109 x_110)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_75 Nat_0) (x_21 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=>	(and (gt_0 x_0 Z_5)
			(take_0 x_21 x_75 xs_0)
			(minus_0 x_75 x_0 (Z_6 Z_5)))
		(take_0 (cons_0 z_0 x_21) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5)
	    (take_0 nil_0 x_0 nil_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (le_0 x_1 y_1)
	    (sort_0 (cons_0 x_1 (cons_0 y_1 nil_0)) x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (gt_0 x_1 y_1)
	    (sort_0 (cons_0 y_1 (cons_0 x_1 nil_0)) x_1 y_1))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_26 Nat_0) (x_27 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=>	(and (length_0 x_27 l_0)
			(add_0 x_26 (Z_6 Z_5) x_27))
		(length_0 x_26 (cons_0 y_2 l_0)))))
(assert (length_0 Z_5 nil_0))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((z_1 Nat_0) (xs_1 list_0) (x_3 Nat_0))
	(=> (le_0 x_3 z_1)
	    (insert_0 (cons_0 x_3 (cons_0 z_1 xs_1)) x_3 (cons_0 z_1 xs_1)))))
(assert (forall ((x_31 list_0) (z_1 Nat_0) (xs_1 list_0) (x_3 Nat_0))
	(=>	(and (gt_0 x_3 z_1)
			(insert_0 x_31 x_3 xs_1))
		(insert_0 (cons_0 z_1 x_31) x_3 (cons_0 z_1 xs_1)))))
(assert (forall ((x_3 Nat_0))
	(insert_0 (cons_0 x_3 nil_0) x_3 nil_0)))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_33 list_0) (x_34 list_0) (y_4 Nat_0) (xs_2 list_0))
	(=>	(and (isort_0 x_34 xs_2)
			(insert_0 x_33 y_4 x_34))
		(isort_0 x_33 (cons_0 y_4 xs_2)))))
(assert (isort_0 nil_0 nil_0))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_37 list_0) (x_5 Nat_0))
	(=> (le_0 x_5 Z_5)
	    (drop_0 x_37 x_5 x_37))))
(assert (forall ((x_77 Nat_0) (x_38 list_0) (z_2 Nat_0) (xs_3 list_0) (x_5 Nat_0))
	(=>	(and (gt_0 x_5 Z_5)
			(drop_0 x_38 x_77 xs_3)
			(minus_0 x_77 x_5 (Z_6 Z_5)))
		(drop_0 x_38 x_5 (cons_0 z_2 xs_3)))))
(assert (forall ((x_40 list_0) (x_5 Nat_0))
	(=> (le_0 x_5 Z_5)
	    (drop_0 x_40 x_5 x_40))))
(assert (forall ((x_5 Nat_0))
	(=> (gt_0 x_5 Z_5)
	    (drop_0 nil_0 x_5 nil_0))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_43 list_0) (x_44 list_0) (x_6 Nat_0) (y_6 list_0))
	(=>	(and (take_0 x_43 x_6 y_6)
			(drop_0 x_44 x_6 y_6))
		(splitAt_0 (pair_1 x_43 x_44) x_6 y_6))))
(declare-fun x_7 (list_0 list_0 list_0) Bool)
(assert (forall ((x_46 list_0) (z_3 Nat_0) (xs_4 list_0) (y_7 list_0))
	(=> (x_7 x_46 xs_4 y_7)
	    (x_7 (cons_0 z_3 x_46) (cons_0 z_3 xs_4) y_7))))
(assert (forall ((x_47 list_0))
	(x_7 x_47 nil_0 x_47)))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_48 list_0) (x_49 list_0) (y_8 Nat_0) (xs_5 list_0))
	(=>	(and (reverse_0 x_49 xs_5)
			(x_7 x_48 x_49 (cons_0 y_8 nil_0)))
		(reverse_0 x_48 (cons_0 y_8 xs_5)))))
(assert (reverse_0 nil_0 nil_0))
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_78 Nat_0) (x_55 list_0) (x_56 list_0) (x_57 list_0) (x_52 Nat_0) (x_53 list_0) (ys_0 list_0) (zs_0 list_0) (x_13 list_0))
	(=>	(and (stoogesort_1 x_56 zs_0)
			(reverse_0 x_57 ys_0)
			(x_7 x_55 x_56 x_57)
			(length_0 x_52 x_13)
			(reverse_0 x_53 x_13)
			(splitAt_0 (pair_1 ys_0 zs_0) x_78 x_53)
			(div_0 x_78 x_52 (Z_6 (Z_6 (Z_6 Z_5)))))
		(stoogesort_0 x_55 x_13))))
(assert (forall ((x_59 list_0) (x_60 list_0) (x_61 list_0) (x_16 Nat_0) (x_17 list_0) (y_10 Nat_0) (y_9 Nat_0))
	(=>	(and (stoogesort_0 x_60 (cons_0 y_9 (cons_0 y_10 (cons_0 x_16 x_17))))
			(stoogesort_2 x_61 x_60)
			(stoogesort_0 x_59 x_61))
		(stoogesort_1 x_59 (cons_0 y_9 (cons_0 y_10 (cons_0 x_16 x_17)))))))
(assert (forall ((x_63 list_0) (y_10 Nat_0) (y_9 Nat_0))
	(=> (sort_0 x_63 y_9 y_10)
	    (stoogesort_1 x_63 (cons_0 y_9 (cons_0 y_10 nil_0))))))
(assert (forall ((y_9 Nat_0))
	(stoogesort_1 (cons_0 y_9 nil_0) (cons_0 y_9 nil_0))))
(assert (stoogesort_1 nil_0 nil_0))
(assert (forall ((x_79 Nat_0) (x_69 list_0) (x_70 list_0) (x_67 Nat_0) (ys_1 list_0) (zs_1 list_0) (x_18 list_0))
	(=>	(and (stoogesort_1 x_70 zs_1)
			(x_7 x_69 ys_1 x_70)
			(length_0 x_67 x_18)
			(splitAt_0 (pair_1 ys_1 zs_1) x_79 x_18)
			(div_0 x_79 x_67 (Z_6 (Z_6 (Z_6 Z_5)))))
		(stoogesort_2 x_69 x_18))))
(assert (forall ((x_72 list_0) (x_73 list_0) (xs_6 list_0))
	(=>	(and (diseqlist_0 x_72 x_73)
			(stoogesort_1 x_72 xs_6)
			(isort_0 x_73 xs_6))
		false)))
(check-sat)
