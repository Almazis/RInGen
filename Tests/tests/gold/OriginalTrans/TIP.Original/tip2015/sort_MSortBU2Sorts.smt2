(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_4 ) (Z_5 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_48 Nat_0))
	(unS_1 x_48 (Z_5 x_48))))
(assert (isZ_2 Z_4))
(assert (forall ((x_50 Nat_0))
	(isZ_3 (Z_5 x_50))))
(assert (forall ((x_51 Nat_0))
	(diseqNat_0 Z_4 (Z_5 x_51))))
(assert (forall ((x_52 Nat_0))
	(diseqNat_0 (Z_5 x_52) Z_4)))
(assert (forall ((x_53 Nat_0) (x_54 Nat_0))
	(=> (diseqNat_0 x_53 x_54)
	    (diseqNat_0 (Z_5 x_53) (Z_5 x_54)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_7 Nat_0))
	(add_0 y_7 Z_4 y_7)))
(assert (forall ((r_0 Nat_0) (x_46 Nat_0) (y_7 Nat_0))
	(=> (add_0 r_0 x_46 y_7)
	    (add_0 (Z_5 r_0) (Z_5 x_46) y_7))))
(assert (forall ((y_7 Nat_0))
	(minus_0 Z_4 Z_4 y_7)))
(assert (forall ((r_0 Nat_0) (x_46 Nat_0) (y_7 Nat_0))
	(=> (minus_0 r_0 x_46 y_7)
	    (minus_0 (Z_5 r_0) (Z_5 x_46) y_7))))
(assert (forall ((y_7 Nat_0))
	(le_0 Z_4 y_7)))
(assert (forall ((x_46 Nat_0) (y_7 Nat_0))
	(=> (le_0 x_46 y_7)
	    (le_0 (Z_5 x_46) (Z_5 y_7)))))
(assert (forall ((y_7 Nat_0))
	(ge_0 y_7 Z_4)))
(assert (forall ((x_46 Nat_0) (y_7 Nat_0))
	(=> (ge_0 x_46 y_7)
	    (ge_0 (Z_5 x_46) (Z_5 y_7)))))
(assert (forall ((y_7 Nat_0))
	(lt_0 Z_4 (Z_5 y_7))))
(assert (forall ((x_46 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_46 y_7)
	    (lt_0 (Z_5 x_46) (Z_5 y_7)))))
(assert (forall ((y_7 Nat_0))
	(gt_0 (Z_5 y_7) Z_4)))
(assert (forall ((x_46 Nat_0) (y_7 Nat_0))
	(=> (gt_0 x_46 y_7)
	    (gt_0 (Z_5 x_46) (Z_5 y_7)))))
(assert (forall ((y_7 Nat_0))
	(mult_0 Z_4 Z_4 y_7)))
(assert (forall ((r_0 Nat_0) (x_46 Nat_0) (y_7 Nat_0) (z_6 Nat_0))
	(=>	(and (mult_0 r_0 x_46 y_7)
			(add_0 z_6 r_0 y_7))
		(mult_0 z_6 (Z_5 x_46) y_7))))
(assert (forall ((x_46 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_46 y_7)
	    (div_0 Z_4 x_46 y_7))))
(assert (forall ((r_0 Nat_0) (x_46 Nat_0) (y_7 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_46 y_7)
			(minus_0 z_6 x_46 y_7)
			(div_0 r_0 z_6 y_7))
		(div_0 (Z_5 r_0) x_46 y_7))))
(assert (forall ((x_46 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_46 y_7)
	    (mod_0 x_46 x_46 y_7))))
(assert (forall ((r_0 Nat_0) (x_46 Nat_0) (y_7 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_46 y_7)
			(minus_0 z_6 x_46 y_7)
			(mod_0 r_0 z_6 y_7))
		(mod_0 r_0 x_46 y_7))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_0 false_0 false_0 false_0))
(assert (or_0 true_0 true_0 false_0))
(assert (or_0 true_0 false_0 true_0))
(assert (or_0 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_58 Nat_0) (x_59 list_0))
	(head_2 x_58 (cons_0 x_58 x_59))))
(assert (forall ((x_58 Nat_0) (x_59 list_0))
	(tail_2 x_59 (cons_0 x_58 x_59))))
(assert (isnil_0 nil_0))
(assert (forall ((x_61 Nat_0) (x_62 list_0))
	(iscons_0 (cons_0 x_61 x_62))))
(assert (forall ((x_63 Nat_0) (x_64 list_0))
	(diseqlist_0 nil_0 (cons_0 x_63 x_64))))
(assert (forall ((x_65 Nat_0) (x_66 list_0))
	(diseqlist_0 (cons_0 x_65 x_66) nil_0)))
(assert (forall ((x_67 Nat_0) (x_68 list_0) (x_69 Nat_0) (x_70 list_0))
	(=> (diseqNat_0 x_67 x_69)
	    (diseqlist_0 (cons_0 x_67 x_68) (cons_0 x_69 x_70)))))
(assert (forall ((x_67 Nat_0) (x_68 list_0) (x_69 Nat_0) (x_70 list_0))
	(=> (diseqlist_0 x_68 x_70)
	    (diseqlist_0 (cons_0 x_67 x_68) (cons_0 x_69 x_70)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (list_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_72 list_0) (x_73 list_1))
	(head_3 x_72 (cons_1 x_72 x_73))))
(assert (forall ((x_72 list_0) (x_73 list_1))
	(tail_3 x_73 (cons_1 x_72 x_73))))
(assert (isnil_1 nil_1))
(assert (forall ((x_75 list_0) (x_76 list_1))
	(iscons_1 (cons_1 x_75 x_76))))
(assert (forall ((x_77 list_0) (x_78 list_1))
	(diseqlist_1 nil_1 (cons_1 x_77 x_78))))
(assert (forall ((x_79 list_0) (x_80 list_1))
	(diseqlist_1 (cons_1 x_79 x_80) nil_1)))
(assert (forall ((x_81 list_0) (x_82 list_1) (x_83 list_0) (x_84 list_1))
	(=> (diseqlist_0 x_81 x_83)
	    (diseqlist_1 (cons_1 x_81 x_82) (cons_1 x_83 x_84)))))
(assert (forall ((x_81 list_0) (x_82 list_1) (x_83 list_0) (x_84 list_1))
	(=> (diseqlist_1 x_82 x_84)
	    (diseqlist_1 (cons_1 x_81 x_82) (cons_1 x_83 x_84)))))
(declare-fun risers_0 (list_1 list_0) Bool)
(assert (forall ((ys_0 list_0) (yss_0 list_1) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=>	(and (le_0 y_0 y_1)
			(risers_0 (cons_1 ys_0 yss_0) (cons_0 y_1 xs_0)))
		(risers_0 (cons_1 (cons_0 y_0 ys_0) yss_0) (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((x_13 list_1) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=>	(and (gt_0 y_0 y_1)
			(risers_0 x_13 (cons_0 y_1 xs_0)))
		(risers_0 (cons_1 (cons_0 y_0 nil_0) x_13) (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=>	(and (le_0 y_0 y_1)
			(risers_0 nil_1 (cons_0 y_1 xs_0)))
		(risers_0 nil_1 (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((x_17 list_1) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=>	(and (gt_0 y_0 y_1)
			(risers_0 x_17 (cons_0 y_1 xs_0)))
		(risers_0 (cons_1 (cons_0 y_0 nil_0) x_17) (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_0 Nat_0))
	(risers_0 (cons_1 (cons_0 y_0 nil_0) nil_1) (cons_0 y_0 nil_0))))
(assert (risers_0 nil_1 nil_0))
(declare-fun ordered_0 (Bool_0 list_0) Bool)
(assert (forall ((x_20 Bool_0) (y_3 Nat_0) (xs_1 list_0) (y_2 Nat_0))
	(=>	(and (le_0 y_2 y_3)
			(ordered_0 x_20 (cons_0 y_3 xs_1)))
		(ordered_0 x_20 (cons_0 y_2 (cons_0 y_3 xs_1))))))
(assert (forall ((y_3 Nat_0) (xs_1 list_0) (y_2 Nat_0))
	(=> (gt_0 y_2 y_3)
	    (ordered_0 false_0 (cons_0 y_2 (cons_0 y_3 xs_1))))))
(assert (forall ((y_2 Nat_0))
	(ordered_0 true_0 (cons_0 y_2 nil_0))))
(assert (ordered_0 true_0 nil_0))
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_26 list_0) (x_4 Nat_0) (x_5 list_0) (z_2 Nat_0) (x_3 list_0))
	(=>	(and (le_0 z_2 x_4)
			(lmerge_0 x_26 x_3 (cons_0 x_4 x_5)))
		(lmerge_0 (cons_0 z_2 x_26) (cons_0 z_2 x_3) (cons_0 x_4 x_5)))))
(assert (forall ((x_28 list_0) (x_4 Nat_0) (x_5 list_0) (z_2 Nat_0) (x_3 list_0))
	(=>	(and (gt_0 z_2 x_4)
			(lmerge_0 x_28 (cons_0 z_2 x_3) x_5))
		(lmerge_0 (cons_0 x_4 x_28) (cons_0 z_2 x_3) (cons_0 x_4 x_5)))))
(assert (forall ((z_2 Nat_0) (x_3 list_0))
	(lmerge_0 (cons_0 z_2 x_3) (cons_0 z_2 x_3) nil_0)))
(assert (forall ((x_30 list_0))
	(lmerge_0 x_30 nil_0 x_30)))
(declare-fun pairwise_0 (list_1 list_1) Bool)
(assert (forall ((x_32 list_0) (x_33 list_1) (ys_1 list_0) (xss_0 list_1) (xs_2 list_0))
	(=>	(and (lmerge_0 x_32 xs_2 ys_1)
			(pairwise_0 x_33 xss_0))
		(pairwise_0 (cons_1 x_32 x_33) (cons_1 xs_2 (cons_1 ys_1 xss_0))))))
(assert (forall ((xs_2 list_0))
	(pairwise_0 (cons_1 xs_2 nil_1) (cons_1 xs_2 nil_1))))
(assert (pairwise_0 nil_1 nil_1))
(declare-fun mergingbu_0 (list_0 list_1) Bool)
(assert (forall ((x_36 list_0) (x_37 list_1) (z_3 list_0) (x_8 list_1) (xs_3 list_0))
	(=>	(and (pairwise_0 x_37 (cons_1 xs_3 (cons_1 z_3 x_8)))
			(mergingbu_0 x_36 x_37))
		(mergingbu_0 x_36 (cons_1 xs_3 (cons_1 z_3 x_8))))))
(assert (forall ((x_39 list_0))
	(mergingbu_0 x_39 (cons_1 x_39 nil_1))))
(assert (mergingbu_0 nil_0 nil_1))
(declare-fun msortbu_0 (list_0 list_0) Bool)
(assert (forall ((x_41 list_0) (x_42 list_1) (x_9 list_0))
	(=>	(and (risers_0 x_42 x_9)
			(mergingbu_0 x_41 x_42))
		(msortbu_0 x_41 x_9))))
(assert (forall ((x_44 list_0) (x_45 Bool_0) (xs_4 list_0))
	(=>	(and (diseqBool_0 x_45 true_0)
			(msortbu_0 x_44 xs_4)
			(ordered_0 x_45 x_44))
		false)))
(check-sat)
