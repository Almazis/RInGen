(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_8 ) (Z_9 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_87 Nat_0))
	(unS_1 x_87 (Z_9 x_87))))
(assert (isZ_2 Z_8))
(assert (forall ((x_89 Nat_0))
	(isZ_3 (Z_9 x_89))))
(assert (forall ((x_90 Nat_0))
	(diseqNat_0 Z_8 (Z_9 x_90))))
(assert (forall ((x_91 Nat_0))
	(diseqNat_0 (Z_9 x_91) Z_8)))
(assert (forall ((x_92 Nat_0) (x_93 Nat_0))
	(=> (diseqNat_0 x_92 x_93)
	    (diseqNat_0 (Z_9 x_92) (Z_9 x_93)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_14 Nat_0))
	(add_0 y_14 Z_8 y_14)))
(assert (forall ((r_1 Nat_0) (x_85 Nat_0) (y_14 Nat_0))
	(=> (add_0 r_1 x_85 y_14)
	    (add_0 (Z_9 r_1) (Z_9 x_85) y_14))))
(assert (forall ((y_14 Nat_0))
	(minus_0 Z_8 Z_8 y_14)))
(assert (forall ((r_1 Nat_0) (x_85 Nat_0) (y_14 Nat_0))
	(=> (minus_0 r_1 x_85 y_14)
	    (minus_0 (Z_9 r_1) (Z_9 x_85) y_14))))
(assert (forall ((y_14 Nat_0))
	(le_0 Z_8 y_14)))
(assert (forall ((x_85 Nat_0) (y_14 Nat_0))
	(=> (le_0 x_85 y_14)
	    (le_0 (Z_9 x_85) (Z_9 y_14)))))
(assert (forall ((y_14 Nat_0))
	(ge_0 y_14 Z_8)))
(assert (forall ((x_85 Nat_0) (y_14 Nat_0))
	(=> (ge_0 x_85 y_14)
	    (ge_0 (Z_9 x_85) (Z_9 y_14)))))
(assert (forall ((y_14 Nat_0))
	(lt_0 Z_8 (Z_9 y_14))))
(assert (forall ((x_85 Nat_0) (y_14 Nat_0))
	(=> (lt_0 x_85 y_14)
	    (lt_0 (Z_9 x_85) (Z_9 y_14)))))
(assert (forall ((y_14 Nat_0))
	(gt_0 (Z_9 y_14) Z_8)))
(assert (forall ((x_85 Nat_0) (y_14 Nat_0))
	(=> (gt_0 x_85 y_14)
	    (gt_0 (Z_9 x_85) (Z_9 y_14)))))
(assert (forall ((y_14 Nat_0))
	(mult_0 Z_8 Z_8 y_14)))
(assert (forall ((r_1 Nat_0) (x_85 Nat_0) (y_14 Nat_0) (z_10 Nat_0))
	(=>	(and (mult_0 r_1 x_85 y_14)
			(add_0 z_10 r_1 y_14))
		(mult_0 z_10 (Z_9 x_85) y_14))))
(assert (forall ((x_85 Nat_0) (y_14 Nat_0))
	(=> (lt_0 x_85 y_14)
	    (div_0 Z_8 x_85 y_14))))
(assert (forall ((r_1 Nat_0) (x_85 Nat_0) (y_14 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_85 y_14)
			(minus_0 z_10 x_85 y_14)
			(div_0 r_1 z_10 y_14))
		(div_0 (Z_9 r_1) x_85 y_14))))
(assert (forall ((x_85 Nat_0) (y_14 Nat_0))
	(=> (lt_0 x_85 y_14)
	    (mod_0 x_85 x_85 y_14))))
(assert (forall ((r_1 Nat_0) (x_85 Nat_0) (y_14 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_85 y_14)
			(minus_0 z_10 x_85 y_14)
			(mod_0 r_1 z_10 y_14))
		(mod_0 r_1 x_85 y_14))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_1 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_1 false_0 false_0 false_0))
(assert (or_1 true_0 true_0 false_0))
(assert (or_1 true_0 false_0 true_0))
(assert (or_1 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_1 true_0 false_0))
(assert (not_1 false_0 true_0))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Bool_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_0 pair_0) Bool)
(declare-fun projpair_3 (Bool_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_96 Nat_0) (x_97 Bool_0))
	(projpair_2 x_96 (pair_1 x_96 x_97))))
(assert (forall ((x_96 Nat_0) (x_97 Bool_0))
	(projpair_3 x_97 (pair_1 x_96 x_97))))
(assert (forall ((x_100 Bool_0) (x_99 Nat_0))
	(ispair_0 (pair_1 x_99 x_100))))
(assert (forall ((x_101 Nat_0) (x_102 Bool_0) (x_103 Nat_0) (x_104 Bool_0))
	(=> (diseqNat_0 x_101 x_103)
	    (diseqpair_0 (pair_1 x_101 x_102) (pair_1 x_103 x_104)))))
(assert (forall ((x_101 Nat_0) (x_102 Bool_0) (x_103 Nat_0) (x_104 Bool_0))
	(=> (diseqBool_0 x_102 x_104)
	    (diseqpair_0 (pair_1 x_101 x_102) (pair_1 x_103 x_104)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_3 (Bool_0 list_0) Bool)
(declare-fun tail_3 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_106 Bool_0) (x_107 list_0))
	(head_3 x_106 (cons_0 x_106 x_107))))
(assert (forall ((x_106 Bool_0) (x_107 list_0))
	(tail_3 x_107 (cons_0 x_106 x_107))))
(assert (isnil_0 nil_0))
(assert (forall ((x_109 Bool_0) (x_110 list_0))
	(iscons_0 (cons_0 x_109 x_110))))
(assert (forall ((x_111 Bool_0) (x_112 list_0))
	(diseqlist_0 nil_0 (cons_0 x_111 x_112))))
(assert (forall ((x_113 Bool_0) (x_114 list_0))
	(diseqlist_0 (cons_0 x_113 x_114) nil_0)))
(assert (forall ((x_115 Bool_0) (x_116 list_0) (x_117 Bool_0) (x_118 list_0))
	(=> (diseqBool_0 x_115 x_117)
	    (diseqlist_0 (cons_0 x_115 x_116) (cons_0 x_117 x_118)))))
(assert (forall ((x_115 Bool_0) (x_116 list_0) (x_117 Bool_0) (x_118 list_0))
	(=> (diseqlist_0 x_116 x_118)
	    (diseqlist_0 (cons_0 x_115 x_116) (cons_0 x_117 x_118)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_4 (pair_0 list_1) Bool)
(declare-fun tail_4 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_120 pair_0) (x_121 list_1))
	(head_4 x_120 (cons_1 x_120 x_121))))
(assert (forall ((x_120 pair_0) (x_121 list_1))
	(tail_4 x_121 (cons_1 x_120 x_121))))
(assert (isnil_1 nil_1))
(assert (forall ((x_123 pair_0) (x_124 list_1))
	(iscons_1 (cons_1 x_123 x_124))))
(assert (forall ((x_125 pair_0) (x_126 list_1))
	(diseqlist_1 nil_1 (cons_1 x_125 x_126))))
(assert (forall ((x_127 pair_0) (x_128 list_1))
	(diseqlist_1 (cons_1 x_127 x_128) nil_1)))
(assert (forall ((x_129 pair_0) (x_130 list_1) (x_131 pair_0) (x_132 list_1))
	(=> (diseqpair_0 x_129 x_131)
	    (diseqlist_1 (cons_1 x_129 x_130) (cons_1 x_131 x_132)))))
(assert (forall ((x_129 pair_0) (x_130 list_1) (x_131 pair_0) (x_132 list_1))
	(=> (diseqlist_1 x_130 x_132)
	    (diseqlist_1 (cons_1 x_129 x_130) (cons_1 x_131 x_132)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 list_1) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_5 (list_1 list_2) Bool)
(declare-fun tail_5 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_134 list_1) (x_135 list_2))
	(head_5 x_134 (cons_2 x_134 x_135))))
(assert (forall ((x_134 list_1) (x_135 list_2))
	(tail_5 x_135 (cons_2 x_134 x_135))))
(assert (isnil_2 nil_2))
(assert (forall ((x_137 list_1) (x_138 list_2))
	(iscons_2 (cons_2 x_137 x_138))))
(assert (forall ((x_139 list_1) (x_140 list_2))
	(diseqlist_2 nil_2 (cons_2 x_139 x_140))))
(assert (forall ((x_141 list_1) (x_142 list_2))
	(diseqlist_2 (cons_2 x_141 x_142) nil_2)))
(assert (forall ((x_143 list_1) (x_144 list_2) (x_145 list_1) (x_146 list_2))
	(=> (diseqlist_1 x_143 x_145)
	    (diseqlist_2 (cons_2 x_143 x_144) (cons_2 x_145 x_146)))))
(assert (forall ((x_143 list_1) (x_144 list_2) (x_145 list_1) (x_146 list_2))
	(=> (diseqlist_2 x_144 x_146)
	    (diseqlist_2 (cons_2 x_143 x_144) (cons_2 x_145 x_146)))))
(declare-datatypes ((Form_0 0)) (((x_0 (proj_0 Form_0) (proj_1 Form_0)) (Not_0 (projNot_0 Form_0)) (Var_0 (projVar_0 Nat_0)))))
(declare-fun diseqForm_0 (Form_0 Form_0) Bool)
(declare-fun proj_2 (Form_0 Form_0) Bool)
(declare-fun proj_3 (Form_0 Form_0) Bool)
(declare-fun projNot_1 (Form_0 Form_0) Bool)
(declare-fun projVar_1 (Nat_0 Form_0) Bool)
(declare-fun isx_0 (Form_0) Bool)
(declare-fun isNot_0 (Form_0) Bool)
(declare-fun isVar_0 (Form_0) Bool)
(assert (forall ((x_147 Form_0) (x_148 Form_0))
	(proj_2 x_147 (x_0 x_147 x_148))))
(assert (forall ((x_147 Form_0) (x_148 Form_0))
	(proj_3 x_148 (x_0 x_147 x_148))))
(assert (forall ((x_150 Form_0))
	(projNot_1 x_150 (Not_0 x_150))))
(assert (forall ((x_152 Nat_0))
	(projVar_1 x_152 (Var_0 x_152))))
(assert (forall ((x_154 Form_0) (x_155 Form_0))
	(isx_0 (x_0 x_154 x_155))))
(assert (forall ((x_156 Form_0))
	(isNot_0 (Not_0 x_156))))
(assert (forall ((x_157 Nat_0))
	(isVar_0 (Var_0 x_157))))
(assert (forall ((x_158 Form_0) (x_159 Form_0) (x_160 Form_0))
	(diseqForm_0 (x_0 x_158 x_159) (Not_0 x_160))))
(assert (forall ((x_161 Form_0) (x_162 Form_0) (x_163 Nat_0))
	(diseqForm_0 (x_0 x_161 x_162) (Var_0 x_163))))
(assert (forall ((x_164 Form_0) (x_165 Form_0) (x_166 Form_0))
	(diseqForm_0 (Not_0 x_164) (x_0 x_165 x_166))))
(assert (forall ((x_167 Nat_0) (x_168 Form_0) (x_169 Form_0))
	(diseqForm_0 (Var_0 x_167) (x_0 x_168 x_169))))
(assert (forall ((x_170 Form_0) (x_171 Nat_0))
	(diseqForm_0 (Not_0 x_170) (Var_0 x_171))))
(assert (forall ((x_172 Nat_0) (x_173 Form_0))
	(diseqForm_0 (Var_0 x_172) (Not_0 x_173))))
(assert (forall ((x_174 Form_0) (x_175 Form_0) (x_176 Form_0) (x_177 Form_0))
	(=> (diseqForm_0 x_174 x_176)
	    (diseqForm_0 (x_0 x_174 x_175) (x_0 x_176 x_177)))))
(assert (forall ((x_174 Form_0) (x_175 Form_0) (x_176 Form_0) (x_177 Form_0))
	(=> (diseqForm_0 x_175 x_177)
	    (diseqForm_0 (x_0 x_174 x_175) (x_0 x_176 x_177)))))
(assert (forall ((x_178 Form_0) (x_179 Form_0))
	(=> (diseqForm_0 x_178 x_179)
	    (diseqForm_0 (Not_0 x_178) (Not_0 x_179)))))
(assert (forall ((x_180 Nat_0) (x_181 Nat_0))
	(=> (diseqNat_0 x_180 x_181)
	    (diseqForm_0 (Var_0 x_180) (Var_0 x_181)))))
(declare-fun or_0 (Bool_0 list_0) Bool)
(assert (forall ((x_22 Bool_0) (x_23 Bool_0) (y_0 Bool_0) (xs_0 list_0))
	(=>	(and (or_0 x_23 xs_0)
			(or_1 x_22 y_0 x_23))
		(or_0 x_22 (cons_0 y_0 xs_0)))))
(assert (or_0 false_0 nil_0))
(declare-fun models_0 (list_1 Nat_0 list_1) Bool)
(assert (forall ((x_26 list_1) (x_3 Nat_0) (y_2 Bool_0) (xs_1 list_1) (x_2 Nat_0))
	(=>	(and (diseqNat_0 x_2 x_3)
			(models_0 x_26 x_2 xs_1))
		(models_0 (cons_1 (pair_1 x_3 y_2) x_26) x_2 (cons_1 (pair_1 x_3 y_2) xs_1)))))
(assert (forall ((x_27 list_1) (y_2 Bool_0) (xs_1 list_1) (x_2 Nat_0))
	(=> (models_0 x_27 x_2 xs_1)
	    (models_0 x_27 x_2 (cons_1 (pair_1 x_2 y_2) xs_1)))))
(assert (forall ((x_2 Nat_0))
	(models_0 nil_1 x_2 nil_1)))
(declare-fun models_1 (list_0 Nat_0 list_1) Bool)
(assert (forall ((x_30 list_0) (y_4 Nat_0) (x_5 list_1) (x_4 Nat_0))
	(=> (models_1 x_30 x_4 x_5)
	    (models_1 x_30 x_4 (cons_1 (pair_1 y_4 true_0) x_5)))))
(assert (forall ((x_33 list_0) (x_6 Bool_0) (x_5 list_1) (x_4 Nat_0))
	(=>	(and (diseqBool_0 x_6 true_0)
			(models_1 x_33 x_4 x_5))
		(models_1 (cons_0 true_0 x_33) x_4 (cons_1 (pair_1 x_4 x_6) x_5)))))
(assert (forall ((x_35 list_0) (y_4 Nat_0) (x_6 Bool_0) (x_5 list_1) (x_4 Nat_0))
	(=>	(and (diseqNat_0 x_4 y_4)
			(diseqBool_0 x_6 true_0)
			(models_1 x_35 x_4 x_5))
		(models_1 (cons_0 false_0 x_35) x_4 (cons_1 (pair_1 y_4 x_6) x_5)))))
(assert (forall ((x_4 Nat_0))
	(models_1 nil_0 x_4 nil_1)))
(declare-fun models_2 (list_0 Nat_0 list_1) Bool)
(assert (forall ((x_38 list_0) (x_8 list_1) (x_7 Nat_0))
	(=> (models_2 x_38 x_7 x_8)
	    (models_2 (cons_0 true_0 x_38) x_7 (cons_1 (pair_1 x_7 true_0) x_8)))))
(assert (forall ((x_40 list_0) (y_6 Nat_0) (x_8 list_1) (x_7 Nat_0))
	(=>	(and (diseqNat_0 x_7 y_6)
			(models_2 x_40 x_7 x_8))
		(models_2 (cons_0 false_0 x_40) x_7 (cons_1 (pair_1 y_6 true_0) x_8)))))
(assert (forall ((x_41 list_0) (y_6 Nat_0) (x_9 Bool_0) (x_8 list_1) (x_7 Nat_0))
	(=>	(and (diseqBool_0 x_9 true_0)
			(models_2 x_41 x_7 x_8))
		(models_2 x_41 x_7 (cons_1 (pair_1 y_6 x_9) x_8)))))
(assert (forall ((x_7 Nat_0))
	(models_2 nil_0 x_7 nil_1)))
(declare-fun x_10 (list_2 list_2 list_2) Bool)
(assert (forall ((x_45 list_2) (z_3 list_1) (xs_2 list_2) (y_7 list_2))
	(=> (x_10 x_45 xs_2 y_7)
	    (x_10 (cons_2 z_3 x_45) (cons_2 z_3 xs_2) y_7))))
(assert (forall ((x_46 list_2))
	(x_10 x_46 nil_2 x_46)))
(declare-fun models_3 (list_2 Form_0 list_1) Bool)
(declare-fun models_4 (list_2 Form_0 list_2) Bool)
(declare-fun models_5 (list_2 list_2 Form_0 list_2) Bool)
(assert (forall ((x_50 list_1) (x_47 list_0) (x_48 Bool_0) (x_17 Nat_0) (y_10 list_1))
	(=>	(and (diseqBool_0 x_48 true_0)
			(models_0 x_50 x_17 y_10)
			(models_1 x_47 x_17 y_10)
			(or_0 x_48 x_47))
		(models_3 (cons_2 (cons_1 (pair_1 x_17 true_0) x_50) nil_2) (Var_0 x_17) y_10))))
(assert (forall ((x_51 list_0) (x_17 Nat_0) (y_10 list_1))
	(=>	(and (models_1 x_51 x_17 y_10)
			(or_0 true_0 x_51))
		(models_3 nil_2 (Var_0 x_17) y_10))))
(assert (forall ((x_57 list_1) (x_54 list_0) (x_55 Bool_0) (x_16 Nat_0) (y_10 list_1))
	(=>	(and (diseqBool_0 x_55 true_0)
			(models_0 x_57 x_16 y_10)
			(models_2 x_54 x_16 y_10)
			(or_0 x_55 x_54))
		(models_3 (cons_2 (cons_1 (pair_1 x_16 false_0) x_57) nil_2) (Not_0 (Var_0 x_16)) y_10))))
(assert (forall ((x_58 list_0) (x_16 Nat_0) (y_10 list_1))
	(=>	(and (models_2 x_58 x_16 y_10)
			(or_0 true_0 x_58))
		(models_3 nil_2 (Not_0 (Var_0 x_16)) y_10))))
(assert (forall ((x_61 list_2) (p_1 Form_0) (y_10 list_1))
	(=> (models_3 x_61 p_1 y_10)
	    (models_3 x_61 (Not_0 (Not_0 p_1)) y_10))))
(assert (forall ((x_63 list_2) (x_64 list_2) (x_65 list_2) (r_0 Form_0) (q_3 Form_0) (y_10 list_1))
	(=>	(and (models_3 x_64 (Not_0 r_0) y_10)
			(models_3 x_65 (x_0 r_0 (Not_0 q_3)) y_10)
			(x_10 x_63 x_64 x_65))
		(models_3 x_63 (Not_0 (x_0 r_0 q_3)) y_10))))
(assert (forall ((x_67 list_2) (x_68 list_2) (p_0 Form_0) (q_2 Form_0) (y_10 list_1))
	(=>	(and (models_3 x_68 p_0 y_10)
			(models_4 x_67 q_2 x_68))
		(models_3 x_67 (x_0 p_0 q_2) y_10))))
(assert (forall ((x_70 list_2) (x_71 list_2) (y_11 list_1) (z_5 list_2) (q_4 Form_0))
	(=>	(and (models_3 x_71 q_4 y_11)
			(models_5 x_70 z_5 q_4 x_71))
		(models_4 x_70 q_4 (cons_2 y_11 z_5)))))
(assert (forall ((q_4 Form_0))
	(models_4 nil_2 q_4 nil_2)))
(assert (forall ((x_75 list_2) (z_6 list_1) (x_20 list_2) (x_19 list_2) (q_5 Form_0))
	(=> (models_5 x_75 x_19 q_5 x_20)
	    (models_5 (cons_2 z_6 x_75) x_19 q_5 (cons_2 z_6 x_20)))))
(assert (forall ((x_76 list_2) (x_19 list_2) (q_5 Form_0))
	(=> (models_4 x_76 q_5 x_19)
	    (models_5 x_76 x_19 q_5 nil_2))))
(declare-fun valid_0 (Bool_0 Form_0) Bool)
(assert (forall ((y_13 list_1) (z_7 list_2) (x_21 Form_0))
	(=> (models_3 (cons_2 y_13 z_7) (Not_0 x_21) nil_1)
	    (valid_0 false_0 x_21))))
(assert (forall ((x_21 Form_0))
	(=> (models_3 nil_2 (Not_0 x_21) nil_1)
	    (valid_0 true_0 x_21))))
(assert (forall ((x_82 Bool_0) (p_2 Form_0) (q_6 Form_0))
	(=>	(and (diseqBool_0 x_82 true_0)
			(valid_0 true_0 (x_0 p_2 q_6))
			(valid_0 x_82 q_6))
		false)))
(check-sat)
