(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_63 Nat_0))
	(unS_1 x_63 (Z_6 x_63))))
(assert (isZ_2 Z_5))
(assert (forall ((x_65 Nat_0))
	(isZ_3 (Z_6 x_65))))
(assert (forall ((x_66 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_66))))
(assert (forall ((x_67 Nat_0))
	(diseqNat_0 (Z_6 x_67) Z_5)))
(assert (forall ((x_68 Nat_0) (x_69 Nat_0))
	(=> (diseqNat_0 x_68 x_69)
	    (diseqNat_0 (Z_6 x_68) (Z_6 x_69)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_6 Nat_0))
	(add_0 y_6 Z_5 y_6)))
(assert (forall ((r_0 Nat_0) (x_55 Nat_0) (y_6 Nat_0))
	(=> (add_0 r_0 x_55 y_6)
	    (add_0 (Z_6 r_0) (Z_6 x_55) y_6))))
(assert (forall ((y_6 Nat_0))
	(minus_0 Z_5 Z_5 y_6)))
(assert (forall ((r_0 Nat_0) (x_55 Nat_0) (y_6 Nat_0))
	(=> (minus_0 r_0 x_55 y_6)
	    (minus_0 (Z_6 r_0) (Z_6 x_55) y_6))))
(assert (forall ((y_6 Nat_0))
	(le_0 Z_5 y_6)))
(assert (forall ((x_55 Nat_0) (y_6 Nat_0))
	(=> (le_0 x_55 y_6)
	    (le_0 (Z_6 x_55) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(ge_0 y_6 Z_5)))
(assert (forall ((x_55 Nat_0) (y_6 Nat_0))
	(=> (ge_0 x_55 y_6)
	    (ge_0 (Z_6 x_55) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(lt_0 Z_5 (Z_6 y_6))))
(assert (forall ((x_55 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_55 y_6)
	    (lt_0 (Z_6 x_55) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(gt_0 (Z_6 y_6) Z_5)))
(assert (forall ((x_55 Nat_0) (y_6 Nat_0))
	(=> (gt_0 x_55 y_6)
	    (gt_0 (Z_6 x_55) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(mult_0 Z_5 Z_5 y_6)))
(assert (forall ((r_0 Nat_0) (x_55 Nat_0) (y_6 Nat_0) (z_7 Nat_0))
	(=>	(and (mult_0 r_0 x_55 y_6)
			(add_0 z_7 r_0 y_6))
		(mult_0 z_7 (Z_6 x_55) y_6))))
(assert (forall ((x_55 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_55 y_6)
	    (div_0 Z_5 x_55 y_6))))
(assert (forall ((r_0 Nat_0) (x_55 Nat_0) (y_6 Nat_0) (z_7 Nat_0))
	(=>	(and (ge_0 x_55 y_6)
			(minus_0 z_7 x_55 y_6)
			(div_0 r_0 z_7 y_6))
		(div_0 (Z_6 r_0) x_55 y_6))))
(assert (forall ((x_55 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_55 y_6)
	    (mod_0 x_55 x_55 y_6))))
(assert (forall ((r_0 Nat_0) (x_55 Nat_0) (y_6 Nat_0) (z_7 Nat_0))
	(=>	(and (ge_0 x_55 y_6)
			(minus_0 z_7 x_55 y_6)
			(mod_0 r_0 z_7 y_6))
		(mod_0 r_0 x_55 y_6))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_71 Nat_0) (x_72 list_0))
	(head_1 x_71 (cons_0 x_71 x_72))))
(assert (forall ((x_71 Nat_0) (x_72 list_0))
	(tail_1 x_72 (cons_0 x_71 x_72))))
(assert (isnil_0 nil_0))
(assert (forall ((x_74 Nat_0) (x_75 list_0))
	(iscons_0 (cons_0 x_74 x_75))))
(assert (forall ((x_76 Nat_0) (x_77 list_0))
	(diseqlist_0 nil_0 (cons_0 x_76 x_77))))
(assert (forall ((x_78 Nat_0) (x_79 list_0))
	(diseqlist_0 (cons_0 x_78 x_79) nil_0)))
(assert (forall ((x_80 Nat_0) (x_81 list_0) (x_82 Nat_0) (x_83 list_0))
	(=> (diseqNat_0 x_80 x_82)
	    (diseqlist_0 (cons_0 x_80 x_81) (cons_0 x_82 x_83)))))
(assert (forall ((x_80 Nat_0) (x_81 list_0) (x_82 Nat_0) (x_83 list_0))
	(=> (diseqlist_0 x_81 x_83)
	    (diseqlist_0 (cons_0 x_80 x_81) (cons_0 x_82 x_83)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_56 Nat_0) (x_15 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=>	(and (gt_0 x_0 Z_5)
			(take_0 x_15 x_56 xs_0)
			(minus_0 x_56 x_0 (Z_6 Z_5)))
		(take_0 (cons_0 z_0 x_15) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5)
	    (take_0 nil_0 x_0 nil_0))))
(declare-fun nmsorttdhalf_0 (Nat_0 Nat_0) Bool)
(assert (nmsorttdhalf_0 Z_5 (Z_6 Z_5)))
(assert (=> (diseqNat_0 Z_5 (Z_6 Z_5))
	    (nmsorttdhalf_0 Z_5 Z_5)))
(assert (nmsorttdhalf_0 Z_5 (Z_6 Z_5)))
(assert (forall ((x_58 Nat_0) (x_21 Nat_0) (x_22 Nat_0) (x_1 Nat_0))
	(=>	(and (diseqNat_0 x_1 (Z_6 Z_5))
			(diseqNat_0 x_1 Z_5)
			(nmsorttdhalf_0 x_22 x_58)
			(minus_0 x_58 x_1 (Z_6 (Z_6 Z_5)))
			(add_0 x_21 (Z_6 Z_5) x_22))
		(nmsorttdhalf_0 x_21 x_1))))
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_24 list_0) (x_4 Nat_0) (x_5 list_0) (z_1 Nat_0) (x_3 list_0))
	(=>	(and (le_0 z_1 x_4)
			(lmerge_0 x_24 x_3 (cons_0 x_4 x_5)))
		(lmerge_0 (cons_0 z_1 x_24) (cons_0 z_1 x_3) (cons_0 x_4 x_5)))))
(assert (forall ((x_26 list_0) (x_4 Nat_0) (x_5 list_0) (z_1 Nat_0) (x_3 list_0))
	(=>	(and (gt_0 z_1 x_4)
			(lmerge_0 x_26 (cons_0 z_1 x_3) x_5))
		(lmerge_0 (cons_0 x_4 x_26) (cons_0 z_1 x_3) (cons_0 x_4 x_5)))))
(assert (forall ((z_1 Nat_0) (x_3 list_0))
	(lmerge_0 (cons_0 z_1 x_3) (cons_0 z_1 x_3) nil_0)))
(assert (forall ((x_28 list_0))
	(lmerge_0 x_28 nil_0 x_28)))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=>	(and (length_0 x_30 l_0)
			(add_0 x_29 (Z_6 Z_5) x_30))
		(length_0 x_29 (cons_0 y_2 l_0)))))
(assert (length_0 Z_5 nil_0))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_32 list_0) (x_7 Nat_0))
	(=> (le_0 x_7 Z_5)
	    (drop_0 x_32 x_7 x_32))))
(assert (forall ((x_60 Nat_0) (x_33 list_0) (z_2 Nat_0) (xs_1 list_0) (x_7 Nat_0))
	(=>	(and (gt_0 x_7 Z_5)
			(drop_0 x_33 x_60 xs_1)
			(minus_0 x_60 x_7 (Z_6 Z_5)))
		(drop_0 x_33 x_7 (cons_0 z_2 xs_1)))))
(assert (forall ((x_35 list_0) (x_7 Nat_0))
	(=> (le_0 x_7 Z_5)
	    (drop_0 x_35 x_7 x_35))))
(assert (forall ((x_7 Nat_0))
	(=> (gt_0 x_7 Z_5)
	    (drop_0 nil_0 x_7 nil_0))))
(declare-fun nmsorttd_0 (list_0 list_0) Bool)
(assert (forall ((x_39 list_0) (x_40 list_0) (x_41 list_0) (x_42 list_0) (x_43 list_0) (x_37 Nat_0) (k_0 Nat_0) (x_9 Nat_0) (x_10 list_0) (y_4 Nat_0))
	(=>	(and (take_0 x_40 k_0 (cons_0 y_4 (cons_0 x_9 x_10)))
			(nmsorttd_0 x_41 x_40)
			(drop_0 x_42 k_0 (cons_0 y_4 (cons_0 x_9 x_10)))
			(nmsorttd_0 x_43 x_42)
			(lmerge_0 x_39 x_41 x_43)
			(length_0 x_37 (cons_0 y_4 (cons_0 x_9 x_10)))
			(nmsorttdhalf_0 k_0 x_37))
		(nmsorttd_0 x_39 (cons_0 y_4 (cons_0 x_9 x_10))))))
(assert (forall ((y_4 Nat_0))
	(nmsorttd_0 (cons_0 y_4 nil_0) (cons_0 y_4 nil_0))))
(assert (nmsorttd_0 nil_0 nil_0))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_47 Nat_0) (x_48 Nat_0) (ys_0 list_0) (x_11 Nat_0))
	(=>	(and (count_0 x_48 x_11 ys_0)
			(add_0 x_47 (Z_6 Z_5) x_48))
		(count_0 x_47 x_11 (cons_0 x_11 ys_0)))))
(assert (forall ((x_49 Nat_0) (z_4 Nat_0) (ys_0 list_0) (x_11 Nat_0))
	(=>	(and (diseqNat_0 x_11 z_4)
			(count_0 x_49 x_11 ys_0))
		(count_0 x_49 x_11 (cons_0 z_4 ys_0)))))
(assert (forall ((x_11 Nat_0))
	(count_0 Z_5 x_11 nil_0)))
(assert (forall ((x_52 list_0) (x_53 Nat_0) (x_54 Nat_0) (x_12 Nat_0) (xs_2 list_0))
	(=>	(and (diseqNat_0 x_53 x_54)
			(nmsorttd_0 x_52 xs_2)
			(count_0 x_53 x_12 x_52)
			(count_0 x_54 x_12 xs_2))
		false)))
(check-sat)
