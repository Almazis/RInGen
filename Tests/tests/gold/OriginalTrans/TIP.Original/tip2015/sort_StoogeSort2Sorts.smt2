(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_72 Nat_0))
	(unS_1 x_72 (Z_6 x_72))))
(assert (isZ_2 Z_5))
(assert (forall ((x_74 Nat_0))
	(isZ_3 (Z_6 x_74))))
(assert (forall ((x_75 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_75))))
(assert (forall ((x_76 Nat_0))
	(diseqNat_0 (Z_6 x_76) Z_5)))
(assert (forall ((x_77 Nat_0) (x_78 Nat_0))
	(=> (diseqNat_0 x_77 x_78)
	    (diseqNat_0 (Z_6 x_77) (Z_6 x_78)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0))
	(=> (add_0 r_0 x_63 y_10)
	    (add_0 (Z_6 r_0) (Z_6 x_63) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_5 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0))
	(=> (minus_0 r_0 x_63 y_10)
	    (minus_0 (Z_6 r_0) (Z_6 x_63) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_5 y_10)))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_63 y_10)
	    (le_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(ge_0 y_10 Z_5)))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (ge_0 x_63 y_10)
	    (ge_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(lt_0 Z_5 (Z_6 y_10))))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_63 y_10)
	    (lt_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (Z_6 y_10) Z_5)))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_63 y_10)
	    (gt_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(mult_0 Z_5 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0) (z_7 Nat_0))
	(=>	(and (mult_0 r_0 x_63 y_10)
			(add_0 z_7 r_0 y_10))
		(mult_0 z_7 (Z_6 x_63) y_10))))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_63 y_10)
	    (div_0 Z_5 x_63 y_10))))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0) (z_7 Nat_0))
	(=>	(and (ge_0 x_63 y_10)
			(minus_0 z_7 x_63 y_10)
			(div_0 r_0 z_7 y_10))
		(div_0 (Z_6 r_0) x_63 y_10))))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_63 y_10)
	    (mod_0 x_63 x_63 y_10))))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0) (z_7 Nat_0))
	(=>	(and (ge_0 x_63 y_10)
			(minus_0 z_7 x_63 y_10)
			(mod_0 r_0 z_7 y_10))
		(mod_0 r_0 x_63 y_10))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_0 false_0 false_0 false_0))
(assert (or_0 true_0 true_0 false_0))
(assert (or_0 true_0 false_0 true_0))
(assert (or_0 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_82 Nat_0) (x_83 list_0))
	(head_1 x_82 (cons_0 x_82 x_83))))
(assert (forall ((x_82 Nat_0) (x_83 list_0))
	(tail_1 x_83 (cons_0 x_82 x_83))))
(assert (isnil_0 nil_0))
(assert (forall ((x_85 Nat_0) (x_86 list_0))
	(iscons_0 (cons_0 x_85 x_86))))
(assert (forall ((x_87 Nat_0) (x_88 list_0))
	(diseqlist_0 nil_0 (cons_0 x_87 x_88))))
(assert (forall ((x_89 Nat_0) (x_90 list_0))
	(diseqlist_0 (cons_0 x_89 x_90) nil_0)))
(assert (forall ((x_91 Nat_0) (x_92 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (diseqNat_0 x_91 x_93)
	    (diseqlist_0 (cons_0 x_91 x_92) (cons_0 x_93 x_94)))))
(assert (forall ((x_91 Nat_0) (x_92 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (diseqlist_0 x_92 x_94)
	    (diseqlist_0 (cons_0 x_91 x_92) (cons_0 x_93 x_94)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_95 list_0) (x_96 list_0))
	(projpair_2 x_95 (pair_1 x_95 x_96))))
(assert (forall ((x_95 list_0) (x_96 list_0))
	(projpair_3 x_96 (pair_1 x_95 x_96))))
(assert (forall ((x_98 list_0) (x_99 list_0))
	(ispair_0 (pair_1 x_98 x_99))))
(assert (forall ((x_100 list_0) (x_101 list_0) (x_102 list_0) (x_103 list_0))
	(=> (diseqlist_0 x_100 x_102)
	    (diseqpair_0 (pair_1 x_100 x_101) (pair_1 x_102 x_103)))))
(assert (forall ((x_100 list_0) (x_101 list_0) (x_102 list_0) (x_103 list_0))
	(=> (diseqlist_0 x_101 x_103)
	    (diseqpair_0 (pair_1 x_100 x_101) (pair_1 x_102 x_103)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_64 Nat_0) (x_19 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=>	(and (gt_0 x_0 Z_5)
			(take_0 x_19 x_64 xs_0)
			(minus_0 x_64 x_0 (Z_6 Z_5)))
		(take_0 (cons_0 z_0 x_19) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5)
	    (take_0 nil_0 x_0 nil_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (le_0 x_1 y_1)
	    (sort_0 (cons_0 x_1 (cons_0 y_1 nil_0)) x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (gt_0 x_1 y_1)
	    (sort_0 (cons_0 y_1 (cons_0 x_1 nil_0)) x_1 y_1))))
(declare-fun ordered_0 (Bool_0 list_0) Bool)
(assert (forall ((x_24 Bool_0) (y_3 Nat_0) (xs_1 list_0) (y_2 Nat_0))
	(=>	(and (le_0 y_2 y_3)
			(ordered_0 x_24 (cons_0 y_3 xs_1)))
		(ordered_0 x_24 (cons_0 y_2 (cons_0 y_3 xs_1))))))
(assert (forall ((y_3 Nat_0) (xs_1 list_0) (y_2 Nat_0))
	(=> (gt_0 y_2 y_3)
	    (ordered_0 false_0 (cons_0 y_2 (cons_0 y_3 xs_1))))))
(assert (forall ((y_2 Nat_0))
	(ordered_0 true_0 (cons_0 y_2 nil_0))))
(assert (ordered_0 true_0 nil_0))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (y_4 Nat_0) (l_0 list_0))
	(=>	(and (length_0 x_30 l_0)
			(add_0 x_29 (Z_6 Z_5) x_30))
		(length_0 x_29 (cons_0 y_4 l_0)))))
(assert (length_0 Z_5 nil_0))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_32 list_0) (x_4 Nat_0))
	(=> (le_0 x_4 Z_5)
	    (drop_0 x_32 x_4 x_32))))
(assert (forall ((x_66 Nat_0) (x_33 list_0) (z_2 Nat_0) (xs_2 list_0) (x_4 Nat_0))
	(=>	(and (gt_0 x_4 Z_5)
			(drop_0 x_33 x_66 xs_2)
			(minus_0 x_66 x_4 (Z_6 Z_5)))
		(drop_0 x_33 x_4 (cons_0 z_2 xs_2)))))
(assert (forall ((x_35 list_0) (x_4 Nat_0))
	(=> (le_0 x_4 Z_5)
	    (drop_0 x_35 x_4 x_35))))
(assert (forall ((x_4 Nat_0))
	(=> (gt_0 x_4 Z_5)
	    (drop_0 nil_0 x_4 nil_0))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_38 list_0) (x_39 list_0) (x_5 Nat_0) (y_6 list_0))
	(=>	(and (take_0 x_38 x_5 y_6)
			(drop_0 x_39 x_5 y_6))
		(splitAt_0 (pair_1 x_38 x_39) x_5 y_6))))
(declare-fun x_6 (list_0 list_0 list_0) Bool)
(assert (forall ((x_41 list_0) (z_3 Nat_0) (xs_3 list_0) (y_7 list_0))
	(=> (x_6 x_41 xs_3 y_7)
	    (x_6 (cons_0 z_3 x_41) (cons_0 z_3 xs_3) y_7))))
(assert (forall ((x_42 list_0))
	(x_6 x_42 nil_0 x_42)))
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_67 Nat_0) (x_68 Nat_0) (x_69 Nat_0) (x_45 list_0) (x_46 list_0) (x_43 Nat_0) (ys_0 list_0) (zs_0 list_0) (x_11 list_0))
	(=>	(and (stoogesort_1 x_46 ys_0)
			(x_6 x_45 x_46 zs_0)
			(length_0 x_43 x_11)
			(splitAt_0 (pair_1 ys_0 zs_0) x_69 x_11)
			(mult_0 x_67 (Z_6 (Z_6 Z_5)) x_43)
			(add_0 x_68 x_67 (Z_6 Z_5))
			(div_0 x_69 x_68 (Z_6 (Z_6 (Z_6 Z_5)))))
		(stoogesort_0 x_45 x_11))))
(assert (forall ((x_48 list_0) (x_49 list_0) (x_50 list_0) (x_14 Nat_0) (x_15 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=>	(and (stoogesort_0 x_49 (cons_0 y_8 (cons_0 y_9 (cons_0 x_14 x_15))))
			(stoogesort_2 x_50 x_49)
			(stoogesort_0 x_48 x_50))
		(stoogesort_1 x_48 (cons_0 y_8 (cons_0 y_9 (cons_0 x_14 x_15)))))))
(assert (forall ((x_52 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (sort_0 x_52 y_8 y_9)
	    (stoogesort_1 x_52 (cons_0 y_8 (cons_0 y_9 nil_0))))))
(assert (forall ((y_8 Nat_0))
	(stoogesort_1 (cons_0 y_8 nil_0) (cons_0 y_8 nil_0))))
(assert (stoogesort_1 nil_0 nil_0))
(assert (forall ((x_70 Nat_0) (x_58 list_0) (x_59 list_0) (x_56 Nat_0) (ys_1 list_0) (zs_1 list_0) (x_16 list_0))
	(=>	(and (stoogesort_1 x_59 zs_1)
			(x_6 x_58 ys_1 x_59)
			(length_0 x_56 x_16)
			(splitAt_0 (pair_1 ys_1 zs_1) x_70 x_16)
			(div_0 x_70 x_56 (Z_6 (Z_6 (Z_6 Z_5)))))
		(stoogesort_2 x_58 x_16))))
(assert (forall ((x_61 list_0) (x_62 Bool_0) (xs_4 list_0))
	(=>	(and (diseqBool_0 x_62 true_0)
			(stoogesort_1 x_61 xs_4)
			(ordered_0 x_62 x_61))
		false)))
(check-sat)
