(set-logic HORN)
(declare-datatypes ((Tok_0 0)) (((X_0 ) (Y_0 ) (Z_0 ))))
(declare-fun diseqTok_0 (Tok_0 Tok_0) Bool)
(declare-fun isX_0 (Tok_0) Bool)
(declare-fun isY_0 (Tok_0) Bool)
(declare-fun isZ_2 (Tok_0) Bool)
(assert (isX_0 X_0))
(assert (isY_0 Y_0))
(assert (isZ_2 Z_0))
(assert (diseqTok_0 X_0 Y_0))
(assert (diseqTok_0 X_0 Z_0))
(assert (diseqTok_0 Y_0 X_0))
(assert (diseqTok_0 Z_0 X_0))
(assert (diseqTok_0 Y_0 Z_0))
(assert (diseqTok_0 Z_0 Y_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Tok_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Tok_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_30 Tok_0) (x_31 list_0))
	(head_1 x_30 (cons_0 x_30 x_31))))
(assert (forall ((x_30 Tok_0) (x_31 list_0))
	(tail_1 x_31 (cons_0 x_30 x_31))))
(assert (isnil_0 nil_0))
(assert (forall ((x_33 Tok_0) (x_34 list_0))
	(iscons_0 (cons_0 x_33 x_34))))
(assert (forall ((x_35 Tok_0) (x_36 list_0))
	(diseqlist_0 nil_0 (cons_0 x_35 x_36))))
(assert (forall ((x_37 Tok_0) (x_38 list_0))
	(diseqlist_0 (cons_0 x_37 x_38) nil_0)))
(assert (forall ((x_39 Tok_0) (x_40 list_0) (x_41 Tok_0) (x_42 list_0))
	(=> (diseqTok_0 x_39 x_41)
	    (diseqlist_0 (cons_0 x_39 x_40) (cons_0 x_41 x_42)))))
(assert (forall ((x_39 Tok_0) (x_40 list_0) (x_41 Tok_0) (x_42 list_0))
	(=> (diseqlist_0 x_40 x_42)
	    (diseqlist_0 (cons_0 x_39 x_40) (cons_0 x_41 x_42)))))
(declare-datatypes ((B_0 0)) (((SB_0 (projSB_0 B_0)) (ZB_0 ))))
(declare-fun diseqB_0 (B_0 B_0) Bool)
(declare-fun projSB_1 (B_0 B_0) Bool)
(declare-fun isSB_0 (B_0) Bool)
(declare-fun isZB_0 (B_0) Bool)
(assert (forall ((x_43 B_0))
	(projSB_1 x_43 (SB_0 x_43))))
(assert (forall ((x_46 B_0))
	(isSB_0 (SB_0 x_46))))
(assert (isZB_0 ZB_0))
(assert (forall ((x_47 B_0))
	(diseqB_0 (SB_0 x_47) ZB_0)))
(assert (forall ((x_48 B_0))
	(diseqB_0 ZB_0 (SB_0 x_48))))
(assert (forall ((x_49 B_0) (x_50 B_0))
	(=> (diseqB_0 x_49 x_50)
	    (diseqB_0 (SB_0 x_49) (SB_0 x_50)))))
(declare-datatypes ((A_0 0)) (((SA_0 (projSA_0 A_0)) (ZA_0 ))))
(declare-fun diseqA_0 (A_0 A_0) Bool)
(declare-fun projSA_1 (A_0 A_0) Bool)
(declare-fun isSA_0 (A_0) Bool)
(declare-fun isZA_0 (A_0) Bool)
(assert (forall ((x_51 A_0))
	(projSA_1 x_51 (SA_0 x_51))))
(assert (forall ((x_54 A_0))
	(isSA_0 (SA_0 x_54))))
(assert (isZA_0 ZA_0))
(assert (forall ((x_55 A_0))
	(diseqA_0 (SA_0 x_55) ZA_0)))
(assert (forall ((x_56 A_0))
	(diseqA_0 ZA_0 (SA_0 x_56))))
(assert (forall ((x_57 A_0) (x_58 A_0))
	(=> (diseqA_0 x_57 x_58)
	    (diseqA_0 (SA_0 x_57) (SA_0 x_58)))))
(declare-datatypes ((S_0 0)) (((A_1 (projA_0 A_0)) (B_1 (projB_0 B_0)))))
(declare-fun diseqS_0 (S_0 S_0) Bool)
(declare-fun projA_1 (A_0 S_0) Bool)
(declare-fun projB_1 (B_0 S_0) Bool)
(declare-fun isA_0 (S_0) Bool)
(declare-fun isB_0 (S_0) Bool)
(assert (forall ((x_59 A_0))
	(projA_1 x_59 (A_1 x_59))))
(assert (forall ((x_61 B_0))
	(projB_1 x_61 (B_1 x_61))))
(assert (forall ((x_63 A_0))
	(isA_0 (A_1 x_63))))
(assert (forall ((x_64 B_0))
	(isB_0 (B_1 x_64))))
(assert (forall ((x_65 A_0) (x_66 B_0))
	(diseqS_0 (A_1 x_65) (B_1 x_66))))
(assert (forall ((x_67 B_0) (x_68 A_0))
	(diseqS_0 (B_1 x_67) (A_1 x_68))))
(assert (forall ((x_69 A_0) (x_70 A_0))
	(=> (diseqA_0 x_69 x_70)
	    (diseqS_0 (A_1 x_69) (A_1 x_70)))))
(assert (forall ((x_71 B_0) (x_72 B_0))
	(=> (diseqB_0 x_71 x_72)
	    (diseqS_0 (B_1 x_71) (B_1 x_72)))))
(declare-fun x_1 (list_0 list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (z_1 Tok_0) (xs_0 list_0) (y_1 list_0))
	(=> (x_1 x_7 xs_0 y_1)
	    (x_1 (cons_0 z_1 x_7) (cons_0 z_1 xs_0) y_1))))
(assert (forall ((x_8 list_0))
	(x_1 x_8 nil_0 x_8)))
(declare-fun linA_0 (list_0 A_0) Bool)
(assert (linA_0 (cons_0 X_0 (cons_0 Z_0 (cons_0 Y_0 nil_0))) ZA_0))
(assert (forall ((x_10 list_0) (x_11 list_0) (x_12 list_0) (a_2 A_0))
	(=>	(and (linA_0 x_11 a_2)
			(x_1 x_12 x_11 (cons_0 Y_0 nil_0))
			(x_1 x_10 (cons_0 X_0 nil_0) x_12))
		(linA_0 x_10 (SA_0 a_2)))))
(declare-fun linB_0 (list_0 B_0) Bool)
(assert (linB_0 (cons_0 X_0 (cons_0 Z_0 (cons_0 Y_0 (cons_0 Y_0 nil_0)))) ZB_0))
(assert (forall ((x_15 list_0) (x_16 list_0) (x_17 list_0) (b_2 B_0))
	(=>	(and (linB_0 x_16 b_2)
			(x_1 x_17 x_16 (cons_0 Y_0 (cons_0 Y_0 nil_0)))
			(x_1 x_15 (cons_0 X_0 nil_0) x_17))
		(linB_0 x_15 (SB_0 b_2)))))
(declare-fun linS_0 (list_0 S_0) Bool)
(assert (forall ((x_19 list_0) (b_3 B_0))
	(=> (linB_0 x_19 b_3)
	    (linS_0 x_19 (B_1 b_3)))))
(assert (forall ((x_21 list_0) (a_3 A_0))
	(=> (linA_0 x_21 a_3)
	    (linS_0 x_21 (A_1 a_3)))))
(assert (forall ((x_23 list_0) (u_0 S_0) (v_0 S_0))
	(=>	(and (diseqS_0 u_0 v_0)
			(linS_0 x_23 u_0)
			(linS_0 x_23 v_0))
		false)))
(check-sat)
