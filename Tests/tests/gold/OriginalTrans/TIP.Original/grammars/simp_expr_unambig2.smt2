(set-logic HORN)
(declare-datatypes ((Tok_0 0)) (((C_0 ) (D_0 ) (X_0 ) (Y_0 ) (Pl_0 ))))
(declare-fun diseqTok_0 (Tok_0 Tok_0) Bool)
(declare-fun isC_0 (Tok_0) Bool)
(declare-fun isD_0 (Tok_0) Bool)
(declare-fun isX_0 (Tok_0) Bool)
(declare-fun isY_0 (Tok_0) Bool)
(declare-fun isPl_0 (Tok_0) Bool)
(assert (isC_0 C_0))
(assert (isD_0 D_0))
(assert (isX_0 X_0))
(assert (isY_0 Y_0))
(assert (isPl_0 Pl_0))
(assert (diseqTok_0 C_0 D_0))
(assert (diseqTok_0 C_0 X_0))
(assert (diseqTok_0 C_0 Y_0))
(assert (diseqTok_0 C_0 Pl_0))
(assert (diseqTok_0 D_0 C_0))
(assert (diseqTok_0 X_0 C_0))
(assert (diseqTok_0 Y_0 C_0))
(assert (diseqTok_0 Pl_0 C_0))
(assert (diseqTok_0 D_0 X_0))
(assert (diseqTok_0 D_0 Y_0))
(assert (diseqTok_0 D_0 Pl_0))
(assert (diseqTok_0 X_0 D_0))
(assert (diseqTok_0 Y_0 D_0))
(assert (diseqTok_0 Pl_0 D_0))
(assert (diseqTok_0 X_0 Y_0))
(assert (diseqTok_0 X_0 Pl_0))
(assert (diseqTok_0 Y_0 X_0))
(assert (diseqTok_0 Pl_0 X_0))
(assert (diseqTok_0 Y_0 Pl_0))
(assert (diseqTok_0 Pl_0 Y_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Tok_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Tok_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_25 Tok_0) (x_26 list_0))
	(head_1 x_25 (cons_0 x_25 x_26))))
(assert (forall ((x_25 Tok_0) (x_26 list_0))
	(tail_1 x_26 (cons_0 x_25 x_26))))
(assert (isnil_0 nil_0))
(assert (forall ((x_28 Tok_0) (x_29 list_0))
	(iscons_0 (cons_0 x_28 x_29))))
(assert (forall ((x_30 Tok_0) (x_31 list_0))
	(diseqlist_0 nil_0 (cons_0 x_30 x_31))))
(assert (forall ((x_32 Tok_0) (x_33 list_0))
	(diseqlist_0 (cons_0 x_32 x_33) nil_0)))
(assert (forall ((x_34 Tok_0) (x_35 list_0) (x_36 Tok_0) (x_37 list_0))
	(=> (diseqTok_0 x_34 x_36)
	    (diseqlist_0 (cons_0 x_34 x_35) (cons_0 x_36 x_37)))))
(assert (forall ((x_34 Tok_0) (x_35 list_0) (x_36 Tok_0) (x_37 list_0))
	(=> (diseqlist_0 x_35 x_37)
	    (diseqlist_0 (cons_0 x_34 x_35) (cons_0 x_36 x_37)))))
(declare-datatypes ((E_0 0)) (((Plus_0 (projPlus_0 E_0) (projPlus_1 E_0)) (EX_0 ) (EY_0 ))))
(declare-fun diseqE_0 (E_0 E_0) Bool)
(declare-fun projPlus_2 (E_0 E_0) Bool)
(declare-fun projPlus_3 (E_0 E_0) Bool)
(declare-fun isPlus_0 (E_0) Bool)
(declare-fun isEX_0 (E_0) Bool)
(declare-fun isEY_0 (E_0) Bool)
(assert (forall ((x_38 E_0) (x_39 E_0))
	(projPlus_2 x_38 (Plus_0 x_38 x_39))))
(assert (forall ((x_38 E_0) (x_39 E_0))
	(projPlus_3 x_39 (Plus_0 x_38 x_39))))
(assert (forall ((x_43 E_0) (x_44 E_0))
	(isPlus_0 (Plus_0 x_43 x_44))))
(assert (isEX_0 EX_0))
(assert (isEY_0 EY_0))
(assert (forall ((x_45 E_0) (x_46 E_0))
	(diseqE_0 (Plus_0 x_45 x_46) EX_0)))
(assert (forall ((x_47 E_0) (x_48 E_0))
	(diseqE_0 (Plus_0 x_47 x_48) EY_0)))
(assert (forall ((x_49 E_0) (x_50 E_0))
	(diseqE_0 EX_0 (Plus_0 x_49 x_50))))
(assert (forall ((x_51 E_0) (x_52 E_0))
	(diseqE_0 EY_0 (Plus_0 x_51 x_52))))
(assert (diseqE_0 EX_0 EY_0))
(assert (diseqE_0 EY_0 EX_0))
(assert (forall ((x_53 E_0) (x_54 E_0) (x_55 E_0) (x_56 E_0))
	(=> (diseqE_0 x_53 x_55)
	    (diseqE_0 (Plus_0 x_53 x_54) (Plus_0 x_55 x_56)))))
(assert (forall ((x_53 E_0) (x_54 E_0) (x_55 E_0) (x_56 E_0))
	(=> (diseqE_0 x_54 x_56)
	    (diseqE_0 (Plus_0 x_53 x_54) (Plus_0 x_55 x_56)))))
(declare-fun x_1 (list_0 list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (z_0 Tok_0) (xs_0 list_0) (y_1 list_0))
	(=> (x_1 x_5 xs_0 y_1)
	    (x_1 (cons_0 z_0 x_5) (cons_0 z_0 xs_0) y_1))))
(assert (forall ((x_6 list_0))
	(x_1 x_6 nil_0 x_6)))
(declare-fun lin_0 (list_0 E_0) Bool)
(assert (lin_0 (cons_0 Y_0 nil_0) EY_0))
(assert (lin_0 (cons_0 X_0 nil_0) EX_0))
(assert (forall ((x_10 list_0) (x_11 list_0) (x_12 list_0) (x_13 list_0) (x_14 list_0) (x_15 list_0) (a_0 E_0) (b_0 E_0))
	(=>	(and (lin_0 x_10 a_0)
			(lin_0 x_11 b_0)
			(x_1 x_12 x_11 (cons_0 D_0 nil_0))
			(x_1 x_13 (cons_0 D_0 (cons_0 Pl_0 (cons_0 C_0 nil_0))) x_12)
			(x_1 x_14 x_10 x_13)
			(x_1 x_15 (cons_0 C_0 nil_0) x_14))
		(lin_0 x_15 (Plus_0 a_0 b_0)))))
(assert (forall ((x_16 list_0) (u_0 E_0) (v_0 E_0))
	(=>	(and (diseqE_0 u_0 v_0)
			(lin_0 x_16 u_0)
			(lin_0 x_16 v_0))
		false)))
(check-sat)
