(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_2 ) (Z_3 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_34 Nat_0))
	(unS_1 x_34 (Z_3 x_34))))
(assert (isZ_2 Z_2))
(assert (forall ((x_36 Nat_0))
	(isZ_3 (Z_3 x_36))))
(assert (forall ((x_37 Nat_0))
	(diseqNat_0 Z_2 (Z_3 x_37))))
(assert (forall ((x_38 Nat_0))
	(diseqNat_0 (Z_3 x_38) Z_2)))
(assert (forall ((x_39 Nat_0) (x_40 Nat_0))
	(=> (diseqNat_0 x_39 x_40)
	    (diseqNat_0 (Z_3 x_39) (Z_3 x_40)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_4 Nat_0))
	(add_0 y_4 Z_2 y_4)))
(assert (forall ((r_0 Nat_0) (x_18 Nat_0) (y_4 Nat_0))
	(=> (add_0 r_0 x_18 y_4)
	    (add_0 (Z_3 r_0) (Z_3 x_18) y_4))))
(assert (forall ((y_4 Nat_0))
	(minus_0 Z_2 Z_2 y_4)))
(assert (forall ((r_0 Nat_0) (x_18 Nat_0) (y_4 Nat_0))
	(=> (minus_0 r_0 x_18 y_4)
	    (minus_0 (Z_3 r_0) (Z_3 x_18) y_4))))
(assert (forall ((y_4 Nat_0))
	(le_0 Z_2 y_4)))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (le_0 x_18 y_4)
	    (le_0 (Z_3 x_18) (Z_3 y_4)))))
(assert (forall ((y_4 Nat_0))
	(ge_0 y_4 Z_2)))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (ge_0 x_18 y_4)
	    (ge_0 (Z_3 x_18) (Z_3 y_4)))))
(assert (forall ((y_4 Nat_0))
	(lt_0 Z_2 (Z_3 y_4))))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_18 y_4)
	    (lt_0 (Z_3 x_18) (Z_3 y_4)))))
(assert (forall ((y_4 Nat_0))
	(gt_0 (Z_3 y_4) Z_2)))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (gt_0 x_18 y_4)
	    (gt_0 (Z_3 x_18) (Z_3 y_4)))))
(assert (forall ((y_4 Nat_0))
	(mult_0 Z_2 Z_2 y_4)))
(assert (forall ((r_0 Nat_0) (x_18 Nat_0) (y_4 Nat_0) (z_4 Nat_0))
	(=>	(and (mult_0 r_0 x_18 y_4)
			(add_0 z_4 r_0 y_4))
		(mult_0 z_4 (Z_3 x_18) y_4))))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_18 y_4)
	    (div_0 Z_2 x_18 y_4))))
(assert (forall ((r_0 Nat_0) (x_18 Nat_0) (y_4 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_18 y_4)
			(minus_0 z_4 x_18 y_4)
			(div_0 r_0 z_4 y_4))
		(div_0 (Z_3 r_0) x_18 y_4))))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_18 y_4)
	    (mod_0 x_18 x_18 y_4))))
(assert (forall ((r_0 Nat_0) (x_18 Nat_0) (y_4 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_18 y_4)
			(minus_0 z_4 x_18 y_4)
			(mod_0 r_0 z_4 y_4))
		(mod_0 r_0 x_18 y_4))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_20 Nat_0) (x_21 list_0))
	(head_1 x_20 (cons_0 x_20 x_21))))
(assert (forall ((x_20 Nat_0) (x_21 list_0))
	(tail_1 x_21 (cons_0 x_20 x_21))))
(assert (isnil_0 nil_0))
(assert (forall ((x_23 Nat_0) (x_24 list_0))
	(iscons_0 (cons_0 x_23 x_24))))
(assert (forall ((x_25 Nat_0) (x_26 list_0))
	(diseqlist_0 nil_0 (cons_0 x_25 x_26))))
(assert (forall ((x_27 Nat_0) (x_28 list_0))
	(diseqlist_0 (cons_0 x_27 x_28) nil_0)))
(assert (forall ((x_29 Nat_0) (x_30 list_0) (x_31 Nat_0) (x_32 list_0))
	(=> (diseqNat_0 x_29 x_31)
	    (diseqlist_0 (cons_0 x_29 x_30) (cons_0 x_31 x_32)))))
(assert (forall ((x_29 Nat_0) (x_30 list_0) (x_31 Nat_0) (x_32 list_0))
	(=> (diseqlist_0 x_30 x_32)
	    (diseqlist_0 (cons_0 x_29 x_30) (cons_0 x_31 x_32)))))
(declare-fun qrev_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (z_0 Nat_0) (xs_0 list_0) (y_0 list_0))
	(=> (qrev_0 x_5 xs_0 (cons_0 z_0 y_0))
	    (qrev_0 x_5 (cons_0 z_0 xs_0) y_0))))
(assert (forall ((x_7 list_0))
	(qrev_0 x_7 nil_0 x_7)))
(declare-fun x_1 (list_0 list_0 list_0) Bool)
(assert (forall ((x_9 list_0) (z_1 Nat_0) (xs_1 list_0) (y_1 list_0))
	(=> (x_1 x_9 xs_1 y_1)
	    (x_1 (cons_0 z_1 x_9) (cons_0 z_1 xs_1) y_1))))
(assert (forall ((x_10 list_0))
	(x_1 x_10 nil_0 x_10)))
(declare-fun rev_0 (list_0 list_0) Bool)
(assert (forall ((x_11 list_0) (x_12 list_0) (y_2 Nat_0) (xs_2 list_0))
	(=>	(and (rev_0 x_12 xs_2)
			(x_1 x_11 x_12 (cons_0 y_2 nil_0)))
		(rev_0 x_11 (cons_0 y_2 xs_2)))))
(assert (rev_0 nil_0 nil_0))
(assert (forall ((x_15 list_0) (x_16 list_0) (x_17 list_0) (x_4 list_0) (y_3 list_0))
	(=>	(and (diseqlist_0 x_15 x_17)
			(qrev_0 x_15 x_4 y_3)
			(rev_0 x_16 x_4)
			(x_1 x_17 x_16 y_3))
		false)))
(check-sat)
