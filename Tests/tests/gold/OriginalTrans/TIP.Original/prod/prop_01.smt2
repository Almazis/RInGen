(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_14 Nat_0))
	(projS_1 x_14 (S_0 x_14))))
(assert (isZ_2 Z_0))
(assert (forall ((x_16 Nat_0))
	(isS_0 (S_0 x_16))))
(assert (forall ((x_17 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_17))))
(assert (forall ((x_18 Nat_0))
	(diseqNat_0 (S_0 x_18) Z_0)))
(assert (forall ((x_19 Nat_0) (x_20 Nat_0))
	(=> (diseqNat_0 x_19 x_20)
	    (diseqNat_0 (S_0 x_19) (S_0 x_20)))))
(declare-fun double_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_5 Nat_0) (y_0 Nat_0))
	(=> (double_0 x_5 y_0)
	    (double_0 (S_0 (S_0 x_5)) (S_0 y_0)))))
(assert (double_0 Z_0 Z_0))
(declare-fun x_1 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_8 Nat_0) (z_1 Nat_0) (y_1 Nat_0))
	(=> (x_1 x_8 z_1 y_1)
	    (x_1 (S_0 x_8) (S_0 z_1) y_1))))
(assert (forall ((x_9 Nat_0))
	(x_1 x_9 Z_0 x_9)))
(assert (forall ((x_10 Nat_0) (x_11 Nat_0) (x_3 Nat_0))
	(=>	(and (diseqNat_0 x_10 x_11)
			(double_0 x_10 x_3)
			(x_1 x_11 x_3 x_3))
		false)))
(check-sat)
