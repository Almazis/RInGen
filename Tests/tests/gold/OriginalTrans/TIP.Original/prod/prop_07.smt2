(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_3 ) (Z_4 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_3 (Nat_1) Bool)
(declare-fun isZ_4 (Nat_1) Bool)
(assert (forall ((x_43 Nat_1))
	(unS_1 x_43 (Z_4 x_43))))
(assert (isZ_3 Z_3))
(assert (forall ((x_45 Nat_1))
	(isZ_4 (Z_4 x_45))))
(assert (forall ((x_46 Nat_1))
	(diseqNat_1 Z_3 (Z_4 x_46))))
(assert (forall ((x_47 Nat_1))
	(diseqNat_1 (Z_4 x_47) Z_3)))
(assert (forall ((x_48 Nat_1) (x_49 Nat_1))
	(=> (diseqNat_1 x_48 x_49)
	    (diseqNat_1 (Z_4 x_48) (Z_4 x_49)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_3 y_4)))
(assert (forall ((r_0 Nat_1) (x_19 Nat_1) (y_4 Nat_1))
	(=> (add_0 r_0 x_19 y_4)
	    (add_0 (Z_4 r_0) (Z_4 x_19) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_3 Z_3 y_4)))
(assert (forall ((r_0 Nat_1) (x_19 Nat_1) (y_4 Nat_1))
	(=> (minus_0 r_0 x_19 y_4)
	    (minus_0 (Z_4 r_0) (Z_4 x_19) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_3 y_4)))
(assert (forall ((x_19 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_19 y_4)
	    (le_0 (Z_4 x_19) (Z_4 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_3)))
(assert (forall ((x_19 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_19 y_4)
	    (ge_0 (Z_4 x_19) (Z_4 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_3 (Z_4 y_4))))
(assert (forall ((x_19 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_19 y_4)
	    (lt_0 (Z_4 x_19) (Z_4 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (Z_4 y_4) Z_3)))
(assert (forall ((x_19 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_19 y_4)
	    (gt_0 (Z_4 x_19) (Z_4 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_0 Z_3 Z_3 y_4)))
(assert (forall ((r_0 Nat_1) (x_19 Nat_1) (y_4 Nat_1) (z_5 Nat_1))
	(=>	(and (mult_0 r_0 x_19 y_4)
			(add_0 z_5 r_0 y_4))
		(mult_0 z_5 (Z_4 x_19) y_4))))
(assert (forall ((x_19 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_19 y_4)
	    (div_0 Z_3 x_19 y_4))))
(assert (forall ((r_0 Nat_1) (x_19 Nat_1) (y_4 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_19 y_4)
			(minus_0 z_5 x_19 y_4)
			(div_0 r_0 z_5 y_4))
		(div_0 (Z_4 r_0) x_19 y_4))))
(assert (forall ((x_19 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_19 y_4)
	    (mod_0 x_19 x_19 y_4))))
(assert (forall ((r_0 Nat_1) (x_19 Nat_1) (y_4 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_19 y_4)
			(minus_0 z_5 x_19 y_4)
			(mod_0 r_0 z_5 y_4))
		(mod_0 r_0 x_19 y_4))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_21 Nat_1) (x_22 list_0))
	(head_1 x_21 (cons_0 x_21 x_22))))
(assert (forall ((x_21 Nat_1) (x_22 list_0))
	(tail_1 x_22 (cons_0 x_21 x_22))))
(assert (isnil_0 nil_0))
(assert (forall ((x_24 Nat_1) (x_25 list_0))
	(iscons_0 (cons_0 x_24 x_25))))
(assert (forall ((x_26 Nat_1) (x_27 list_0))
	(diseqlist_0 nil_0 (cons_0 x_26 x_27))))
(assert (forall ((x_28 Nat_1) (x_29 list_0))
	(diseqlist_0 (cons_0 x_28 x_29) nil_0)))
(assert (forall ((x_30 Nat_1) (x_31 list_0) (x_32 Nat_1) (x_33 list_0))
	(=> (diseqNat_1 x_30 x_32)
	    (diseqlist_0 (cons_0 x_30 x_31) (cons_0 x_32 x_33)))))
(assert (forall ((x_30 Nat_1) (x_31 list_0) (x_32 Nat_1) (x_33 list_0))
	(=> (diseqlist_0 x_31 x_33)
	    (diseqlist_0 (cons_0 x_30 x_31) (cons_0 x_32 x_33)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_35 Nat_0))
	(projS_1 x_35 (S_0 x_35))))
(assert (isZ_2 Z_0))
(assert (forall ((x_37 Nat_0))
	(isS_0 (S_0 x_37))))
(assert (forall ((x_38 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_38))))
(assert (forall ((x_39 Nat_0))
	(diseqNat_0 (S_0 x_39) Z_0)))
(assert (forall ((x_40 Nat_0) (x_41 Nat_0))
	(=> (diseqNat_0 x_40 x_41)
	    (diseqNat_0 (S_0 x_40) (S_0 x_41)))))
(declare-fun qrev_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (z_1 Nat_1) (xs_0 list_0) (y_0 list_0))
	(=> (qrev_0 x_5 xs_0 (cons_0 z_1 y_0))
	    (qrev_0 x_5 (cons_0 z_1 xs_0) y_0))))
(assert (forall ((x_7 list_0))
	(qrev_0 x_7 nil_0 x_7)))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_9 Nat_0) (y_1 Nat_1) (xs_1 list_0))
	(=> (length_0 x_9 xs_1)
	    (length_0 (S_0 x_9) (cons_0 y_1 xs_1)))))
(assert (length_0 Z_0 nil_0))
(declare-fun x_2 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_12 Nat_0) (z_2 Nat_0) (y_2 Nat_0))
	(=> (x_2 x_12 z_2 y_2)
	    (x_2 (S_0 x_12) (S_0 z_2) y_2))))
(assert (forall ((x_13 Nat_0))
	(x_2 x_13 Z_0 x_13)))
(assert (forall ((x_14 list_0) (x_15 Nat_0) (x_16 Nat_0) (x_17 Nat_0) (x_18 Nat_0) (x_4 list_0) (y_3 list_0))
	(=>	(and (diseqNat_0 x_15 x_18)
			(qrev_0 x_14 x_4 y_3)
			(length_0 x_15 x_14)
			(length_0 x_16 x_4)
			(length_0 x_17 y_3)
			(x_2 x_18 x_16 x_17))
		false)))
(check-sat)
