(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_4 ) (Z_5 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_3 (Nat_1) Bool)
(declare-fun isZ_4 (Nat_1) Bool)
(assert (forall ((x_53 Nat_1))
	(unS_1 x_53 (Z_5 x_53))))
(assert (isZ_3 Z_4))
(assert (forall ((x_55 Nat_1))
	(isZ_4 (Z_5 x_55))))
(assert (forall ((x_56 Nat_1))
	(diseqNat_1 Z_4 (Z_5 x_56))))
(assert (forall ((x_57 Nat_1))
	(diseqNat_1 (Z_5 x_57) Z_4)))
(assert (forall ((x_58 Nat_1) (x_59 Nat_1))
	(=> (diseqNat_1 x_58 x_59)
	    (diseqNat_1 (Z_5 x_58) (Z_5 x_59)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_5 Nat_1))
	(add_0 y_5 Z_4 y_5)))
(assert (forall ((r_0 Nat_1) (x_27 Nat_1) (y_5 Nat_1))
	(=> (add_0 r_0 x_27 y_5)
	    (add_0 (Z_5 r_0) (Z_5 x_27) y_5))))
(assert (forall ((y_5 Nat_1))
	(minus_0 Z_4 Z_4 y_5)))
(assert (forall ((r_0 Nat_1) (x_27 Nat_1) (y_5 Nat_1))
	(=> (minus_0 r_0 x_27 y_5)
	    (minus_0 (Z_5 r_0) (Z_5 x_27) y_5))))
(assert (forall ((y_5 Nat_1))
	(le_0 Z_4 y_5)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (le_0 x_27 y_5)
	    (le_0 (Z_5 x_27) (Z_5 y_5)))))
(assert (forall ((y_5 Nat_1))
	(ge_0 y_5 Z_4)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (ge_0 x_27 y_5)
	    (ge_0 (Z_5 x_27) (Z_5 y_5)))))
(assert (forall ((y_5 Nat_1))
	(lt_0 Z_4 (Z_5 y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_27 y_5)
	    (lt_0 (Z_5 x_27) (Z_5 y_5)))))
(assert (forall ((y_5 Nat_1))
	(gt_0 (Z_5 y_5) Z_4)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (gt_0 x_27 y_5)
	    (gt_0 (Z_5 x_27) (Z_5 y_5)))))
(assert (forall ((y_5 Nat_1))
	(mult_0 Z_4 Z_4 y_5)))
(assert (forall ((r_0 Nat_1) (x_27 Nat_1) (y_5 Nat_1) (z_6 Nat_1))
	(=>	(and (mult_0 r_0 x_27 y_5)
			(add_0 z_6 r_0 y_5))
		(mult_0 z_6 (Z_5 x_27) y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_27 y_5)
	    (div_0 Z_4 x_27 y_5))))
(assert (forall ((r_0 Nat_1) (x_27 Nat_1) (y_5 Nat_1) (z_6 Nat_1))
	(=>	(and (ge_0 x_27 y_5)
			(minus_0 z_6 x_27 y_5)
			(div_0 r_0 z_6 y_5))
		(div_0 (Z_5 r_0) x_27 y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_27 y_5)
	    (mod_0 x_27 x_27 y_5))))
(assert (forall ((r_0 Nat_1) (x_27 Nat_1) (y_5 Nat_1) (z_6 Nat_1))
	(=>	(and (ge_0 x_27 y_5)
			(minus_0 z_6 x_27 y_5)
			(mod_0 r_0 z_6 y_5))
		(mod_0 r_0 x_27 y_5))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_0 false_0 false_0 false_0))
(assert (or_0 true_0 true_0 false_0))
(assert (or_0 true_0 false_0 true_0))
(assert (or_0 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_31 Nat_1) (x_32 list_0))
	(head_1 x_31 (cons_0 x_31 x_32))))
(assert (forall ((x_31 Nat_1) (x_32 list_0))
	(tail_1 x_32 (cons_0 x_31 x_32))))
(assert (isnil_0 nil_0))
(assert (forall ((x_34 Nat_1) (x_35 list_0))
	(iscons_0 (cons_0 x_34 x_35))))
(assert (forall ((x_36 Nat_1) (x_37 list_0))
	(diseqlist_0 nil_0 (cons_0 x_36 x_37))))
(assert (forall ((x_38 Nat_1) (x_39 list_0))
	(diseqlist_0 (cons_0 x_38 x_39) nil_0)))
(assert (forall ((x_40 Nat_1) (x_41 list_0) (x_42 Nat_1) (x_43 list_0))
	(=> (diseqNat_1 x_40 x_42)
	    (diseqlist_0 (cons_0 x_40 x_41) (cons_0 x_42 x_43)))))
(assert (forall ((x_40 Nat_1) (x_41 list_0) (x_42 Nat_1) (x_43 list_0))
	(=> (diseqlist_0 x_41 x_43)
	    (diseqlist_0 (cons_0 x_40 x_41) (cons_0 x_42 x_43)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_45 Nat_0))
	(projS_1 x_45 (S_0 x_45))))
(assert (isZ_2 Z_0))
(assert (forall ((x_47 Nat_0))
	(isS_0 (S_0 x_47))))
(assert (forall ((x_48 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_48))))
(assert (forall ((x_49 Nat_0))
	(diseqNat_0 (S_0 x_49) Z_0)))
(assert (forall ((x_50 Nat_0) (x_51 Nat_0))
	(=> (diseqNat_0 x_50 x_51)
	    (diseqNat_0 (S_0 x_50) (S_0 x_51)))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_8 Nat_0) (y_0 Nat_1) (xs_0 list_0))
	(=> (length_0 x_8 xs_0)
	    (length_0 (S_0 x_8) (cons_0 y_0 xs_0)))))
(assert (length_0 Z_0 nil_0))
(declare-fun even_0 (Bool_0 Nat_0) Bool)
(assert (forall ((x_10 Bool_0) (z_1 Nat_0))
	(=> (even_0 x_10 z_1)
	    (even_0 x_10 (S_0 (S_0 z_1))))))
(assert (even_0 false_0 (S_0 Z_0)))
(assert (even_0 true_0 Z_0))
(declare-fun x_2 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_15 Nat_0) (z_2 Nat_0) (y_2 Nat_0))
	(=> (x_2 x_15 z_2 y_2)
	    (x_2 (S_0 x_15) (S_0 z_2) y_2))))
(assert (forall ((x_16 Nat_0))
	(x_2 x_16 Z_0 x_16)))
(declare-fun x_4 (list_0 list_0 list_0) Bool)
(assert (forall ((x_18 list_0) (z_3 Nat_1) (xs_1 list_0) (y_3 list_0))
	(=> (x_4 x_18 xs_1 y_3)
	    (x_4 (cons_0 z_3 x_18) (cons_0 z_3 xs_1) y_3))))
(assert (forall ((x_19 list_0))
	(x_4 x_19 nil_0 x_19)))
(assert (forall ((x_20 list_0) (x_21 Nat_0) (x_22 Bool_0) (x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_26 Bool_0) (x_6 list_0) (y_4 list_0))
	(=>	(and (diseqBool_0 x_22 x_26)
			(x_4 x_20 x_6 y_4)
			(length_0 x_21 x_20)
			(even_0 x_22 x_21)
			(length_0 x_23 y_4)
			(length_0 x_24 x_6)
			(x_2 x_25 x_23 x_24)
			(even_0 x_26 x_25))
		false)))
(check-sat)
