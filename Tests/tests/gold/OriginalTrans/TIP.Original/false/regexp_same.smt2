(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_1 false_0 false_0 false_0))
(assert (or_1 true_0 true_0 false_0))
(assert (or_1 true_0 false_0 true_0))
(assert (or_1 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_3 (Bool_0 list_0) Bool)
(declare-fun tail_3 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_119 Bool_0) (x_120 list_0))
	(head_3 x_119 (cons_0 x_119 x_120))))
(assert (forall ((x_119 Bool_0) (x_120 list_0))
	(tail_3 x_120 (cons_0 x_119 x_120))))
(assert (isnil_0 nil_0))
(assert (forall ((x_122 Bool_0) (x_123 list_0))
	(iscons_0 (cons_0 x_122 x_123))))
(assert (forall ((x_124 Bool_0) (x_125 list_0))
	(diseqlist_0 nil_0 (cons_0 x_124 x_125))))
(assert (forall ((x_126 Bool_0) (x_127 list_0))
	(diseqlist_0 (cons_0 x_126 x_127) nil_0)))
(assert (forall ((x_128 Bool_0) (x_129 list_0) (x_130 Bool_0) (x_131 list_0))
	(=> (diseqBool_0 x_128 x_130)
	    (diseqlist_0 (cons_0 x_128 x_129) (cons_0 x_130 x_131)))))
(assert (forall ((x_128 Bool_0) (x_129 list_0) (x_130 Bool_0) (x_131 list_0))
	(=> (diseqlist_0 x_129 x_131)
	    (diseqlist_0 (cons_0 x_128 x_129) (cons_0 x_130 x_131)))))
(declare-datatypes ((T_0 0)) (((A_0 ) (B_0 ) (C_0 ))))
(declare-fun diseqT_0 (T_0 T_0) Bool)
(declare-fun isA_0 (T_0) Bool)
(declare-fun isB_0 (T_0) Bool)
(declare-fun isC_0 (T_0) Bool)
(assert (isA_0 A_0))
(assert (isB_0 B_0))
(assert (isC_0 C_0))
(assert (diseqT_0 A_0 B_0))
(assert (diseqT_0 A_0 C_0))
(assert (diseqT_0 B_0 A_0))
(assert (diseqT_0 C_0 A_0))
(assert (diseqT_0 B_0 C_0))
(assert (diseqT_0 C_0 B_0))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 T_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_4 (T_0 list_1) Bool)
(declare-fun tail_4 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_136 T_0) (x_137 list_1))
	(head_4 x_136 (cons_1 x_136 x_137))))
(assert (forall ((x_136 T_0) (x_137 list_1))
	(tail_4 x_137 (cons_1 x_136 x_137))))
(assert (isnil_1 nil_1))
(assert (forall ((x_139 T_0) (x_140 list_1))
	(iscons_1 (cons_1 x_139 x_140))))
(assert (forall ((x_141 T_0) (x_142 list_1))
	(diseqlist_1 nil_1 (cons_1 x_141 x_142))))
(assert (forall ((x_143 T_0) (x_144 list_1))
	(diseqlist_1 (cons_1 x_143 x_144) nil_1)))
(assert (forall ((x_145 T_0) (x_146 list_1) (x_147 T_0) (x_148 list_1))
	(=> (diseqT_0 x_145 x_147)
	    (diseqlist_1 (cons_1 x_145 x_146) (cons_1 x_147 x_148)))))
(assert (forall ((x_145 T_0) (x_146 list_1) (x_147 T_0) (x_148 list_1))
	(=> (diseqlist_1 x_146 x_148)
	    (diseqlist_1 (cons_1 x_145 x_146) (cons_1 x_147 x_148)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_1) (projpair_1 list_1)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_1 pair_0) Bool)
(declare-fun projpair_3 (list_1 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_149 list_1) (x_150 list_1))
	(projpair_2 x_149 (pair_1 x_149 x_150))))
(assert (forall ((x_149 list_1) (x_150 list_1))
	(projpair_3 x_150 (pair_1 x_149 x_150))))
(assert (forall ((x_152 list_1) (x_153 list_1))
	(ispair_0 (pair_1 x_152 x_153))))
(assert (forall ((x_154 list_1) (x_155 list_1) (x_156 list_1) (x_157 list_1))
	(=> (diseqlist_1 x_154 x_156)
	    (diseqpair_0 (pair_1 x_154 x_155) (pair_1 x_156 x_157)))))
(assert (forall ((x_154 list_1) (x_155 list_1) (x_156 list_1) (x_157 list_1))
	(=> (diseqlist_1 x_155 x_157)
	    (diseqpair_0 (pair_1 x_154 x_155) (pair_1 x_156 x_157)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_5 (pair_0 list_2) Bool)
(declare-fun tail_5 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_159 pair_0) (x_160 list_2))
	(head_5 x_159 (cons_2 x_159 x_160))))
(assert (forall ((x_159 pair_0) (x_160 list_2))
	(tail_5 x_160 (cons_2 x_159 x_160))))
(assert (isnil_2 nil_2))
(assert (forall ((x_162 pair_0) (x_163 list_2))
	(iscons_2 (cons_2 x_162 x_163))))
(assert (forall ((x_164 pair_0) (x_165 list_2))
	(diseqlist_2 nil_2 (cons_2 x_164 x_165))))
(assert (forall ((x_166 pair_0) (x_167 list_2))
	(diseqlist_2 (cons_2 x_166 x_167) nil_2)))
(assert (forall ((x_168 pair_0) (x_169 list_2) (x_170 pair_0) (x_171 list_2))
	(=> (diseqpair_0 x_168 x_170)
	    (diseqlist_2 (cons_2 x_168 x_169) (cons_2 x_170 x_171)))))
(assert (forall ((x_168 pair_0) (x_169 list_2) (x_170 pair_0) (x_171 list_2))
	(=> (diseqlist_2 x_169 x_171)
	    (diseqlist_2 (cons_2 x_168 x_169) (cons_2 x_170 x_171)))))
(declare-datatypes ((R_0 0)) (((Nil_3 ) (Eps_0 ) (Atom_0 (projAtom_0 T_0)) (x_0 (proj_0 R_0) (proj_1 R_0)) (x_1 (proj_2 R_0) (proj_3 R_0)) (Star_0 (projStar_0 R_0)))))
(declare-fun diseqR_0 (R_0 R_0) Bool)
(declare-fun projAtom_1 (T_0 R_0) Bool)
(declare-fun proj_4 (R_0 R_0) Bool)
(declare-fun proj_5 (R_0 R_0) Bool)
(declare-fun proj_6 (R_0 R_0) Bool)
(declare-fun proj_7 (R_0 R_0) Bool)
(declare-fun projStar_1 (R_0 R_0) Bool)
(declare-fun isNil_3 (R_0) Bool)
(declare-fun isEps_0 (R_0) Bool)
(declare-fun isAtom_0 (R_0) Bool)
(declare-fun isx_0 (R_0) Bool)
(declare-fun isx_1 (R_0) Bool)
(declare-fun isStar_0 (R_0) Bool)
(assert (forall ((x_174 T_0))
	(projAtom_1 x_174 (Atom_0 x_174))))
(assert (forall ((x_176 R_0) (x_177 R_0))
	(proj_4 x_176 (x_0 x_176 x_177))))
(assert (forall ((x_176 R_0) (x_177 R_0))
	(proj_5 x_177 (x_0 x_176 x_177))))
(assert (forall ((x_179 R_0) (x_180 R_0))
	(proj_6 x_179 (x_1 x_179 x_180))))
(assert (forall ((x_179 R_0) (x_180 R_0))
	(proj_7 x_180 (x_1 x_179 x_180))))
(assert (forall ((x_182 R_0))
	(projStar_1 x_182 (Star_0 x_182))))
(assert (isNil_3 Nil_3))
(assert (isEps_0 Eps_0))
(assert (forall ((x_184 T_0))
	(isAtom_0 (Atom_0 x_184))))
(assert (forall ((x_185 R_0) (x_186 R_0))
	(isx_0 (x_0 x_185 x_186))))
(assert (forall ((x_187 R_0) (x_188 R_0))
	(isx_1 (x_1 x_187 x_188))))
(assert (forall ((x_189 R_0))
	(isStar_0 (Star_0 x_189))))
(assert (diseqR_0 Nil_3 Eps_0))
(assert (forall ((x_190 T_0))
	(diseqR_0 Nil_3 (Atom_0 x_190))))
(assert (forall ((x_191 R_0) (x_192 R_0))
	(diseqR_0 Nil_3 (x_0 x_191 x_192))))
(assert (forall ((x_193 R_0) (x_194 R_0))
	(diseqR_0 Nil_3 (x_1 x_193 x_194))))
(assert (forall ((x_195 R_0))
	(diseqR_0 Nil_3 (Star_0 x_195))))
(assert (diseqR_0 Eps_0 Nil_3))
(assert (forall ((x_196 T_0))
	(diseqR_0 (Atom_0 x_196) Nil_3)))
(assert (forall ((x_197 R_0) (x_198 R_0))
	(diseqR_0 (x_0 x_197 x_198) Nil_3)))
(assert (forall ((x_199 R_0) (x_200 R_0))
	(diseqR_0 (x_1 x_199 x_200) Nil_3)))
(assert (forall ((x_201 R_0))
	(diseqR_0 (Star_0 x_201) Nil_3)))
(assert (forall ((x_202 T_0))
	(diseqR_0 Eps_0 (Atom_0 x_202))))
(assert (forall ((x_203 R_0) (x_204 R_0))
	(diseqR_0 Eps_0 (x_0 x_203 x_204))))
(assert (forall ((x_205 R_0) (x_206 R_0))
	(diseqR_0 Eps_0 (x_1 x_205 x_206))))
(assert (forall ((x_207 R_0))
	(diseqR_0 Eps_0 (Star_0 x_207))))
(assert (forall ((x_208 T_0))
	(diseqR_0 (Atom_0 x_208) Eps_0)))
(assert (forall ((x_209 R_0) (x_210 R_0))
	(diseqR_0 (x_0 x_209 x_210) Eps_0)))
(assert (forall ((x_211 R_0) (x_212 R_0))
	(diseqR_0 (x_1 x_211 x_212) Eps_0)))
(assert (forall ((x_213 R_0))
	(diseqR_0 (Star_0 x_213) Eps_0)))
(assert (forall ((x_214 T_0) (x_215 R_0) (x_216 R_0))
	(diseqR_0 (Atom_0 x_214) (x_0 x_215 x_216))))
(assert (forall ((x_217 T_0) (x_218 R_0) (x_219 R_0))
	(diseqR_0 (Atom_0 x_217) (x_1 x_218 x_219))))
(assert (forall ((x_220 T_0) (x_221 R_0))
	(diseqR_0 (Atom_0 x_220) (Star_0 x_221))))
(assert (forall ((x_222 R_0) (x_223 R_0) (x_224 T_0))
	(diseqR_0 (x_0 x_222 x_223) (Atom_0 x_224))))
(assert (forall ((x_225 R_0) (x_226 R_0) (x_227 T_0))
	(diseqR_0 (x_1 x_225 x_226) (Atom_0 x_227))))
(assert (forall ((x_228 R_0) (x_229 T_0))
	(diseqR_0 (Star_0 x_228) (Atom_0 x_229))))
(assert (forall ((x_230 R_0) (x_231 R_0) (x_232 R_0) (x_233 R_0))
	(diseqR_0 (x_0 x_230 x_231) (x_1 x_232 x_233))))
(assert (forall ((x_234 R_0) (x_235 R_0) (x_236 R_0))
	(diseqR_0 (x_0 x_234 x_235) (Star_0 x_236))))
(assert (forall ((x_237 R_0) (x_238 R_0) (x_239 R_0) (x_240 R_0))
	(diseqR_0 (x_1 x_237 x_238) (x_0 x_239 x_240))))
(assert (forall ((x_241 R_0) (x_242 R_0) (x_243 R_0))
	(diseqR_0 (Star_0 x_241) (x_0 x_242 x_243))))
(assert (forall ((x_244 R_0) (x_245 R_0) (x_246 R_0))
	(diseqR_0 (x_1 x_244 x_245) (Star_0 x_246))))
(assert (forall ((x_247 R_0) (x_248 R_0) (x_249 R_0))
	(diseqR_0 (Star_0 x_247) (x_1 x_248 x_249))))
(assert (forall ((x_250 T_0) (x_251 T_0))
	(=> (diseqT_0 x_250 x_251)
	    (diseqR_0 (Atom_0 x_250) (Atom_0 x_251)))))
(assert (forall ((x_252 R_0) (x_253 R_0) (x_254 R_0) (x_255 R_0))
	(=> (diseqR_0 x_252 x_254)
	    (diseqR_0 (x_0 x_252 x_253) (x_0 x_254 x_255)))))
(assert (forall ((x_252 R_0) (x_253 R_0) (x_254 R_0) (x_255 R_0))
	(=> (diseqR_0 x_253 x_255)
	    (diseqR_0 (x_0 x_252 x_253) (x_0 x_254 x_255)))))
(assert (forall ((x_256 R_0) (x_257 R_0) (x_258 R_0) (x_259 R_0))
	(=> (diseqR_0 x_256 x_258)
	    (diseqR_0 (x_1 x_256 x_257) (x_1 x_258 x_259)))))
(assert (forall ((x_256 R_0) (x_257 R_0) (x_258 R_0) (x_259 R_0))
	(=> (diseqR_0 x_257 x_259)
	    (diseqR_0 (x_1 x_256 x_257) (x_1 x_258 x_259)))))
(assert (forall ((x_260 R_0) (x_261 R_0))
	(=> (diseqR_0 x_260 x_261)
	    (diseqR_0 (Star_0 x_260) (Star_0 x_261)))))
(declare-fun splits_0 (list_2 T_0 list_2) Bool)
(assert (forall ((x_26 list_2) (bs_0 list_1) (cs_0 list_1) (x_3 list_2) (x_2 T_0))
	(=> (splits_0 x_26 x_2 x_3)
	    (splits_0 (cons_2 (pair_1 (cons_1 x_2 bs_0) cs_0) x_26) x_2 (cons_2 (pair_1 bs_0 cs_0) x_3)))))
(assert (forall ((x_2 T_0))
	(splits_0 nil_2 x_2 nil_2)))
(declare-fun splits_1 (list_2 list_1) Bool)
(assert (forall ((x_29 list_2) (x_30 list_2) (y_1 T_0) (xs_0 list_1))
	(=>	(and (splits_1 x_29 xs_0)
			(splits_0 x_30 y_1 x_29))
		(splits_1 (cons_2 (pair_1 nil_1 (cons_1 y_1 xs_0)) x_30) (cons_1 y_1 xs_0)))))
(assert (splits_1 (cons_2 (pair_1 nil_1 nil_1) nil_2) nil_1))
(declare-fun or_0 (Bool_0 list_0) Bool)
(assert (forall ((x_106 Bool_0) (x_33 Bool_0) (y_2 Bool_0) (xs_1 list_0))
	(=>	(and (or_0 x_33 xs_1)
			(or_1 x_106 y_2 x_33))
		(or_0 x_106 (cons_0 y_2 xs_1)))))
(assert (or_0 false_0 nil_0))
(declare-fun eps_1 (Bool_0 R_0) Bool)
(assert (forall ((y_3 R_0))
	(eps_1 true_0 (Star_0 y_3))))
(assert (forall ((x_107 Bool_0) (x_37 Bool_0) (x_38 Bool_0) (r_1 R_0) (q_1 R_0))
	(=>	(and (eps_1 x_37 r_1)
			(eps_1 x_38 q_1)
			(and_0 x_107 x_37 x_38))
		(eps_1 x_107 (x_1 r_1 q_1)))))
(assert (forall ((x_108 Bool_0) (x_40 Bool_0) (x_41 Bool_0) (p_0 R_0) (q_0 R_0))
	(=>	(and (eps_1 x_40 p_0)
			(eps_1 x_41 q_0)
			(or_1 x_108 x_40 x_41))
		(eps_1 x_108 (x_0 p_0 q_0)))))
(assert (eps_1 true_0 Eps_0))
(assert (forall ((x_7 R_0) (x_23 T_0))
	(eps_1 false_0 (Atom_0 x_23))))
(assert (forall ((x_7 R_0))
	(eps_1 false_0 Nil_3)))
(declare-fun okay_0 (Bool_0 R_0) Bool)
(assert (forall ((x_109 Bool_0) (x_110 Bool_0) (x_46 Bool_0) (x_47 Bool_0) (p_2 R_0))
	(=>	(and (okay_0 x_46 p_2)
			(eps_1 x_47 p_2)
			(not_0 x_109 x_47)
			(and_0 x_110 x_46 x_109))
		(okay_0 x_110 (Star_0 p_2)))))
(assert (forall ((x_111 Bool_0) (x_49 Bool_0) (x_50 Bool_0) (r_2 R_0) (q_3 R_0))
	(=>	(and (okay_0 x_49 r_2)
			(okay_0 x_50 q_3)
			(and_0 x_111 x_49 x_50))
		(okay_0 x_111 (x_1 r_2 q_3)))))
(assert (forall ((x_112 Bool_0) (x_52 Bool_0) (x_53 Bool_0) (p_1 R_0) (q_2 R_0))
	(=>	(and (okay_0 x_52 p_1)
			(okay_0 x_53 q_2)
			(and_0 x_112 x_52 x_53))
		(okay_0 x_112 (x_0 p_1 q_2)))))
(assert (forall ((x_9 R_0) (x_24 T_0))
	(okay_0 true_0 (Atom_0 x_24))))
(assert (forall ((x_9 R_0))
	(okay_0 true_0 Eps_0)))
(assert (forall ((x_9 R_0))
	(okay_0 true_0 Nil_3)))
(declare-fun step_0 (R_0 R_0 T_0) Bool)
(assert (forall ((x_58 R_0) (p_4 R_0) (y_4 T_0))
	(=> (step_0 x_58 p_4 y_4)
	    (step_0 (x_1 x_58 (Star_0 p_4)) (Star_0 p_4) y_4))))
(assert (forall ((x_61 R_0) (x_62 R_0) (r_3 R_0) (q_5 R_0) (y_4 T_0))
	(=>	(and (step_0 x_61 r_3 y_4)
			(step_0 x_62 q_5 y_4)
			(eps_1 true_0 r_3))
		(step_0 (x_0 (x_1 x_61 q_5) x_62) (x_1 r_3 q_5) y_4))))
(assert (forall ((x_65 R_0) (x_63 Bool_0) (r_3 R_0) (q_5 R_0) (y_4 T_0))
	(=>	(and (diseqBool_0 x_63 true_0)
			(step_0 x_65 r_3 y_4)
			(eps_1 x_63 r_3))
		(step_0 (x_0 (x_1 x_65 q_5) Nil_3) (x_1 r_3 q_5) y_4))))
(assert (forall ((x_67 R_0) (x_68 R_0) (p_3 R_0) (q_4 R_0) (y_4 T_0))
	(=>	(and (step_0 x_67 p_3 y_4)
			(step_0 x_68 q_4 y_4))
		(step_0 (x_0 x_67 x_68) (x_0 p_3 q_4) y_4))))
(assert (forall ((b_1 T_0))
	(step_0 Eps_0 (Atom_0 b_1) b_1)))
(assert (forall ((b_1 T_0) (y_4 T_0))
	(=> (diseqT_0 b_1 y_4)
	    (step_0 Nil_3 (Atom_0 b_1) y_4))))
(assert (forall ((x_11 R_0) (y_4 T_0))
	(step_0 Nil_3 Eps_0 y_4)))
(assert (forall ((x_11 R_0) (y_4 T_0))
	(step_0 Nil_3 Nil_3 y_4)))
(declare-fun rec_0 (Bool_0 R_0 list_1) Bool)
(assert (forall ((x_73 Bool_0) (x_74 R_0) (z_1 T_0) (xs_2 list_1) (x_12 R_0))
	(=>	(and (step_0 x_74 x_12 z_1)
			(rec_0 x_73 x_74 xs_2))
		(rec_0 x_73 x_12 (cons_1 z_1 xs_2)))))
(assert (forall ((x_76 Bool_0) (x_12 R_0))
	(=> (eps_1 x_76 x_12)
	    (rec_0 x_76 x_12 nil_1))))
(declare-fun reck_0 (Bool_0 R_0 list_1) Bool)
(declare-fun reck_1 (list_0 R_0 R_0 list_2) Bool)
(assert (forall ((x_79 Bool_0) (x_78 Bool_0) (x_20 T_0) (x_21 list_1) (p_7 R_0))
	(=>	(and (diseqBool_0 x_78 true_0)
			(rec_0 x_79 (x_1 p_7 (Star_0 p_7)) (cons_1 x_20 x_21))
			(eps_1 x_78 p_7))
		(reck_0 x_79 (Star_0 p_7) (cons_1 x_20 x_21)))))
(assert (forall ((x_20 T_0) (x_21 list_1) (p_7 R_0))
	(=> (eps_1 true_0 p_7)
	    (reck_0 false_0 (Star_0 p_7) (cons_1 x_20 x_21)))))
(assert (forall ((p_7 R_0))
	(reck_0 true_0 (Star_0 p_7) nil_1)))
(assert (forall ((x_84 Bool_0) (x_85 list_2) (x_86 list_0) (r_4 R_0) (q_8 R_0) (y_7 list_1))
	(=>	(and (splits_1 x_85 y_7)
			(reck_1 x_86 r_4 q_8 x_85)
			(or_0 x_84 x_86))
		(reck_0 x_84 (x_1 r_4 q_8) y_7))))
(assert (forall ((x_113 Bool_0) (x_89 Bool_0) (x_90 Bool_0) (p_6 R_0) (q_7 R_0) (y_7 list_1))
	(=>	(and (reck_0 x_89 p_6 y_7)
			(reck_0 x_90 q_7 y_7)
			(or_1 x_113 x_89 x_90))
		(reck_0 x_113 (x_0 p_6 q_7) y_7))))
(assert (forall ((x_18 T_0) (x_19 list_1) (b_2 T_0) (c_1 T_0))
	(reck_0 false_0 (Atom_0 c_1) (cons_1 b_2 (cons_1 x_18 x_19)))))
(assert (forall ((b_2 T_0))
	(reck_0 true_0 (Atom_0 b_2) (cons_1 b_2 nil_1))))
(assert (forall ((b_2 T_0) (c_1 T_0))
	(=> (diseqT_0 c_1 b_2)
	    (reck_0 false_0 (Atom_0 c_1) (cons_1 b_2 nil_1)))))
(assert (forall ((c_1 T_0))
	(reck_0 false_0 (Atom_0 c_1) nil_1)))
(assert (forall ((z_2 T_0) (x_16 list_1))
	(reck_0 false_0 Eps_0 (cons_1 z_2 x_16))))
(assert (reck_0 true_0 Eps_0 nil_1))
(assert (forall ((y_7 list_1))
	(reck_0 false_0 Nil_3 y_7)))
(assert (forall ((x_114 Bool_0) (x_99 Bool_0) (x_100 Bool_0) (x_101 list_0) (l_0 list_1) (r_5 list_1) (z_3 list_2) (p_8 R_0) (q_9 R_0))
	(=>	(and (reck_0 x_99 p_8 l_0)
			(rec_0 x_100 q_9 r_5)
			(reck_1 x_101 p_8 q_9 z_3)
			(and_0 x_114 x_99 x_100))
		(reck_1 (cons_0 x_114 x_101) p_8 q_9 (cons_2 (pair_1 l_0 r_5) z_3)))))
(assert (forall ((p_8 R_0) (q_9 R_0))
	(reck_1 nil_0 p_8 q_9 nil_2)))
(assert (forall ((x_103 Bool_0) (x_104 Bool_0) (p_9 R_0) (s_0 list_1))
	(=>	(and (diseqBool_0 x_103 x_104)
			(okay_0 true_0 p_9)
			(rec_0 x_103 p_9 s_0)
			(reck_0 x_104 p_9 s_0))
		false)))
(check-sat)
