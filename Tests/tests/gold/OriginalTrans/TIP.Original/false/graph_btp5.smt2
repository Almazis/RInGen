(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_13 ) (Z_14 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_194 Nat_0))
	(unS_1 x_194 (Z_14 x_194))))
(assert (isZ_2 Z_13))
(assert (forall ((x_196 Nat_0))
	(isZ_3 (Z_14 x_196))))
(assert (forall ((x_197 Nat_0))
	(diseqNat_0 Z_13 (Z_14 x_197))))
(assert (forall ((x_198 Nat_0))
	(diseqNat_0 (Z_14 x_198) Z_13)))
(assert (forall ((x_199 Nat_0) (x_200 Nat_0))
	(=> (diseqNat_0 x_199 x_200)
	    (diseqNat_0 (Z_14 x_199) (Z_14 x_200)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_13 y_21)))
(assert (forall ((r_0 Nat_0) (x_170 Nat_0) (y_21 Nat_0))
	(=> (add_0 r_0 x_170 y_21)
	    (add_0 (Z_14 r_0) (Z_14 x_170) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_13 Z_13 y_21)))
(assert (forall ((r_0 Nat_0) (x_170 Nat_0) (y_21 Nat_0))
	(=> (minus_0 r_0 x_170 y_21)
	    (minus_0 (Z_14 r_0) (Z_14 x_170) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_13 y_21)))
(assert (forall ((x_170 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_170 y_21)
	    (le_0 (Z_14 x_170) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_13)))
(assert (forall ((x_170 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_170 y_21)
	    (ge_0 (Z_14 x_170) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_13 (Z_14 y_21))))
(assert (forall ((x_170 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_170 y_21)
	    (lt_0 (Z_14 x_170) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (Z_14 y_21) Z_13)))
(assert (forall ((x_170 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_170 y_21)
	    (gt_0 (Z_14 x_170) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(mult_0 Z_13 Z_13 y_21)))
(assert (forall ((r_0 Nat_0) (x_170 Nat_0) (y_21 Nat_0) (z_15 Nat_0))
	(=>	(and (mult_0 r_0 x_170 y_21)
			(add_0 z_15 r_0 y_21))
		(mult_0 z_15 (Z_14 x_170) y_21))))
(assert (forall ((x_170 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_170 y_21)
	    (div_0 Z_13 x_170 y_21))))
(assert (forall ((r_0 Nat_0) (x_170 Nat_0) (y_21 Nat_0) (z_15 Nat_0))
	(=>	(and (ge_0 x_170 y_21)
			(minus_0 z_15 x_170 y_21)
			(div_0 r_0 z_15 y_21))
		(div_0 (Z_14 r_0) x_170 y_21))))
(assert (forall ((x_170 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_170 y_21)
	    (mod_0 x_170 x_170 y_21))))
(assert (forall ((r_0 Nat_0) (x_170 Nat_0) (y_21 Nat_0) (z_15 Nat_0))
	(=>	(and (ge_0 x_170 y_21)
			(minus_0 z_15 x_170 y_21)
			(mod_0 r_0 z_15 y_21))
		(mod_0 r_0 x_170 y_21))))
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun isfalse_1 (Bool_0) Bool)
(declare-fun istrue_1 (Bool_0) Bool)
(assert (isfalse_1 false_0))
(assert (istrue_1 true_0))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun hence_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_1 false_0 false_0 false_0))
(assert (or_1 true_0 true_0 false_0))
(assert (or_1 true_0 false_0 true_0))
(assert (or_1 true_0 true_0 true_0))
(assert (hence_0 true_0 false_0 false_0))
(assert (hence_0 false_0 true_0 false_0))
(assert (hence_0 true_0 false_0 true_0))
(assert (hence_0 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_203 Nat_0) (x_204 Nat_0))
	(projpair_4 x_203 (pair_1 x_203 x_204))))
(assert (forall ((x_203 Nat_0) (x_204 Nat_0))
	(projpair_5 x_204 (pair_1 x_203 x_204))))
(assert (forall ((x_206 Nat_0) (x_207 Nat_0))
	(ispair_0 (pair_1 x_206 x_207))))
(assert (forall ((x_208 Nat_0) (x_209 Nat_0) (x_210 Nat_0) (x_211 Nat_0))
	(=> (diseqNat_0 x_208 x_210)
	    (diseqpair_0 (pair_1 x_208 x_209) (pair_1 x_210 x_211)))))
(assert (forall ((x_208 Nat_0) (x_209 Nat_0) (x_210 Nat_0) (x_211 Nat_0))
	(=> (diseqNat_0 x_209 x_211)
	    (diseqpair_0 (pair_1 x_208 x_209) (pair_1 x_210 x_211)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_7 (Bool_0 list_0) Bool)
(declare-fun tail_7 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_213 Bool_0) (x_214 list_0))
	(head_7 x_213 (cons_0 x_213 x_214))))
(assert (forall ((x_213 Bool_0) (x_214 list_0))
	(tail_7 x_214 (cons_0 x_213 x_214))))
(assert (isnil_0 nil_0))
(assert (forall ((x_216 Bool_0) (x_217 list_0))
	(iscons_0 (cons_0 x_216 x_217))))
(assert (forall ((x_218 Bool_0) (x_219 list_0))
	(diseqlist_0 nil_0 (cons_0 x_218 x_219))))
(assert (forall ((x_220 Bool_0) (x_221 list_0))
	(diseqlist_0 (cons_0 x_220 x_221) nil_0)))
(assert (forall ((x_222 Bool_0) (x_223 list_0) (x_224 Bool_0) (x_225 list_0))
	(=> (diseqBool_0 x_222 x_224)
	    (diseqlist_0 (cons_0 x_222 x_223) (cons_0 x_224 x_225)))))
(assert (forall ((x_222 Bool_0) (x_223 list_0) (x_224 Bool_0) (x_225 list_0))
	(=> (diseqlist_0 x_223 x_225)
	    (diseqlist_0 (cons_0 x_222 x_223) (cons_0 x_224 x_225)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_8 (Nat_0 list_1) Bool)
(declare-fun tail_8 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_227 Nat_0) (x_228 list_1))
	(head_8 x_227 (cons_1 x_227 x_228))))
(assert (forall ((x_227 Nat_0) (x_228 list_1))
	(tail_8 x_228 (cons_1 x_227 x_228))))
(assert (isnil_1 nil_1))
(assert (forall ((x_230 Nat_0) (x_231 list_1))
	(iscons_1 (cons_1 x_230 x_231))))
(assert (forall ((x_232 Nat_0) (x_233 list_1))
	(diseqlist_1 nil_1 (cons_1 x_232 x_233))))
(assert (forall ((x_234 Nat_0) (x_235 list_1))
	(diseqlist_1 (cons_1 x_234 x_235) nil_1)))
(assert (forall ((x_236 Nat_0) (x_237 list_1) (x_238 Nat_0) (x_239 list_1))
	(=> (diseqNat_0 x_236 x_238)
	    (diseqlist_1 (cons_1 x_236 x_237) (cons_1 x_238 x_239)))))
(assert (forall ((x_236 Nat_0) (x_237 list_1) (x_238 Nat_0) (x_239 list_1))
	(=> (diseqlist_1 x_237 x_239)
	    (diseqlist_1 (cons_1 x_236 x_237) (cons_1 x_238 x_239)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_9 (pair_0 list_2) Bool)
(declare-fun tail_9 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_241 pair_0) (x_242 list_2))
	(head_9 x_241 (cons_2 x_241 x_242))))
(assert (forall ((x_241 pair_0) (x_242 list_2))
	(tail_9 x_242 (cons_2 x_241 x_242))))
(assert (isnil_2 nil_2))
(assert (forall ((x_244 pair_0) (x_245 list_2))
	(iscons_2 (cons_2 x_244 x_245))))
(assert (forall ((x_246 pair_0) (x_247 list_2))
	(diseqlist_2 nil_2 (cons_2 x_246 x_247))))
(assert (forall ((x_248 pair_0) (x_249 list_2))
	(diseqlist_2 (cons_2 x_248 x_249) nil_2)))
(assert (forall ((x_250 pair_0) (x_251 list_2) (x_252 pair_0) (x_253 list_2))
	(=> (diseqpair_0 x_250 x_252)
	    (diseqlist_2 (cons_2 x_250 x_251) (cons_2 x_252 x_253)))))
(assert (forall ((x_250 pair_0) (x_251 list_2) (x_252 pair_0) (x_253 list_2))
	(=> (diseqlist_2 x_251 x_253)
	    (diseqlist_2 (cons_2 x_250 x_251) (cons_2 x_252 x_253)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_10 (list_2 list_3) Bool)
(declare-fun tail_10 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_255 list_2) (x_256 list_3))
	(head_10 x_255 (cons_3 x_255 x_256))))
(assert (forall ((x_255 list_2) (x_256 list_3))
	(tail_10 x_256 (cons_3 x_255 x_256))))
(assert (isnil_3 nil_3))
(assert (forall ((x_258 list_2) (x_259 list_3))
	(iscons_3 (cons_3 x_258 x_259))))
(assert (forall ((x_260 list_2) (x_261 list_3))
	(diseqlist_3 nil_3 (cons_3 x_260 x_261))))
(assert (forall ((x_262 list_2) (x_263 list_3))
	(diseqlist_3 (cons_3 x_262 x_263) nil_3)))
(assert (forall ((x_264 list_2) (x_265 list_3) (x_266 list_2) (x_267 list_3))
	(=> (diseqlist_2 x_264 x_266)
	    (diseqlist_3 (cons_3 x_264 x_265) (cons_3 x_266 x_267)))))
(assert (forall ((x_264 list_2) (x_265 list_3) (x_266 list_2) (x_267 list_3))
	(=> (diseqlist_3 x_265 x_267)
	    (diseqlist_3 (cons_3 x_264 x_265) (cons_3 x_266 x_267)))))
(declare-datatypes ((B_0 0)) (((I_0 ) (O_0 ))))
(declare-fun diseqB_0 (B_0 B_0) Bool)
(declare-fun isI_0 (B_0) Bool)
(declare-fun isO_0 (B_0) Bool)
(assert (isI_0 I_0))
(assert (isO_0 O_0))
(assert (diseqB_0 I_0 O_0))
(assert (diseqB_0 O_0 I_0))
(declare-datatypes ((list_4 0)) (((nil_4 ) (cons_4 (head_4 B_0) (tail_4 list_4)))))
(declare-fun diseqlist_4 (list_4 list_4) Bool)
(declare-fun head_11 (B_0 list_4) Bool)
(declare-fun tail_11 (list_4 list_4) Bool)
(declare-fun isnil_4 (list_4) Bool)
(declare-fun iscons_4 (list_4) Bool)
(assert (forall ((x_271 B_0) (x_272 list_4))
	(head_11 x_271 (cons_4 x_271 x_272))))
(assert (forall ((x_271 B_0) (x_272 list_4))
	(tail_11 x_272 (cons_4 x_271 x_272))))
(assert (isnil_4 nil_4))
(assert (forall ((x_274 B_0) (x_275 list_4))
	(iscons_4 (cons_4 x_274 x_275))))
(assert (forall ((x_276 B_0) (x_277 list_4))
	(diseqlist_4 nil_4 (cons_4 x_276 x_277))))
(assert (forall ((x_278 B_0) (x_279 list_4))
	(diseqlist_4 (cons_4 x_278 x_279) nil_4)))
(assert (forall ((x_280 B_0) (x_281 list_4) (x_282 B_0) (x_283 list_4))
	(=> (diseqB_0 x_280 x_282)
	    (diseqlist_4 (cons_4 x_280 x_281) (cons_4 x_282 x_283)))))
(assert (forall ((x_280 B_0) (x_281 list_4) (x_282 B_0) (x_283 list_4))
	(=> (diseqlist_4 x_281 x_283)
	    (diseqlist_4 (cons_4 x_280 x_281) (cons_4 x_282 x_283)))))
(declare-datatypes ((list_5 0)) (((nil_5 ) (cons_5 (head_5 list_4) (tail_5 list_5)))))
(declare-fun diseqlist_5 (list_5 list_5) Bool)
(declare-fun head_12 (list_4 list_5) Bool)
(declare-fun tail_12 (list_5 list_5) Bool)
(declare-fun isnil_5 (list_5) Bool)
(declare-fun iscons_5 (list_5) Bool)
(assert (forall ((x_285 list_4) (x_286 list_5))
	(head_12 x_285 (cons_5 x_285 x_286))))
(assert (forall ((x_285 list_4) (x_286 list_5))
	(tail_12 x_286 (cons_5 x_285 x_286))))
(assert (isnil_5 nil_5))
(assert (forall ((x_288 list_4) (x_289 list_5))
	(iscons_5 (cons_5 x_288 x_289))))
(assert (forall ((x_290 list_4) (x_291 list_5))
	(diseqlist_5 nil_5 (cons_5 x_290 x_291))))
(assert (forall ((x_292 list_4) (x_293 list_5))
	(diseqlist_5 (cons_5 x_292 x_293) nil_5)))
(assert (forall ((x_294 list_4) (x_295 list_5) (x_296 list_4) (x_297 list_5))
	(=> (diseqlist_4 x_294 x_296)
	    (diseqlist_5 (cons_5 x_294 x_295) (cons_5 x_296 x_297)))))
(assert (forall ((x_294 list_4) (x_295 list_5) (x_296 list_4) (x_297 list_5))
	(=> (diseqlist_5 x_295 x_297)
	    (diseqlist_5 (cons_5 x_294 x_295) (cons_5 x_296 x_297)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_4) (projpair_3 list_4)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (list_4 pair_2) Bool)
(declare-fun projpair_7 (list_4 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_298 list_4) (x_299 list_4))
	(projpair_6 x_298 (pair_3 x_298 x_299))))
(assert (forall ((x_298 list_4) (x_299 list_4))
	(projpair_7 x_299 (pair_3 x_298 x_299))))
(assert (forall ((x_301 list_4) (x_302 list_4))
	(ispair_1 (pair_3 x_301 x_302))))
(assert (forall ((x_303 list_4) (x_304 list_4) (x_305 list_4) (x_306 list_4))
	(=> (diseqlist_4 x_303 x_305)
	    (diseqpair_1 (pair_3 x_303 x_304) (pair_3 x_305 x_306)))))
(assert (forall ((x_303 list_4) (x_304 list_4) (x_305 list_4) (x_306 list_4))
	(=> (diseqlist_4 x_304 x_306)
	    (diseqpair_1 (pair_3 x_303 x_304) (pair_3 x_305 x_306)))))
(declare-datatypes ((list_6 0)) (((nil_6 ) (cons_6 (head_6 pair_2) (tail_6 list_6)))))
(declare-fun diseqlist_6 (list_6 list_6) Bool)
(declare-fun head_13 (pair_2 list_6) Bool)
(declare-fun tail_13 (list_6 list_6) Bool)
(declare-fun isnil_6 (list_6) Bool)
(declare-fun iscons_6 (list_6) Bool)
(assert (forall ((x_308 pair_2) (x_309 list_6))
	(head_13 x_308 (cons_6 x_308 x_309))))
(assert (forall ((x_308 pair_2) (x_309 list_6))
	(tail_13 x_309 (cons_6 x_308 x_309))))
(assert (isnil_6 nil_6))
(assert (forall ((x_311 pair_2) (x_312 list_6))
	(iscons_6 (cons_6 x_311 x_312))))
(assert (forall ((x_313 pair_2) (x_314 list_6))
	(diseqlist_6 nil_6 (cons_6 x_313 x_314))))
(assert (forall ((x_315 pair_2) (x_316 list_6))
	(diseqlist_6 (cons_6 x_315 x_316) nil_6)))
(assert (forall ((x_317 pair_2) (x_318 list_6) (x_319 pair_2) (x_320 list_6))
	(=> (diseqpair_1 x_317 x_319)
	    (diseqlist_6 (cons_6 x_317 x_318) (cons_6 x_319 x_320)))))
(assert (forall ((x_317 pair_2) (x_318 list_6) (x_319 pair_2) (x_320 list_6))
	(=> (diseqlist_6 x_318 x_320)
	    (diseqlist_6 (cons_6 x_317 x_318) (cons_6 x_319 x_320)))))
(declare-fun primEnumFromTo_0 (list_1 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_0 y_0)
	    (primEnumFromTo_0 nil_1 x_0 y_0))))
(assert (forall ((x_171 Nat_0) (x_37 list_1) (x_0 Nat_0) (y_0 Nat_0))
	(=>	(and (le_0 x_0 y_0)
			(primEnumFromTo_0 x_37 x_171 y_0)
			(add_0 x_171 (Z_14 Z_13) x_0))
		(primEnumFromTo_0 (cons_1 x_0 x_37) x_0 y_0))))
(declare-fun petersen_0 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_172 Nat_0) (x_39 list_2) (z_0 Nat_0) (x_2 list_1) (x_1 Nat_0))
	(=>	(and (petersen_0 x_39 x_1 x_2)
			(add_0 x_172 x_1 z_0))
		(petersen_0 (cons_2 (pair_1 z_0 x_172) x_39) x_1 (cons_1 z_0 x_2)))))
(assert (forall ((x_1 Nat_0))
	(petersen_0 nil_2 x_1 nil_1)))
(declare-fun petersen_1 (list_2 list_1) Bool)
(assert (forall ((x_173 Nat_0) (x_42 list_2) (y_2 Nat_0) (z_1 list_1))
	(=>	(and (petersen_1 x_42 z_1)
			(add_0 x_173 (Z_14 Z_13) y_2))
		(petersen_1 (cons_2 (pair_1 y_2 x_173) x_42) (cons_1 y_2 z_1)))))
(assert (petersen_1 nil_2 nil_1))
(declare-fun petersen_2 (list_3 Nat_0 list_2) Bool)
(assert (forall ((x_174 Nat_0) (x_175 Nat_0) (x_45 list_3) (u_0 Nat_0) (v_0 Nat_0) (x_5 list_2) (x_4 Nat_0))
	(=>	(and (petersen_2 x_45 x_4 x_5)
			(add_0 x_174 x_4 u_0)
			(add_0 x_175 x_4 v_0))
		(petersen_2 (cons_3 (cons_2 (pair_1 u_0 v_0) (cons_2 (pair_1 x_174 x_175) nil_2)) x_45) x_4 (cons_2 (pair_1 u_0 v_0) x_5)))))
(assert (forall ((x_4 Nat_0))
	(petersen_2 nil_3 x_4 nil_2)))
(declare-fun or_0 (Bool_0 list_0) Bool)
(assert (forall ((x_159 Bool_0) (x_48 Bool_0) (y_4 Bool_0) (xs_0 list_0))
	(=>	(and (or_0 x_48 xs_0)
			(or_1 x_159 y_4 x_48))
		(or_0 x_159 (cons_0 y_4 xs_0)))))
(assert (or_0 false_0 nil_0))
(declare-fun maximummaximum_0 (Nat_0 Nat_0 list_2) Bool)
(assert (forall ((x_50 Nat_0) (y_7 Nat_0) (y_6 Nat_0) (yzs_0 list_2) (x_7 Nat_0))
	(=>	(and (le_0 y_6 y_7)
			(le_0 x_7 y_7)
			(maximummaximum_0 x_50 y_7 yzs_0))
		(maximummaximum_0 x_50 x_7 (cons_2 (pair_1 y_6 y_7) yzs_0)))))
(assert (forall ((x_52 Nat_0) (y_7 Nat_0) (y_6 Nat_0) (yzs_0 list_2) (x_7 Nat_0))
	(=>	(and (le_0 y_6 y_7)
			(gt_0 x_7 y_7)
			(maximummaximum_0 x_52 x_7 yzs_0))
		(maximummaximum_0 x_52 x_7 (cons_2 (pair_1 y_6 y_7) yzs_0)))))
(assert (forall ((x_54 Nat_0) (y_6 Nat_0) (z_4 Nat_0) (yzs_0 list_2) (x_7 Nat_0))
	(=>	(and (gt_0 y_6 z_4)
			(le_0 x_7 y_6)
			(maximummaximum_0 x_54 y_6 yzs_0))
		(maximummaximum_0 x_54 x_7 (cons_2 (pair_1 y_6 z_4) yzs_0)))))
(assert (forall ((x_56 Nat_0) (y_6 Nat_0) (z_4 Nat_0) (yzs_0 list_2) (x_7 Nat_0))
	(=>	(and (gt_0 y_6 z_4)
			(gt_0 x_7 y_6)
			(maximummaximum_0 x_56 x_7 yzs_0))
		(maximummaximum_0 x_56 x_7 (cons_2 (pair_1 y_6 z_4) yzs_0)))))
(assert (forall ((x_58 Nat_0))
	(maximummaximum_0 x_58 x_58 nil_2)))
(declare-fun length_0 (Nat_0 list_5) Bool)
(assert (forall ((x_176 Nat_0) (x_60 Nat_0) (y_8 list_4) (l_0 list_5))
	(=>	(and (length_0 x_60 l_0)
			(add_0 x_176 (Z_14 Z_13) x_60))
		(length_0 x_176 (cons_5 y_8 l_0)))))
(assert (length_0 Z_13 nil_5))
(declare-fun last_0 (list_4 list_4 list_5) Bool)
(assert (forall ((x_62 list_4) (z_5 list_4) (ys_0 list_5) (x_9 list_4))
	(=> (last_0 x_62 z_5 ys_0)
	    (last_0 x_62 x_9 (cons_5 z_5 ys_0)))))
(assert (forall ((x_64 list_4))
	(last_0 x_64 x_64 nil_5)))
(declare-fun bin_0 (list_4 Nat_0) Bool)
(assert (bin_0 nil_4 Z_13))
(assert (forall ((x_178 Nat_0) (x_67 list_4) (x_10 Nat_0))
	(=>	(and (diseqNat_0 x_10 Z_13)
			(bin_0 x_67 x_178)
			(div_0 x_178 x_10 (Z_14 (Z_14 Z_13)))
			(mod_0 Z_13 x_10 (Z_14 (Z_14 Z_13))))
		(bin_0 (cons_4 O_0 x_67) x_10))))
(assert (bin_0 nil_4 Z_13))
(assert (forall ((x_180 Nat_0) (x_179 Nat_0) (x_70 list_4) (x_10 Nat_0))
	(=>	(and (diseqNat_0 x_10 Z_13)
			(diseqNat_0 x_179 Z_13)
			(bin_0 x_70 x_180)
			(div_0 x_180 x_10 (Z_14 (Z_14 Z_13)))
			(mod_0 x_179 x_10 (Z_14 (Z_14 Z_13))))
		(bin_0 (cons_4 I_0 x_70) x_10))))
(declare-fun bgraph_0 (list_6 list_2) Bool)
(assert (forall ((x_72 list_4) (x_73 list_4) (x_74 list_6) (u_1 Nat_0) (v_1 Nat_0) (z_6 list_2))
	(=>	(and (bin_0 x_72 u_1)
			(bin_0 x_73 v_1)
			(bgraph_0 x_74 z_6))
		(bgraph_0 (cons_6 (pair_3 x_72 x_73) x_74) (cons_2 (pair_1 u_1 v_1) z_6)))))
(assert (bgraph_0 nil_6 nil_2))
(declare-fun beq_0 (Bool_0 list_4 list_4) Bool)
(assert (forall ((x_76 Bool_0) (zs_0 list_4) (xs_1 list_4))
	(=> (beq_0 x_76 xs_1 zs_0)
	    (beq_0 x_76 (cons_4 O_0 xs_1) (cons_4 O_0 zs_0)))))
(assert (forall ((zs_0 list_4) (xs_1 list_4))
	(beq_0 false_0 (cons_4 O_0 xs_1) (cons_4 I_0 zs_0))))
(assert (forall ((xs_1 list_4))
	(beq_0 false_0 (cons_4 O_0 xs_1) nil_4)))
(assert (forall ((ys_1 list_4) (xs_1 list_4))
	(beq_0 false_0 (cons_4 I_0 xs_1) (cons_4 O_0 ys_1))))
(assert (forall ((x_81 Bool_0) (ys_1 list_4) (xs_1 list_4))
	(=> (beq_0 x_81 xs_1 ys_1)
	    (beq_0 x_81 (cons_4 I_0 xs_1) (cons_4 I_0 ys_1)))))
(assert (forall ((xs_1 list_4))
	(beq_0 false_0 (cons_4 I_0 xs_1) nil_4)))
(assert (forall ((z_7 B_0) (x_13 list_4))
	(beq_0 false_0 nil_4 (cons_4 z_7 x_13))))
(assert (beq_0 true_0 nil_4 nil_4))
(declare-fun bpath_0 (list_0 list_4 list_4 list_6) Bool)
(assert (forall ((x_160 Bool_0) (x_161 Bool_0) (x_162 Bool_0) (x_87 Bool_0) (x_88 Bool_0) (x_89 Bool_0) (x_90 Bool_0) (x_91 list_0) (u_2 list_4) (v_2 list_4) (x_19 list_6) (x_17 list_4) (y_12 list_4))
	(=>	(and (beq_0 x_87 u_2 x_17)
			(beq_0 x_88 v_2 y_12)
			(beq_0 x_89 u_2 y_12)
			(beq_0 x_90 v_2 x_17)
			(bpath_0 x_91 x_17 y_12 x_19)
			(and_0 x_160 x_87 x_88)
			(and_0 x_161 x_89 x_90)
			(or_1 x_162 x_160 x_161))
		(bpath_0 (cons_0 x_162 x_91) x_17 y_12 (cons_6 (pair_3 u_2 v_2) x_19)))))
(assert (forall ((x_17 list_4) (y_12 list_4))
	(bpath_0 nil_0 x_17 y_12 nil_6)))
(declare-fun bpath_1 (Bool_0 list_5 list_6) Bool)
(assert (forall ((x_163 Bool_0) (x_94 list_0) (x_95 Bool_0) (x_96 Bool_0) (y_14 list_4) (xs_2 list_5) (z_9 list_4) (y_13 list_6))
	(=>	(and (bpath_0 x_94 z_9 y_14 y_13)
			(or_0 x_95 x_94)
			(bpath_1 x_96 (cons_5 y_14 xs_2) y_13)
			(and_0 x_163 x_95 x_96))
		(bpath_1 x_163 (cons_5 z_9 (cons_5 y_14 xs_2)) y_13))))
(assert (forall ((z_9 list_4) (y_13 list_6))
	(bpath_1 true_0 (cons_5 z_9 nil_5) y_13)))
(assert (forall ((y_13 list_6))
	(bpath_1 true_0 nil_5 y_13)))
(declare-fun belem_0 (list_0 list_4 list_5) Bool)
(assert (forall ((x_100 Bool_0) (x_101 list_0) (z_10 list_4) (x_23 list_5) (x_22 list_4))
	(=>	(and (beq_0 x_100 x_22 z_10)
			(belem_0 x_101 x_22 x_23))
		(belem_0 (cons_0 x_100 x_101) x_22 (cons_5 z_10 x_23)))))
(assert (forall ((x_22 list_4))
	(belem_0 nil_0 x_22 nil_5)))
(declare-fun belem_1 (Bool_0 list_4 list_5) Bool)
(assert (forall ((x_103 Bool_0) (x_104 list_0) (x_24 list_4) (y_16 list_5))
	(=>	(and (belem_0 x_104 x_24 y_16)
			(or_0 x_103 x_104))
		(belem_1 x_103 x_24 y_16))))
(declare-fun bunique_0 (Bool_0 list_5) Bool)
(assert (forall ((x_164 Bool_0) (x_106 Bool_0) (x_107 Bool_0) (x_108 Bool_0) (y_17 list_4) (xs_3 list_5))
	(=>	(and (belem_1 x_107 y_17 xs_3)
			(bunique_0 x_108 xs_3)
			(not_0 x_164 x_107)
			(and_0 x_106 x_164 x_108))
		(bunique_0 x_106 (cons_5 y_17 xs_3)))))
(assert (bunique_0 true_0 nil_5))
(declare-fun btour_0 (Bool_0 list_5 list_2) Bool)
(assert (forall ((x_181 Nat_0) (x_166 Bool_0) (x_112 Bool_0) (x_113 list_4) (x_114 Bool_0) (x_115 list_6) (x_116 Bool_0) (x_117 Bool_0) (x_110 Nat_0) (x_111 Nat_0) (u_3 Nat_0) (v_3 Nat_0) (vs_0 list_2) (x_28 list_4) (x_29 list_5))
	(=>	(and (le_0 u_3 v_3)
			(last_0 x_113 x_28 x_29)
			(beq_0 x_114 x_28 x_113)
			(bgraph_0 x_115 (cons_2 (pair_1 u_3 v_3) vs_0))
			(bpath_1 x_116 (cons_5 x_28 x_29) x_115)
			(bunique_0 x_117 x_29)
			(length_0 x_110 (cons_5 x_28 x_29))
			(maximummaximum_0 x_111 v_3 vs_0)
			(and_0 x_166 x_114 x_116)
			(and_0 x_112 x_166 x_117)
			(add_0 x_181 (Z_14 Z_13) x_111)
			(add_0 x_110 (Z_14 Z_13) x_181))
		(btour_0 x_112 (cons_5 x_28 x_29) (cons_2 (pair_1 u_3 v_3) vs_0)))))
(assert (forall ((x_183 Nat_0) (x_184 Nat_0) (x_118 Nat_0) (x_119 Nat_0) (u_3 Nat_0) (v_3 Nat_0) (vs_0 list_2) (x_28 list_4) (x_29 list_5))
	(=>	(and (diseqNat_0 x_118 x_184)
			(le_0 u_3 v_3)
			(length_0 x_118 (cons_5 x_28 x_29))
			(maximummaximum_0 x_119 v_3 vs_0)
			(add_0 x_183 (Z_14 Z_13) x_119)
			(add_0 x_184 (Z_14 Z_13) x_183))
		(btour_0 false_0 (cons_5 x_28 x_29) (cons_2 (pair_1 u_3 v_3) vs_0)))))
(assert (forall ((x_185 Nat_0) (x_168 Bool_0) (x_123 Bool_0) (x_124 list_4) (x_125 Bool_0) (x_126 list_6) (x_127 Bool_0) (x_128 Bool_0) (x_121 Nat_0) (x_122 Nat_0) (u_3 Nat_0) (v_3 Nat_0) (vs_0 list_2) (x_28 list_4) (x_29 list_5))
	(=>	(and (gt_0 u_3 v_3)
			(last_0 x_124 x_28 x_29)
			(beq_0 x_125 x_28 x_124)
			(bgraph_0 x_126 (cons_2 (pair_1 u_3 v_3) vs_0))
			(bpath_1 x_127 (cons_5 x_28 x_29) x_126)
			(bunique_0 x_128 x_29)
			(length_0 x_121 (cons_5 x_28 x_29))
			(maximummaximum_0 x_122 u_3 vs_0)
			(and_0 x_168 x_125 x_127)
			(and_0 x_123 x_168 x_128)
			(add_0 x_185 (Z_14 Z_13) x_122)
			(add_0 x_121 (Z_14 Z_13) x_185))
		(btour_0 x_123 (cons_5 x_28 x_29) (cons_2 (pair_1 u_3 v_3) vs_0)))))
(assert (forall ((x_187 Nat_0) (x_188 Nat_0) (x_129 Nat_0) (x_130 Nat_0) (u_3 Nat_0) (v_3 Nat_0) (vs_0 list_2) (x_28 list_4) (x_29 list_5))
	(=>	(and (diseqNat_0 x_129 x_188)
			(gt_0 u_3 v_3)
			(length_0 x_129 (cons_5 x_28 x_29))
			(maximummaximum_0 x_130 u_3 vs_0)
			(add_0 x_187 (Z_14 Z_13) x_130)
			(add_0 x_188 (Z_14 Z_13) x_187))
		(btour_0 false_0 (cons_5 x_28 x_29) (cons_2 (pair_1 u_3 v_3) vs_0)))))
(assert (forall ((x_28 list_4) (x_29 list_5))
	(btour_0 false_0 (cons_5 x_28 x_29) nil_2)))
(assert (forall ((z_11 pair_0) (x_27 list_2))
	(btour_0 false_0 nil_5 (cons_2 z_11 x_27))))
(assert (btour_0 true_0 nil_5 nil_2))
(declare-fun x_31 (list_2 list_2 list_2) Bool)
(assert (forall ((x_136 list_2) (z_12 pair_0) (xs_4 list_2) (y_19 list_2))
	(=> (x_31 x_136 xs_4 y_19)
	    (x_31 (cons_2 z_12 x_136) (cons_2 z_12 xs_4) y_19))))
(assert (forall ((x_137 list_2))
	(x_31 x_137 nil_2 x_137)))
(declare-fun concat_0 (list_2 list_3) Bool)
(assert (forall ((x_138 list_2) (x_139 list_2) (y_20 list_2) (xs_5 list_3))
	(=>	(and (concat_0 x_139 xs_5)
			(x_31 x_138 y_20 x_139))
		(concat_0 x_138 (cons_3 y_20 xs_5)))))
(assert (concat_0 nil_2 nil_3))
(declare-fun petersen_3 (list_2 Nat_0) Bool)
(assert (petersen_3 nil_2 Z_13))
(assert (forall ((x_190 Nat_0) (x_189 Nat_0) (x_143 list_2) (x_144 list_1) (x_145 list_2) (x_146 list_3) (x_147 list_2) (x_148 list_1) (x_149 list_2) (x_34 Nat_0))
	(=>	(and (diseqNat_0 x_34 Z_13)
			(primEnumFromTo_0 x_144 Z_13 x_189)
			(petersen_1 x_145 x_144)
			(petersen_2 x_146 x_34 (cons_2 (pair_1 x_190 Z_13) x_145))
			(concat_0 x_147 x_146)
			(primEnumFromTo_0 x_148 Z_13 x_34)
			(petersen_0 x_149 x_34 x_148)
			(x_31 x_143 x_147 x_149)
			(minus_0 x_190 x_34 (Z_14 Z_13))
			(minus_0 x_189 x_34 (Z_14 Z_13)))
		(petersen_3 x_143 x_34))))
(assert (forall ((x_192 Nat_0) (x_191 Nat_0) (x_151 list_1) (x_152 list_2) (x_153 list_3) (x_154 list_2) (x_155 list_1) (x_156 list_2) (x_157 list_2) (p_0 list_5))
	(=>	(and (primEnumFromTo_0 x_151 Z_13 x_191)
			(petersen_1 x_152 x_151)
			(petersen_2 x_153 (Z_14 (Z_14 (Z_14 (Z_14 (Z_14 Z_13))))) (cons_2 (pair_1 x_192 Z_13) x_152))
			(concat_0 x_154 x_153)
			(primEnumFromTo_0 x_155 Z_13 (Z_14 (Z_14 (Z_14 (Z_14 (Z_14 Z_13))))))
			(petersen_0 x_156 (Z_14 (Z_14 (Z_14 (Z_14 (Z_14 Z_13))))) x_155)
			(x_31 x_157 x_154 x_156)
			(btour_0 true_0 p_0 x_157)
			(minus_0 x_192 (Z_14 (Z_14 (Z_14 (Z_14 (Z_14 Z_13))))) (Z_14 Z_13))
			(minus_0 x_191 (Z_14 (Z_14 (Z_14 (Z_14 (Z_14 Z_13))))) (Z_14 Z_13)))
		false)))
(check-sat)
