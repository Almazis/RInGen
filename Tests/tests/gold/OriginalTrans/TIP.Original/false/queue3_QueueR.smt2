(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_14 ) (Z_15 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_2 (Nat_0) Bool)
(declare-fun isZ_3 (Nat_0) Bool)
(assert (forall ((x_179 Nat_0))
	(unS_1 x_179 (Z_15 x_179))))
(assert (isZ_2 Z_14))
(assert (forall ((x_181 Nat_0))
	(isZ_3 (Z_15 x_181))))
(assert (forall ((x_182 Nat_0))
	(diseqNat_0 Z_14 (Z_15 x_182))))
(assert (forall ((x_183 Nat_0))
	(diseqNat_0 (Z_15 x_183) Z_14)))
(assert (forall ((x_184 Nat_0) (x_185 Nat_0))
	(=> (diseqNat_0 x_184 x_185)
	    (diseqNat_0 (Z_15 x_184) (Z_15 x_185)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_14 y_21)))
(assert (forall ((r_1 Nat_0) (x_173 Nat_0) (y_21 Nat_0))
	(=> (add_0 r_1 x_173 y_21)
	    (add_0 (Z_15 r_1) (Z_15 x_173) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_14 Z_14 y_21)))
(assert (forall ((r_1 Nat_0) (x_173 Nat_0) (y_21 Nat_0))
	(=> (minus_0 r_1 x_173 y_21)
	    (minus_0 (Z_15 r_1) (Z_15 x_173) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_14 y_21)))
(assert (forall ((x_173 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_173 y_21)
	    (le_0 (Z_15 x_173) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_14)))
(assert (forall ((x_173 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_173 y_21)
	    (ge_0 (Z_15 x_173) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_14 (Z_15 y_21))))
(assert (forall ((x_173 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_173 y_21)
	    (lt_0 (Z_15 x_173) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (Z_15 y_21) Z_14)))
(assert (forall ((x_173 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_173 y_21)
	    (gt_0 (Z_15 x_173) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(mult_0 Z_14 Z_14 y_21)))
(assert (forall ((r_1 Nat_0) (x_173 Nat_0) (y_21 Nat_0) (z_16 Nat_0))
	(=>	(and (mult_0 r_1 x_173 y_21)
			(add_0 z_16 r_1 y_21))
		(mult_0 z_16 (Z_15 x_173) y_21))))
(assert (forall ((x_173 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_173 y_21)
	    (div_0 Z_14 x_173 y_21))))
(assert (forall ((r_1 Nat_0) (x_173 Nat_0) (y_21 Nat_0) (z_16 Nat_0))
	(=>	(and (ge_0 x_173 y_21)
			(minus_0 z_16 x_173 y_21)
			(div_0 r_1 z_16 y_21))
		(div_0 (Z_15 r_1) x_173 y_21))))
(assert (forall ((x_173 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_173 y_21)
	    (mod_0 x_173 x_173 y_21))))
(assert (forall ((r_1 Nat_0) (x_173 Nat_0) (y_21 Nat_0) (z_16 Nat_0))
	(=>	(and (ge_0 x_173 y_21)
			(minus_0 z_16 x_173 y_21)
			(mod_0 r_1 z_16 y_21))
		(mod_0 r_1 x_173 y_21))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_186 Nat_0) (x_187 Nat_0))
	(projpair_4 x_186 (pair_1 x_186 x_187))))
(assert (forall ((x_186 Nat_0) (x_187 Nat_0))
	(projpair_5 x_187 (pair_1 x_186 x_187))))
(assert (forall ((x_189 Nat_0) (x_190 Nat_0))
	(ispair_0 (pair_1 x_189 x_190))))
(assert (forall ((x_191 Nat_0) (x_192 Nat_0) (x_193 Nat_0) (x_194 Nat_0))
	(=> (diseqNat_0 x_191 x_193)
	    (diseqpair_0 (pair_1 x_191 x_192) (pair_1 x_193 x_194)))))
(assert (forall ((x_191 Nat_0) (x_192 Nat_0) (x_193 Nat_0) (x_194 Nat_0))
	(=> (diseqNat_0 x_192 x_194)
	    (diseqpair_0 (pair_1 x_191 x_192) (pair_1 x_193 x_194)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_196 Nat_0) (x_197 list_0))
	(head_1 x_196 (cons_0 x_196 x_197))))
(assert (forall ((x_196 Nat_0) (x_197 list_0))
	(tail_2 x_197 (cons_0 x_196 x_197))))
(assert (isnil_0 nil_0))
(assert (forall ((x_199 Nat_0) (x_200 list_0))
	(iscons_0 (cons_0 x_199 x_200))))
(assert (forall ((x_201 Nat_0) (x_202 list_0))
	(diseqlist_0 nil_0 (cons_0 x_201 x_202))))
(assert (forall ((x_203 Nat_0) (x_204 list_0))
	(diseqlist_0 (cons_0 x_203 x_204) nil_0)))
(assert (forall ((x_205 Nat_0) (x_206 list_0) (x_207 Nat_0) (x_208 list_0))
	(=> (diseqNat_0 x_205 x_207)
	    (diseqlist_0 (cons_0 x_205 x_206) (cons_0 x_207 x_208)))))
(assert (forall ((x_205 Nat_0) (x_206 list_0) (x_207 Nat_0) (x_208 list_0))
	(=> (diseqlist_0 x_206 x_208)
	    (diseqlist_0 (cons_0 x_205 x_206) (cons_0 x_207 x_208)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_0) (projpair_3 list_0)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (list_0 pair_2) Bool)
(declare-fun projpair_7 (list_0 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_209 list_0) (x_210 list_0))
	(projpair_6 x_209 (pair_3 x_209 x_210))))
(assert (forall ((x_209 list_0) (x_210 list_0))
	(projpair_7 x_210 (pair_3 x_209 x_210))))
(assert (forall ((x_212 list_0) (x_213 list_0))
	(ispair_1 (pair_3 x_212 x_213))))
(assert (forall ((x_214 list_0) (x_215 list_0) (x_216 list_0) (x_217 list_0))
	(=> (diseqlist_0 x_214 x_216)
	    (diseqpair_1 (pair_3 x_214 x_215) (pair_3 x_216 x_217)))))
(assert (forall ((x_214 list_0) (x_215 list_0) (x_216 list_0) (x_217 list_0))
	(=> (diseqlist_0 x_215 x_217)
	    (diseqpair_1 (pair_3 x_214 x_215) (pair_3 x_216 x_217)))))
(declare-datatypes ((Q_0 0)) (((Q_1 (projQ_0 list_0) (projQ_1 list_0)))))
(declare-fun diseqQ_0 (Q_0 Q_0) Bool)
(declare-fun projQ_2 (list_0 Q_0) Bool)
(declare-fun projQ_3 (list_0 Q_0) Bool)
(declare-fun isQ_0 (Q_0) Bool)
(assert (forall ((x_218 list_0) (x_219 list_0))
	(projQ_2 x_218 (Q_1 x_218 x_219))))
(assert (forall ((x_218 list_0) (x_219 list_0))
	(projQ_3 x_219 (Q_1 x_218 x_219))))
(assert (forall ((x_221 list_0) (x_222 list_0))
	(isQ_0 (Q_1 x_221 x_222))))
(assert (forall ((x_223 list_0) (x_224 list_0) (x_225 list_0) (x_226 list_0))
	(=> (diseqlist_0 x_223 x_225)
	    (diseqQ_0 (Q_1 x_223 x_224) (Q_1 x_225 x_226)))))
(assert (forall ((x_223 list_0) (x_224 list_0) (x_225 list_0) (x_226 list_0))
	(=> (diseqlist_0 x_224 x_226)
	    (diseqQ_0 (Q_1 x_223 x_224) (Q_1 x_225 x_226)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun diseqMaybe_0 (Maybe_0 Maybe_0) Bool)
(declare-fun projJust_2 (Nat_0 Maybe_0) Bool)
(declare-fun isNothing_0 (Maybe_0) Bool)
(declare-fun isJust_0 (Maybe_0) Bool)
(assert (forall ((x_228 Nat_0))
	(projJust_2 x_228 (Just_0 x_228))))
(assert (isNothing_0 Nothing_0))
(assert (forall ((x_230 Nat_0))
	(isJust_0 (Just_0 x_230))))
(assert (forall ((x_231 Nat_0))
	(diseqMaybe_0 Nothing_0 (Just_0 x_231))))
(assert (forall ((x_232 Nat_0))
	(diseqMaybe_0 (Just_0 x_232) Nothing_0)))
(assert (forall ((x_233 Nat_0) (x_234 Nat_0))
	(=> (diseqNat_0 x_233 x_234)
	    (diseqMaybe_0 (Just_0 x_233) (Just_0 x_234)))))
(declare-datatypes ((Maybe_1 0)) (((Nothing_1 ) (Just_1 (projJust_1 Q_0)))))
(declare-fun diseqMaybe_1 (Maybe_1 Maybe_1) Bool)
(declare-fun projJust_3 (Q_0 Maybe_1) Bool)
(declare-fun isNothing_1 (Maybe_1) Bool)
(declare-fun isJust_1 (Maybe_1) Bool)
(assert (forall ((x_236 Q_0))
	(projJust_3 x_236 (Just_1 x_236))))
(assert (isNothing_1 Nothing_1))
(assert (forall ((x_238 Q_0))
	(isJust_1 (Just_1 x_238))))
(assert (forall ((x_239 Q_0))
	(diseqMaybe_1 Nothing_1 (Just_1 x_239))))
(assert (forall ((x_240 Q_0))
	(diseqMaybe_1 (Just_1 x_240) Nothing_1)))
(assert (forall ((x_241 Q_0) (x_242 Q_0))
	(=> (diseqQ_0 x_241 x_242)
	    (diseqMaybe_1 (Just_1 x_241) (Just_1 x_242)))))
(declare-datatypes ((E_0 0)) (((Empty_0 ) (EnqL_0 (projEnqL_0 Nat_0) (projEnqL_1 E_0)) (EnqR_0 (projEnqR_0 E_0) (projEnqR_1 Nat_0)) (DeqL_0 (projDeqL_0 E_0)) (DeqR_0 (projDeqR_0 E_0)) (App_0 (projApp_0 E_0) (projApp_1 E_0)))))
(declare-fun diseqE_0 (E_0 E_0) Bool)
(declare-fun projEnqL_2 (Nat_0 E_0) Bool)
(declare-fun projEnqL_3 (E_0 E_0) Bool)
(declare-fun projEnqR_2 (E_0 E_0) Bool)
(declare-fun projEnqR_3 (Nat_0 E_0) Bool)
(declare-fun projDeqL_1 (E_0 E_0) Bool)
(declare-fun projDeqR_1 (E_0 E_0) Bool)
(declare-fun projApp_2 (E_0 E_0) Bool)
(declare-fun projApp_3 (E_0 E_0) Bool)
(declare-fun isEmpty_0 (E_0) Bool)
(declare-fun isEnqL_0 (E_0) Bool)
(declare-fun isEnqR_0 (E_0) Bool)
(declare-fun isDeqL_0 (E_0) Bool)
(declare-fun isDeqR_0 (E_0) Bool)
(declare-fun isApp_0 (E_0) Bool)
(assert (forall ((x_244 Nat_0) (x_245 E_0))
	(projEnqL_2 x_244 (EnqL_0 x_244 x_245))))
(assert (forall ((x_244 Nat_0) (x_245 E_0))
	(projEnqL_3 x_245 (EnqL_0 x_244 x_245))))
(assert (forall ((x_247 E_0) (x_248 Nat_0))
	(projEnqR_2 x_247 (EnqR_0 x_247 x_248))))
(assert (forall ((x_247 E_0) (x_248 Nat_0))
	(projEnqR_3 x_248 (EnqR_0 x_247 x_248))))
(assert (forall ((x_250 E_0))
	(projDeqL_1 x_250 (DeqL_0 x_250))))
(assert (forall ((x_252 E_0))
	(projDeqR_1 x_252 (DeqR_0 x_252))))
(assert (forall ((x_254 E_0) (x_255 E_0))
	(projApp_2 x_254 (App_0 x_254 x_255))))
(assert (forall ((x_254 E_0) (x_255 E_0))
	(projApp_3 x_255 (App_0 x_254 x_255))))
(assert (isEmpty_0 Empty_0))
(assert (forall ((x_257 Nat_0) (x_258 E_0))
	(isEnqL_0 (EnqL_0 x_257 x_258))))
(assert (forall ((x_259 E_0) (x_260 Nat_0))
	(isEnqR_0 (EnqR_0 x_259 x_260))))
(assert (forall ((x_261 E_0))
	(isDeqL_0 (DeqL_0 x_261))))
(assert (forall ((x_262 E_0))
	(isDeqR_0 (DeqR_0 x_262))))
(assert (forall ((x_263 E_0) (x_264 E_0))
	(isApp_0 (App_0 x_263 x_264))))
(assert (forall ((x_265 Nat_0) (x_266 E_0))
	(diseqE_0 Empty_0 (EnqL_0 x_265 x_266))))
(assert (forall ((x_267 E_0) (x_268 Nat_0))
	(diseqE_0 Empty_0 (EnqR_0 x_267 x_268))))
(assert (forall ((x_269 E_0))
	(diseqE_0 Empty_0 (DeqL_0 x_269))))
(assert (forall ((x_270 E_0))
	(diseqE_0 Empty_0 (DeqR_0 x_270))))
(assert (forall ((x_271 E_0) (x_272 E_0))
	(diseqE_0 Empty_0 (App_0 x_271 x_272))))
(assert (forall ((x_273 Nat_0) (x_274 E_0))
	(diseqE_0 (EnqL_0 x_273 x_274) Empty_0)))
(assert (forall ((x_275 E_0) (x_276 Nat_0))
	(diseqE_0 (EnqR_0 x_275 x_276) Empty_0)))
(assert (forall ((x_277 E_0))
	(diseqE_0 (DeqL_0 x_277) Empty_0)))
(assert (forall ((x_278 E_0))
	(diseqE_0 (DeqR_0 x_278) Empty_0)))
(assert (forall ((x_279 E_0) (x_280 E_0))
	(diseqE_0 (App_0 x_279 x_280) Empty_0)))
(assert (forall ((x_281 Nat_0) (x_282 E_0) (x_283 E_0) (x_284 Nat_0))
	(diseqE_0 (EnqL_0 x_281 x_282) (EnqR_0 x_283 x_284))))
(assert (forall ((x_285 Nat_0) (x_286 E_0) (x_287 E_0))
	(diseqE_0 (EnqL_0 x_285 x_286) (DeqL_0 x_287))))
(assert (forall ((x_288 Nat_0) (x_289 E_0) (x_290 E_0))
	(diseqE_0 (EnqL_0 x_288 x_289) (DeqR_0 x_290))))
(assert (forall ((x_291 Nat_0) (x_292 E_0) (x_293 E_0) (x_294 E_0))
	(diseqE_0 (EnqL_0 x_291 x_292) (App_0 x_293 x_294))))
(assert (forall ((x_295 E_0) (x_296 Nat_0) (x_297 Nat_0) (x_298 E_0))
	(diseqE_0 (EnqR_0 x_295 x_296) (EnqL_0 x_297 x_298))))
(assert (forall ((x_299 E_0) (x_300 Nat_0) (x_301 E_0))
	(diseqE_0 (DeqL_0 x_299) (EnqL_0 x_300 x_301))))
(assert (forall ((x_302 E_0) (x_303 Nat_0) (x_304 E_0))
	(diseqE_0 (DeqR_0 x_302) (EnqL_0 x_303 x_304))))
(assert (forall ((x_305 E_0) (x_306 E_0) (x_307 Nat_0) (x_308 E_0))
	(diseqE_0 (App_0 x_305 x_306) (EnqL_0 x_307 x_308))))
(assert (forall ((x_309 E_0) (x_310 Nat_0) (x_311 E_0))
	(diseqE_0 (EnqR_0 x_309 x_310) (DeqL_0 x_311))))
(assert (forall ((x_312 E_0) (x_313 Nat_0) (x_314 E_0))
	(diseqE_0 (EnqR_0 x_312 x_313) (DeqR_0 x_314))))
(assert (forall ((x_315 E_0) (x_316 Nat_0) (x_317 E_0) (x_318 E_0))
	(diseqE_0 (EnqR_0 x_315 x_316) (App_0 x_317 x_318))))
(assert (forall ((x_319 E_0) (x_320 E_0) (x_321 Nat_0))
	(diseqE_0 (DeqL_0 x_319) (EnqR_0 x_320 x_321))))
(assert (forall ((x_322 E_0) (x_323 E_0) (x_324 Nat_0))
	(diseqE_0 (DeqR_0 x_322) (EnqR_0 x_323 x_324))))
(assert (forall ((x_325 E_0) (x_326 E_0) (x_327 E_0) (x_328 Nat_0))
	(diseqE_0 (App_0 x_325 x_326) (EnqR_0 x_327 x_328))))
(assert (forall ((x_329 E_0) (x_330 E_0))
	(diseqE_0 (DeqL_0 x_329) (DeqR_0 x_330))))
(assert (forall ((x_331 E_0) (x_332 E_0) (x_333 E_0))
	(diseqE_0 (DeqL_0 x_331) (App_0 x_332 x_333))))
(assert (forall ((x_334 E_0) (x_335 E_0))
	(diseqE_0 (DeqR_0 x_334) (DeqL_0 x_335))))
(assert (forall ((x_336 E_0) (x_337 E_0) (x_338 E_0))
	(diseqE_0 (App_0 x_336 x_337) (DeqL_0 x_338))))
(assert (forall ((x_339 E_0) (x_340 E_0) (x_341 E_0))
	(diseqE_0 (DeqR_0 x_339) (App_0 x_340 x_341))))
(assert (forall ((x_342 E_0) (x_343 E_0) (x_344 E_0))
	(diseqE_0 (App_0 x_342 x_343) (DeqR_0 x_344))))
(assert (forall ((x_345 Nat_0) (x_346 E_0) (x_347 Nat_0) (x_348 E_0))
	(=> (diseqNat_0 x_345 x_347)
	    (diseqE_0 (EnqL_0 x_345 x_346) (EnqL_0 x_347 x_348)))))
(assert (forall ((x_345 Nat_0) (x_346 E_0) (x_347 Nat_0) (x_348 E_0))
	(=> (diseqE_0 x_346 x_348)
	    (diseqE_0 (EnqL_0 x_345 x_346) (EnqL_0 x_347 x_348)))))
(assert (forall ((x_349 E_0) (x_350 Nat_0) (x_351 E_0) (x_352 Nat_0))
	(=> (diseqE_0 x_349 x_351)
	    (diseqE_0 (EnqR_0 x_349 x_350) (EnqR_0 x_351 x_352)))))
(assert (forall ((x_349 E_0) (x_350 Nat_0) (x_351 E_0) (x_352 Nat_0))
	(=> (diseqNat_0 x_350 x_352)
	    (diseqE_0 (EnqR_0 x_349 x_350) (EnqR_0 x_351 x_352)))))
(assert (forall ((x_353 E_0) (x_354 E_0))
	(=> (diseqE_0 x_353 x_354)
	    (diseqE_0 (DeqL_0 x_353) (DeqL_0 x_354)))))
(assert (forall ((x_355 E_0) (x_356 E_0))
	(=> (diseqE_0 x_355 x_356)
	    (diseqE_0 (DeqR_0 x_355) (DeqR_0 x_356)))))
(assert (forall ((x_357 E_0) (x_358 E_0) (x_359 E_0) (x_360 E_0))
	(=> (diseqE_0 x_357 x_359)
	    (diseqE_0 (App_0 x_357 x_358) (App_0 x_359 x_360)))))
(assert (forall ((x_357 E_0) (x_358 E_0) (x_359 E_0) (x_360 E_0))
	(=> (diseqE_0 x_358 x_360)
	    (diseqE_0 (App_0 x_357 x_358) (App_0 x_359 x_360)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_14)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_174 Nat_0) (x_50 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=>	(and (gt_0 x_0 Z_14)
			(take_0 x_50 x_174 xs_0)
			(minus_0 x_174 x_0 (Z_15 Z_14)))
		(take_0 (cons_0 z_0 x_50) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_14)
	    (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_14)
	    (take_0 nil_0 x_0 nil_0))))
(declare-fun tail_1 (list_0 list_0) Bool)
(assert (forall ((x_53 list_0) (y_1 Nat_0))
	(tail_1 x_53 (cons_0 y_1 x_53))))
(assert (tail_1 nil_0 nil_0))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_175 Nat_0) (x_56 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=>	(and (length_0 x_56 l_0)
			(add_0 x_175 (Z_15 Z_14) x_56))
		(length_0 x_175 (cons_0 y_2 l_0)))))
(assert (length_0 Z_14 nil_0))
(declare-fun last_0 (Maybe_0 list_0) Bool)
(assert (forall ((x_58 Maybe_0) (x_4 Nat_0) (x_5 list_0) (y_3 Nat_0))
	(=> (last_0 x_58 (cons_0 x_4 x_5))
	    (last_0 x_58 (cons_0 y_3 (cons_0 x_4 x_5))))))
(assert (forall ((y_3 Nat_0))
	(last_0 (Just_0 y_3) (cons_0 y_3 nil_0))))
(assert (last_0 Nothing_0 nil_0))
(declare-fun init_0 (list_0 list_0) Bool)
(assert (forall ((x_63 list_0) (x_7 Nat_0) (x_8 list_0) (y_4 Nat_0))
	(=> (init_0 x_63 (cons_0 x_7 x_8))
	    (init_0 (cons_0 y_4 x_63) (cons_0 y_4 (cons_0 x_7 x_8))))))
(assert (forall ((y_4 Nat_0))
	(init_0 nil_0 (cons_0 y_4 nil_0))))
(assert (init_0 nil_0 nil_0))
(declare-fun fstR_0 (Maybe_0 Q_0) Bool)
(assert (forall ((x_15 Nat_0) (x_16 list_0) (x_11 Nat_0) (y_6 Nat_0) (x_10 list_0))
	(fstR_0 (Just_0 y_6) (Q_1 (cons_0 x_11 (cons_0 x_15 x_16)) (cons_0 y_6 x_10)))))
(assert (forall ((x_13 Nat_0) (x_11 Nat_0) (x_10 list_0))
	(fstR_0 (Just_0 x_13) (Q_1 (cons_0 x_11 nil_0) (cons_0 x_13 x_10)))))
(assert (forall ((y_6 Nat_0) (x_10 list_0))
	(fstR_0 (Just_0 y_6) (Q_1 nil_0 (cons_0 y_6 x_10)))))
(assert (forall ((x_15 Nat_0) (x_16 list_0) (x_11 Nat_0))
	(fstR_0 Nothing_0 (Q_1 (cons_0 x_11 (cons_0 x_15 x_16)) nil_0))))
(assert (forall ((x_11 Nat_0))
	(fstR_0 (Just_0 x_11) (Q_1 (cons_0 x_11 nil_0) nil_0))))
(assert (fstR_0 Nothing_0 (Q_1 nil_0 nil_0)))
(declare-fun fromMaybe_0 (Nat_0 Nat_0 Maybe_0) Bool)
(assert (forall ((x_74 Nat_0) (x_17 Nat_0))
	(fromMaybe_0 x_74 x_17 (Just_0 x_74))))
(assert (forall ((x_17 Nat_0))
	(fromMaybe_0 x_17 x_17 Nothing_0)))
(declare-fun fromMaybe_1 (Q_0 Q_0 Maybe_1) Bool)
(assert (forall ((x_76 Q_0) (x_18 Q_0))
	(fromMaybe_1 x_76 x_18 (Just_1 x_76))))
(assert (forall ((x_18 Q_0))
	(fromMaybe_1 x_18 x_18 Nothing_1)))
(declare-fun empty_1 (Q_0) Bool)
(assert (empty_1 (Q_1 nil_0 nil_0)))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_79 list_0) (x_19 Nat_0))
	(=> (le_0 x_19 Z_14)
	    (drop_0 x_79 x_19 x_79))))
(assert (forall ((x_176 Nat_0) (x_80 list_0) (z_6 Nat_0) (xs_2 list_0) (x_19 Nat_0))
	(=>	(and (gt_0 x_19 Z_14)
			(drop_0 x_80 x_176 xs_2)
			(minus_0 x_176 x_19 (Z_15 Z_14)))
		(drop_0 x_80 x_19 (cons_0 z_6 xs_2)))))
(assert (forall ((x_82 list_0) (x_19 Nat_0))
	(=> (le_0 x_19 Z_14)
	    (drop_0 x_82 x_19 x_82))))
(assert (forall ((x_19 Nat_0))
	(=> (gt_0 x_19 Z_14)
	    (drop_0 nil_0 x_19 nil_0))))
(declare-fun halve_0 (pair_2 list_0) Bool)
(assert (forall ((x_86 list_0) (x_87 list_0) (x_84 Nat_0) (k_0 Nat_0) (x_20 list_0))
	(=>	(and (take_0 x_86 k_0 x_20)
			(drop_0 x_87 k_0 x_20)
			(length_0 x_84 x_20)
			(div_0 k_0 x_84 (Z_15 (Z_15 Z_14))))
		(halve_0 (pair_3 x_86 x_87) x_20))))
(declare-fun x_21 (list_0 list_0 list_0) Bool)
(assert (forall ((x_89 list_0) (z_7 Nat_0) (xs_3 list_0) (y_10 list_0))
	(=> (x_21 x_89 xs_3 y_10)
	    (x_21 (cons_0 z_7 x_89) (cons_0 z_7 xs_3) y_10))))
(assert (forall ((x_90 list_0))
	(x_21 x_90 nil_0 x_90)))
(declare-fun list_1 (list_0 E_0) Bool)
(assert (forall ((x_91 list_0) (x_92 list_0) (x_93 list_0) (a_0 E_0) (b_0 E_0))
	(=>	(and (list_1 x_92 a_0)
			(list_1 x_93 b_0)
			(x_21 x_91 x_92 x_93))
		(list_1 x_91 (App_0 a_0 b_0)))))
(assert (forall ((x_95 list_0) (x_96 list_0) (e_4 E_0))
	(=>	(and (list_1 x_96 e_4)
			(init_0 x_95 x_96))
		(list_1 x_95 (DeqR_0 e_4)))))
(assert (forall ((x_99 list_0) (x_100 list_0) (e_3 E_0))
	(=>	(and (list_1 x_99 e_3)
			(tail_1 x_100 x_99))
		(list_1 x_100 (DeqL_0 e_3)))))
(assert (forall ((x_101 list_0) (x_102 list_0) (e_2 E_0) (z_8 Nat_0))
	(=>	(and (list_1 x_102 e_2)
			(x_21 x_101 x_102 (cons_0 z_8 nil_0)))
		(list_1 x_101 (EnqR_0 e_2 z_8)))))
(assert (forall ((x_105 list_0) (y_11 Nat_0) (e_1 E_0))
	(=> (list_1 x_105 e_1)
	    (list_1 (cons_0 y_11 x_105) (EnqL_0 y_11 e_1)))))
(assert (list_1 nil_0 Empty_0))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_107 list_0) (x_108 list_0) (y_12 Nat_0) (xs_4 list_0))
	(=>	(and (reverse_0 x_108 xs_4)
			(x_21 x_107 x_108 (cons_0 y_12 nil_0)))
		(reverse_0 x_107 (cons_0 y_12 xs_4)))))
(assert (reverse_0 nil_0 nil_0))
(declare-fun x_25 (Q_0 Q_0 Q_0) Bool)
(assert (forall ((x_112 list_0) (x_113 list_0) (x_114 list_0) (x_115 list_0) (vs_0 list_0) (ws_0 list_0) (xs_5 list_0) (ys_0 list_0))
	(=>	(and (reverse_0 x_112 ys_0)
			(x_21 x_113 xs_5 x_112)
			(reverse_0 x_114 vs_0)
			(x_21 x_115 ws_0 x_114))
		(x_25 (Q_1 x_113 x_115) (Q_1 xs_5 ys_0) (Q_1 vs_0 ws_0)))))
(declare-fun enqL_1 (Q_0 Nat_0 Q_0) Bool)
(assert (forall ((z_9 Nat_0) (x_28 list_0) (xs_6 list_0) (x_27 Nat_0))
	(enqL_1 (Q_1 (cons_0 x_27 xs_6) (cons_0 z_9 x_28)) x_27 (Q_1 xs_6 (cons_0 z_9 x_28)))))
(assert (forall ((x_119 list_0) (as_0 list_0) (bs_0 list_0) (xs_6 list_0) (x_27 Nat_0))
	(=>	(and (reverse_0 x_119 bs_0)
			(halve_0 (pair_3 as_0 bs_0) (cons_0 x_27 xs_6)))
		(enqL_1 (Q_1 as_0 x_119) x_27 (Q_1 xs_6 nil_0)))))
(declare-fun mkQ_0 (Q_0 list_0 list_0) Bool)
(assert (forall ((x_31 Nat_0) (x_32 list_0) (z_10 Nat_0) (x_30 list_0))
	(mkQ_0 (Q_1 (cons_0 z_10 x_30) (cons_0 x_31 x_32)) (cons_0 z_10 x_30) (cons_0 x_31 x_32))))
(assert (forall ((x_123 list_0) (as_2 list_0) (bs_2 list_0) (z_10 Nat_0) (x_30 list_0))
	(=>	(and (reverse_0 x_123 bs_2)
			(halve_0 (pair_3 as_2 bs_2) (cons_0 z_10 x_30)))
		(mkQ_0 (Q_1 as_2 x_123) (cons_0 z_10 x_30) nil_0))))
(assert (forall ((x_126 list_0) (as_1 list_0) (bs_1 list_0) (y_15 list_0))
	(=>	(and (reverse_0 x_126 bs_1)
			(halve_0 (pair_3 as_1 bs_1) y_15))
		(mkQ_0 (Q_1 x_126 as_1) nil_0 y_15))))
(declare-fun deqL_1 (Maybe_1 Q_0) Bool)
(assert (forall ((x_128 Q_0) (x_38 Nat_0) (xs_7 list_0) (z_11 list_0))
	(=> (mkQ_0 x_128 xs_7 z_11)
	    (deqL_1 (Just_1 x_128) (Q_1 (cons_0 x_38 xs_7) z_11)))))
(assert (forall ((x_36 Nat_0) (x_37 list_0) (x_34 Nat_0))
	(deqL_1 Nothing_1 (Q_1 nil_0 (cons_0 x_34 (cons_0 x_36 x_37))))))
(assert (forall ((x_131 Q_0) (x_34 Nat_0))
	(=> (empty_1 x_131)
	    (deqL_1 (Just_1 x_131) (Q_1 nil_0 (cons_0 x_34 nil_0))))))
(assert (deqL_1 Nothing_1 (Q_1 nil_0 nil_0)))
(declare-fun deqR_1 (Maybe_1 Q_0) Bool)
(assert (forall ((x_133 Q_0) (x_44 Nat_0) (x_45 list_0) (x_40 Nat_0) (y_18 Nat_0) (ys_2 list_0))
	(=> (mkQ_0 x_133 (cons_0 x_40 (cons_0 x_44 x_45)) ys_2)
	    (deqR_1 (Just_1 x_133) (Q_1 (cons_0 x_40 (cons_0 x_44 x_45)) (cons_0 y_18 ys_2))))))
(assert (forall ((x_135 Q_0) (x_42 Nat_0) (x_43 list_0) (x_40 Nat_0))
	(=> (mkQ_0 x_135 (cons_0 x_40 nil_0) x_43)
	    (deqR_1 (Just_1 x_135) (Q_1 (cons_0 x_40 nil_0) (cons_0 x_42 x_43))))))
(assert (forall ((x_140 Q_0) (y_18 Nat_0) (ys_2 list_0))
	(=> (mkQ_0 x_140 nil_0 ys_2)
	    (deqR_1 (Just_1 x_140) (Q_1 nil_0 (cons_0 y_18 ys_2))))))
(assert (forall ((x_44 Nat_0) (x_45 list_0) (x_40 Nat_0))
	(deqR_1 Nothing_1 (Q_1 (cons_0 x_40 (cons_0 x_44 x_45)) nil_0))))
(assert (forall ((x_145 Q_0) (x_40 Nat_0))
	(=> (empty_1 x_145)
	    (deqR_1 (Just_1 x_145) (Q_1 (cons_0 x_40 nil_0) nil_0)))))
(assert (deqR_1 Nothing_1 (Q_1 nil_0 nil_0)))
(declare-fun enqR_1 (Q_0 Q_0 Nat_0) Bool)
(assert (forall ((x_147 Q_0) (xs_8 list_0) (ys_3 list_0) (y_19 Nat_0))
	(=> (mkQ_0 x_147 xs_8 (cons_0 y_19 ys_3))
	    (enqR_1 x_147 (Q_1 xs_8 ys_3) y_19))))
(declare-fun queue_0 (Q_0 E_0) Bool)
(assert (forall ((x_149 Q_0) (x_150 Q_0) (x_151 Q_0) (a_1 E_0) (b_1 E_0))
	(=>	(and (queue_0 x_150 a_1)
			(queue_0 x_151 b_1)
			(x_25 x_149 x_150 x_151))
		(queue_0 x_149 (App_0 a_1 b_1)))))
(assert (forall ((x_154 Q_0) (x_155 Maybe_1) (r_0 Q_0) (e_8 E_0))
	(=>	(and (deqR_1 x_155 r_0)
			(fromMaybe_1 x_154 r_0 x_155)
			(queue_0 r_0 e_8))
		(queue_0 x_154 (DeqR_0 e_8)))))
(assert (forall ((x_158 Q_0) (x_159 Maybe_1) (q_2 Q_0) (e_7 E_0))
	(=>	(and (deqL_1 x_159 q_2)
			(fromMaybe_1 x_158 q_2 x_159)
			(queue_0 q_2 e_7))
		(queue_0 x_158 (DeqL_0 e_7)))))
(assert (forall ((x_161 Q_0) (x_162 Q_0) (e_6 E_0) (z_13 Nat_0))
	(=>	(and (queue_0 x_162 e_6)
			(enqR_1 x_161 x_162 z_13))
		(queue_0 x_161 (EnqR_0 e_6 z_13)))))
(assert (forall ((x_164 Q_0) (x_165 Q_0) (y_20 Nat_0) (e_5 E_0))
	(=>	(and (queue_0 x_165 e_5)
			(enqL_1 x_164 y_20 x_165))
		(queue_0 x_164 (EnqL_0 y_20 e_5)))))
(assert (forall ((x_167 Q_0))
	(=> (empty_1 x_167)
	    (queue_0 x_167 Empty_0))))
(assert (forall ((x_169 Q_0) (x_170 Maybe_0) (x_171 list_0) (x_172 Maybe_0) (e_9 E_0))
	(=>	(and (diseqMaybe_0 x_170 x_172)
			(queue_0 x_169 e_9)
			(fstR_0 x_170 x_169)
			(list_1 x_171 e_9)
			(last_0 x_172 x_171))
		false)))
(check-sat)
