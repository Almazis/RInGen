(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_2 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_6 Nat_0) (x_5 Nat_0))
	(=> (= x_6 (S_0 x_5))
	    (unS_2 x_5 x_6))))
(assert (isZ_0 Z_0))
(assert (forall ((x_7 Nat_0))
	(isS_0 (S_0 x_7))))
(assert (forall ((x_8 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_8))))
(assert (forall ((x_9 Nat_0))
	(diseqNat_0 (S_0 x_9) Z_0)))
(assert (forall ((x_10 Nat_0) (x_11 Nat_0))
	(=> (diseqNat_0 x_10 x_11)
	    (diseqNat_0 (S_0 x_10) (S_0 x_11)))))
(declare-fun P_0 (Nat_0) Bool)
(declare-fun L_0 (Nat_0) Bool)
(declare-fun L_1 (Nat_0) Bool)
(assert (forall ((x_0 Nat_0))
	(=>	(and (diseqNat_0 x_0 Z_0)
			(= x_0 Z_0))
		(L_0 x_0))))
(assert (forall ((x_0 Nat_0))
	(=>	(and (diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 Z_0))
		(L_1 x_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 Z_0)
			(= y_0 (S_0 (S_0 x_1)))
			(L_0 x_1)
			(L_1 x_1))
		(L_0 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 Z_0)
			(= y_0 (S_0 (S_0 x_1)))
			(= x_1 Z_0)
			(L_1 x_1))
		(L_0 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 Z_0)
			(= y_0 (S_0 (S_0 x_1)))
			(L_0 x_1)
			(= x_1 (S_0 (S_0 Z_0))))
		(L_0 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 Z_0)
			(= y_0 (S_0 (S_0 x_1)))
			(= x_1 Z_0)
			(= x_1 (S_0 (S_0 Z_0))))
		(L_0 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 (S_0 (S_0 Z_0)))
			(= y_0 (S_0 (S_0 x_1)))
			(L_0 x_1)
			(L_1 x_1))
		(L_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 (S_0 (S_0 Z_0)))
			(= y_0 (S_0 (S_0 x_1)))
			(= x_1 Z_0)
			(L_1 x_1))
		(L_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 (S_0 (S_0 Z_0)))
			(= y_0 (S_0 (S_0 x_1)))
			(L_0 x_1)
			(= x_1 (S_0 (S_0 Z_0))))
		(L_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0))
	(=>	(and (diseqNat_0 y_0 (S_0 (S_0 Z_0)))
			(= y_0 (S_0 (S_0 x_1)))
			(= x_1 Z_0)
			(= x_1 (S_0 (S_0 Z_0))))
		(L_1 y_0))))
(assert (forall ((x_2 Nat_0))
	(=>	(and true
			(= x_2 (S_0 Z_0))
			(L_0 x_2)
			(L_1 x_2))
		false)))
(assert (forall ((x_2 Nat_0))
	(=>	(and true
			(= x_2 (S_0 Z_0))
			(= x_2 Z_0)
			(L_1 x_2))
		false)))
(assert (forall ((x_2 Nat_0))
	(=>	(and true
			(= x_2 (S_0 Z_0))
			(L_0 x_2)
			(= x_2 (S_0 (S_0 Z_0))))
		false)))
(assert (forall ((x_2 Nat_0))
	(=>	(and true
			(= x_2 (S_0 Z_0))
			(= x_2 Z_0)
			(= x_2 (S_0 (S_0 Z_0))))
		false)))
(check-sat)
