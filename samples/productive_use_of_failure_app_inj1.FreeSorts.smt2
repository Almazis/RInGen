(set-logic UF)
(declare-sort Nat_4 0)
(declare-fun S_2 (Nat_4) Nat_4)
(declare-fun Z_16 () Nat_4)
(declare-fun diseqNat_5 (Nat_4 Nat_4) Bool)
(declare-sort list_2 0)
(declare-fun nil_2 () list_2)
(declare-fun cons_2 (Nat_4 list_2) list_2)
(declare-fun diseqlist_3 (list_2 list_2) Bool)
(declare-fun x_323 (list_2 list_2 list_2) Bool)
(assert (forall ((x_335 Nat_4))
	(diseqNat_5 (S_2 x_335) Z_16)))
(assert (forall ((x_336 Nat_4))
	(diseqNat_5 Z_16 (S_2 x_336))))
(assert (forall ((x_337 Nat_4) (x_338 Nat_4))
	(=> (diseqNat_5 x_337 x_338) (diseqNat_5 (S_2 x_337) (S_2 x_338)))))
(assert (forall ((x_345 Nat_4) (x_346 list_2))
	(diseqlist_3 nil_2 (cons_2 x_345 x_346))))
(assert (forall ((x_347 Nat_4) (x_348 list_2))
	(diseqlist_3 (cons_2 x_347 x_348) nil_2)))
(assert (forall ((x_349 Nat_4) (x_350 list_2) (x_351 Nat_4) (x_352 list_2))
	(=> (diseqNat_5 x_349 x_351) (diseqlist_3 (cons_2 x_349 x_350) (cons_2 x_351 x_352)))))
(assert (forall ((x_349 Nat_4) (x_350 list_2) (x_351 Nat_4) (x_352 list_2))
	(=> (diseqlist_3 x_350 x_352) (diseqlist_3 (cons_2 x_349 x_350) (cons_2 x_351 x_352)))))
(assert (forall ((x_326 list_2) (z_17 Nat_4) (xs_1 list_2) (y_13 list_2))
	(=> (x_323 x_326 xs_1 y_13) (x_323 (cons_2 z_17 x_326) (cons_2 z_17 xs_1) y_13))))
(assert (forall ((x_327 list_2))
	(x_323 x_327 nil_2 x_327)))
(assert (forall ((x_328 list_2) (xs_2 list_2) (ys_0 list_2) (zs_0 list_2))
	(=> (and (diseqlist_3 ys_0 zs_0) (x_323 x_328 xs_2 ys_0) (x_323 x_328 xs_2 zs_0)) false)))
(check-sat)
(get-model)
